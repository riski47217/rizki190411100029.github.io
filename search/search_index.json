{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"changelog/","text":"Persamaan Deferensial Biasa \u00b6 Sebelum mempelajari materi persamaan deferensial biasa, kita harus mengenal definisi persamaan deferensial terlebih dahulu. Persamaan diferensial adalah persamaan matematis untuk fungsi satu variabel / lebih, yang dapat menghubungkan nilai fungsi itu sendiri dan turunannya dalam berbagai orde. Persamaan diferensial ini memegang peranan penting dalam berbagai aspek kehidupan sehari-hari. A. INITIAL VALUE PROBLEMS \u00b6 Initial value problems adalah suatu permasalahan yang sering kali ditemukan pada suatu proses dekomposisi zat kimia atau polutan dalam suatu reaktor Dengan tidak tersedianya informasi yang cukup untuk menyelesaikannya, hal ini mempersulit penyelesaian dari suatu persamaan deferensial tersebut. Untuk menyelesaikan beberapa permasalahan pada suatu persamaan deferensial ini, terdapat beberapa metode yang dapat dilakukan: Metode Euler Metode Heun Metode Titik Tengah Metode Runge-Kutta Orde 4 Metode multistep linier B. DEFINISI PERSAMAAN DEFERENSIAL BIASA \u00b6 Persamaan diferensial biasa adalah persamaan yang dapat memuat satu atau lebih turunan fungsi satu peubah bebas yang belum diketahui. Persamaan deferensial parsial adalah fungsi yang terdiri dari lebih dari satu peubah bebas. C. SOLUSI \u00b6 Fungsi y = f(x) disebut solusi jika fungsi tersebut disubtitusikan ke PDB menghasilkan kesamaan yang berlaku untuk semua nilai x (akan diperoleh persamaan identitas) Solusi Umum dan Solusi Khusus Apabila fungsi y = f(x) memuat konstanta sembarang, maka solusi disebut solusi umum, apabila sebaliknya disebut solusi khusus. D. PERSAMAAN DEFERENSIAL BIASA ORDE 1 \u00b6 1.Variabel terpisah Bentuk umum persamaan deferensial biasa dengan variabel terpisah : $$ g\\left( y\\right) dy=f\\left( x\\right) dx $$ Untuk cara penyelesaian yaitu dengan integralkan kedua ruas : $$ \\int g\\left( y\\right) dy=\\int f\\left( x\\right) dx $$ 2.Koefisien fungsi homogen Fungsi homogen Fungsi A(x,y) disebut fungsi homogen dengan derajat n, apabila pada A(kx,ky) = kA(x,y), k konstanta sembarang. Persamaan deferensial biasa yg dapat dituliskan dalam bentuk : $$ y'=\\dfrac{A\\left( x,y\\right) }{B\\left( x,y\\right) } $$ Dengan A,B fungsi homogen dengan derajat yang sama disebut persamaan deferensial biasa dengan koefisien fungsi homogen. Untuk cara penyelesaian yaitu dengan menggunakan substitusi y = ux, u = u(x) : $$ y'=u'x+u $$ \\[ \\dfrac{dy}{dx}=x\\dfrac{du}{dx}+u \\] \\[ dy=xdu+udx \\] 3.Linier Persamaan deferensial biasa orde satu disebut linier, apabila dapat ditulis dalam bentuk : Untuk cara penyelesaian yaitu dengan kalikan dengan faktor integral $$ e^ {\\int P\\left( x\\right) dx} $$ Setelah itu integralkan kedua ruas terhadap x : $$ ye^{\\int P\\left( x\\right) dx}=\\int e^{\\int p\\left( x\\right) dx}r\\left( x\\right) dx+C $$ E. TRAYEKTORI ORTOGONAL \u00b6 Trayektori ortogonal adalah keluarga kurva yang ortogonal / tegak lurus terhadap keluarga kurva lain. Cara untuk mendapatkan trayektori ortogonal dari suatu kurva adalah sebagai berikut : 1.Turunkan srcara implisit f(x,y) = c terhadap x, nyatakan parameter c dalam x dan y. 2.Karena tegak lurus maka trayektori ortogonal (TO) harus memenuhi : $$ y'=-\\dfrac{1}{Dxf\\left( x,y\\right) } $$ TO akan didapatkan dengan mencari solusi dari fungsi tersebut F. PERSAMAAN DEFERENSIAL BIASA ORDE 2 \u00b6 Bentuk Umum : $$ s\\left( x\\right) y''+p\\left( x\\right) y'+g\\left( x\\right) y=r\\left( x\\right) $$ s(x),p(x),g(x) disebut koefisien Apabila r(x) = 0, maka Persamaan Deferensial tersebut disebut homogen, apabila sebaliknya disebut non homogen. 1.Persamaan Deferensial Biasa Orde Dua Homogen dengan Koefisien Konstan Bentuk Umum : $$ ay''+by'+cy=0 $$ Dimana a, b, c konstanta sembarang. Solusi Umum : - Apabila y1 dan y2 solusi PD (i) dan y1,y2 bebas linier, maka y1 dan y2 disebut solusi basis PD (i). - y1,y2 disebut bebas linier apabila : $$ W=\\begin{vmatrix} y_{1} & y_{2} \\ y_{1}' & y_{2}' \\end{vmatrix} $$ Apabila y1, y2 solusi basis, maka Solusi Umum PD (i) disebut Solusi Homogen, yaitu : $$ y=C_{1}y_{1},+C_{2}y_{2} $$ C1, C2 konstanta. 2.Persamaan Deferensial Biasa Orde Dua Non Homogen dengan Koefisien Konstan Bentuk Umum : $$ ay''+by'+cy=0 $$ dengan $$ r\\left( x\\right) \\neq 0 $$ Solusi total : $$ y=y_{h}+y_{p} $$ Dimana yh = solusi Persamaan Deferensial homogen, yp = solusi Persamaan Deferensial non homogen Menentukan yp : \u00b6 1.Metoda koefisien tak tentu Pilih yp yang sesuai dengan r(x), substitusikan ke Persamaan Deferensial. a. Kasus khusus b. Apabila r(x) merupakan solusi basis PD homogen, maka kalikan yp dengan x (atau x2, jika akar PK PD Homogen kembar) c. Apabila r(x) merupakan penjumlahan drai 2 bentuk pada kasus a), maka yp juga merupakan jumlah 2 bentuk yp yang bersesuaian. 2.Metoda variasi parameter Metoda ini digunakan untuk memecahkan persamaan yang tidak dapat diselesaikan dengan metode koefisien tak tentu. $$ y''+by'+cy=r(x) $$ Algoritma \u00b6 A. Metode Penyelesaian Initial Value Problems Persamaan Deferensial Biasa \u00b6 1.Metode Euler \u00b6 Metode Euler adalah metode yang paling sederhana yang diturunkan dari deret Taylor. Penyelesaian initial value problems menggunakan metode Euler dilakukan melalui Persamaan : $$ yi+1=yi+f\\left( xi,yi\\right) h $$ dimana i merupakan tahapan iterasi. Algoritma Metode Euler : 1.Tentukan titik awal integrasi x0 dan y0. 2.Tentukan jumlah iterasi n dan step size h yang digunakan. 3.Lakukan integrasi menggunakan persamaan diatas. 2.Metode Heun \u00b6 Metode Heun adalah salah satu peningkatan dari metode Euler. Metode ini melibatkan 2 buah persamaan. Persamaan pertama disebut sebagai persamaan prediktor yang digunakan untuk memprediksi nilai integrasi awal. $$ y_{i+1}^{0}=yi+f\\left( x_{i},yi\\right) h $$ Persamaan (10.2). $$ y_{i+1}=y_{i}+\\dfrac{f\\left( xi,yi\\right) +f\\begin{pmatrix} \\ x_{i+1},y_{i+1}^{0} \\end{pmatrix}}{2}h $$ Persamaan (10.3). Algoritma Metode Heun : 1.Tentukan titik awal integrasi x0 dan y0. 2.Tentukan jumlah iterasi n dan step size h yang digunakan. 3.Lakukan prediksi nilai awal dengan Persamaan (10.2). 4.Lakukan koreksi nilai awal menggunakan Persamaan (10.3). 5.Lakukan koreksi terhadap nilai koreksi yang dihasilkan sebelumnya menggunakan Persamaan (10.3). 3.Metode Titik Tengah \u00b6 Metode titik tengah adalah metode yang menggunakan setengah step size pada metode Euler untuk melakukan estimasi terhadap integral suatu persamaan diferensial. Metode ini melakukan perhitungan melalui dua tahapan yaitu: menghitung nilai estimasi integral pada setengah step size dan menghitung nilai integral menggunkan hasil perhitungan setengah step size sebelumnya. $$ y_{{i+\\dfrac{1}{2}}}=y_{i}+f\\left( x_{i},y_{i}\\right) \\dfrac{h}{2} $$ Persamaan (10.4). $$ y_{i+1}=y_{i}+f\\left( x_{i}+\\dfrac{1}{2},y_{i},\\dfrac{1}{2}\\right) h $$ Persamaan (10.5). Algoritma Metode Tengah : 1.Tentukan titik awal integrasi x0 dan y0. 2.Tentukan jumlah iterasi n dan step size h yang digunakan. 3.Lakukan integrasi pada setengah tahapan iterasi menggunakan Persamaan (10.4). 4.Lakukan iterasi pada setengah tahapan selanjutnya menggunakan Persamaan (10.5). 4.Metode Runge-Kutta Orde 4 \u00b6 Runge-Kutta orde 4 adalah metode yang paling sering digunakan dalam penyelesaian persamaan diferensial. Metode ini dapat memperoleh akurasi deret Taylor tanpa memerlukan diferensiasi orde yang lebih tinggi. $$ y_{i+1}=y_{i}+\\dfrac{1}{6}\\left( k_{1}+2k_{2}+2k_{3}+k_{4}\\right) h $$ Persamaan (10.6). Algoritma Runge-Kutta Orde 4 : 1.Tentukan titik awal integrasi x0 dan y0. 2.Tentukan jumlah iterasi n dan step size h yang digunakan. 3.Lakukan integrasi menggunakan Persamaan (10.6). 5.Metode Multistep Linier \u00b6 Metode multistep linier adalah metode yang dikembangkan untuk mengatasi masalah jika kita dapat menggunakan kembali perkiraan sebelumnya, kita dapat memperoleh akurasi tambahan tanpa menimbulkan penalti kinerja yang terkait dengan evaluasi fungsi tambahan. $$ y_{i+2}=y_{i+1}+\\dfrac{h}{2}\\left( 3f\\left( x_{i+1},y_{i+1}\\right) -f\\left( x_{i},y_{i}\\right) \\right) $$ Persamaan (10.11). Algoritma Multistep Linier : 1.Tentukan titik awal integrasi x0 dan y0. 2.Tentukan jumlah iterasi n dan step size h yang digunakan. 3.Lakukan pendekatan pada iterasi ke-1 menggunakan metode Euler. 4.Lakukan integrasi ke-2 sampai n menggunakan Persamaan (10.11). 6.Metode Deret Taylor \u00b6 Problem yang akan diselesaikan menggunakan metode deret Taylor adalah persamaan deferensial biasa orde satu : $$ \\dfrac{dy\\left( x\\right) }{dx}=f\\left( x,y\\right) ,y\\left( x_{0}\\right) =y_{0} $$ Estimasi pada beberapa titik : $$ y\\left( x_{0}+h\\right), y\\left( x_{0}+2h\\right), y\\left( x_{0}+3h\\right),... $$ Dihitung dengan menggunakan pemotongan expansi deret Taylor. Algoritma Deret Taylor : 1.Tentukan titik awal integrasi x0 dan y0. 2.Tentukan jumlah iterasi n dan step size h yang digunakan. 3.Tentukan turunan-turunan yang diperlukan untuk menyelesaikan permasalahan . 4.Hasil dari perhitungan 7.Metode Deret MacLaurin \u00b6 Deret MacLaurin adalah metode yang masih berhubungan erat dengan Deret Taylor. Deret MacLaurin merupakan kasus khusus dari deret Taylor, yaitu deret Taylor dengan fungsi yang di ekspansi di sekitar c = 0. Deret Maclaurin disebut juga sebagai Deret Taylor Baku. Formula deret Maclaurin : $$ f\\left( x\\right) =f\\left( 0\\right) +\\dfrac{f'\\left( 0\\right) }{1!}x+\\dfrac{f''\\left( 0\\right) }{2!}x^{2}+\\dfrac{f'''\\left( 0\\right) }{3!}x^{3}+\\ldots $$ Algoritma Deret MacLaurin (sama seperti deret Taylor): 1.Tentukan titik awal integrasi x0 dan y0. 2.Tentukan jumlah iterasi n dan step size h yang digunakan. 3.Tentukan turunan-turunan yang diperlukan untuk menyelesaikan permasalahan . 4.Hasil dari perhitungan Coding \u00b6 Program Python Deret MacLaurin \u00b6 Program untuk persamaan deferensial $$ e^{x-\\cos \\left( x\\right) } $$ sampai error yang dihasilkan kurang dari 0.001 untuk x=1 import numpy as np x = 1 e = 0 def f(x): return e**x - np.cos(x) a = np.zeros(40) b = np.zeros(40) c = np.zeros(40) a[0] = 1 b[0] = 8 c[0] = (a[0] + b[0])/2 for n in range(9): if f(a[n])*f(c[n])<0: a[n+1] = a[n] b[n+1] = c[n] else: a[n+1] = c[n] b[n+1] = b[n] c[n+1] = (a[n+1] + b[n+1])/2 print(c[n+1],f(c[n+1]))","title":"Persamaan Deferensial Biasa"},{"location":"changelog/#persamaan-deferensial-biasa","text":"Sebelum mempelajari materi persamaan deferensial biasa, kita harus mengenal definisi persamaan deferensial terlebih dahulu. Persamaan diferensial adalah persamaan matematis untuk fungsi satu variabel / lebih, yang dapat menghubungkan nilai fungsi itu sendiri dan turunannya dalam berbagai orde. Persamaan diferensial ini memegang peranan penting dalam berbagai aspek kehidupan sehari-hari.","title":"Persamaan Deferensial Biasa"},{"location":"changelog/#a-initial-value-problems","text":"Initial value problems adalah suatu permasalahan yang sering kali ditemukan pada suatu proses dekomposisi zat kimia atau polutan dalam suatu reaktor Dengan tidak tersedianya informasi yang cukup untuk menyelesaikannya, hal ini mempersulit penyelesaian dari suatu persamaan deferensial tersebut. Untuk menyelesaikan beberapa permasalahan pada suatu persamaan deferensial ini, terdapat beberapa metode yang dapat dilakukan: Metode Euler Metode Heun Metode Titik Tengah Metode Runge-Kutta Orde 4 Metode multistep linier","title":"A. INITIAL VALUE PROBLEMS"},{"location":"changelog/#b-definisi-persamaan-deferensial-biasa","text":"Persamaan diferensial biasa adalah persamaan yang dapat memuat satu atau lebih turunan fungsi satu peubah bebas yang belum diketahui. Persamaan deferensial parsial adalah fungsi yang terdiri dari lebih dari satu peubah bebas.","title":"B. DEFINISI PERSAMAAN DEFERENSIAL BIASA"},{"location":"changelog/#c-solusi","text":"Fungsi y = f(x) disebut solusi jika fungsi tersebut disubtitusikan ke PDB menghasilkan kesamaan yang berlaku untuk semua nilai x (akan diperoleh persamaan identitas) Solusi Umum dan Solusi Khusus Apabila fungsi y = f(x) memuat konstanta sembarang, maka solusi disebut solusi umum, apabila sebaliknya disebut solusi khusus.","title":"C. SOLUSI"},{"location":"changelog/#d-persamaan-deferensial-biasa-orde-1","text":"1.Variabel terpisah Bentuk umum persamaan deferensial biasa dengan variabel terpisah : $$ g\\left( y\\right) dy=f\\left( x\\right) dx $$ Untuk cara penyelesaian yaitu dengan integralkan kedua ruas : $$ \\int g\\left( y\\right) dy=\\int f\\left( x\\right) dx $$ 2.Koefisien fungsi homogen Fungsi homogen Fungsi A(x,y) disebut fungsi homogen dengan derajat n, apabila pada A(kx,ky) = kA(x,y), k konstanta sembarang. Persamaan deferensial biasa yg dapat dituliskan dalam bentuk : $$ y'=\\dfrac{A\\left( x,y\\right) }{B\\left( x,y\\right) } $$ Dengan A,B fungsi homogen dengan derajat yang sama disebut persamaan deferensial biasa dengan koefisien fungsi homogen. Untuk cara penyelesaian yaitu dengan menggunakan substitusi y = ux, u = u(x) : $$ y'=u'x+u $$ \\[ \\dfrac{dy}{dx}=x\\dfrac{du}{dx}+u \\] \\[ dy=xdu+udx \\] 3.Linier Persamaan deferensial biasa orde satu disebut linier, apabila dapat ditulis dalam bentuk : Untuk cara penyelesaian yaitu dengan kalikan dengan faktor integral $$ e^ {\\int P\\left( x\\right) dx} $$ Setelah itu integralkan kedua ruas terhadap x : $$ ye^{\\int P\\left( x\\right) dx}=\\int e^{\\int p\\left( x\\right) dx}r\\left( x\\right) dx+C $$","title":"D. PERSAMAAN DEFERENSIAL BIASA ORDE 1"},{"location":"changelog/#e-trayektori-ortogonal","text":"Trayektori ortogonal adalah keluarga kurva yang ortogonal / tegak lurus terhadap keluarga kurva lain. Cara untuk mendapatkan trayektori ortogonal dari suatu kurva adalah sebagai berikut : 1.Turunkan srcara implisit f(x,y) = c terhadap x, nyatakan parameter c dalam x dan y. 2.Karena tegak lurus maka trayektori ortogonal (TO) harus memenuhi : $$ y'=-\\dfrac{1}{Dxf\\left( x,y\\right) } $$ TO akan didapatkan dengan mencari solusi dari fungsi tersebut","title":"E. TRAYEKTORI ORTOGONAL"},{"location":"changelog/#f-persamaan-deferensial-biasa-orde-2","text":"Bentuk Umum : $$ s\\left( x\\right) y''+p\\left( x\\right) y'+g\\left( x\\right) y=r\\left( x\\right) $$ s(x),p(x),g(x) disebut koefisien Apabila r(x) = 0, maka Persamaan Deferensial tersebut disebut homogen, apabila sebaliknya disebut non homogen. 1.Persamaan Deferensial Biasa Orde Dua Homogen dengan Koefisien Konstan Bentuk Umum : $$ ay''+by'+cy=0 $$ Dimana a, b, c konstanta sembarang. Solusi Umum : - Apabila y1 dan y2 solusi PD (i) dan y1,y2 bebas linier, maka y1 dan y2 disebut solusi basis PD (i). - y1,y2 disebut bebas linier apabila : $$ W=\\begin{vmatrix} y_{1} & y_{2} \\ y_{1}' & y_{2}' \\end{vmatrix} $$ Apabila y1, y2 solusi basis, maka Solusi Umum PD (i) disebut Solusi Homogen, yaitu : $$ y=C_{1}y_{1},+C_{2}y_{2} $$ C1, C2 konstanta. 2.Persamaan Deferensial Biasa Orde Dua Non Homogen dengan Koefisien Konstan Bentuk Umum : $$ ay''+by'+cy=0 $$ dengan $$ r\\left( x\\right) \\neq 0 $$ Solusi total : $$ y=y_{h}+y_{p} $$ Dimana yh = solusi Persamaan Deferensial homogen, yp = solusi Persamaan Deferensial non homogen","title":"F. PERSAMAAN DEFERENSIAL BIASA ORDE 2"},{"location":"changelog/#menentukan-yp","text":"1.Metoda koefisien tak tentu Pilih yp yang sesuai dengan r(x), substitusikan ke Persamaan Deferensial. a. Kasus khusus b. Apabila r(x) merupakan solusi basis PD homogen, maka kalikan yp dengan x (atau x2, jika akar PK PD Homogen kembar) c. Apabila r(x) merupakan penjumlahan drai 2 bentuk pada kasus a), maka yp juga merupakan jumlah 2 bentuk yp yang bersesuaian. 2.Metoda variasi parameter Metoda ini digunakan untuk memecahkan persamaan yang tidak dapat diselesaikan dengan metode koefisien tak tentu. $$ y''+by'+cy=r(x) $$","title":"Menentukan yp :"},{"location":"changelog/#algoritma","text":"","title":"Algoritma"},{"location":"changelog/#a-metode-penyelesaian-initial-value-problems-persamaan-deferensial-biasa","text":"","title":"A. Metode Penyelesaian Initial Value Problems Persamaan Deferensial Biasa"},{"location":"changelog/#1metode-euler","text":"Metode Euler adalah metode yang paling sederhana yang diturunkan dari deret Taylor. Penyelesaian initial value problems menggunakan metode Euler dilakukan melalui Persamaan : $$ yi+1=yi+f\\left( xi,yi\\right) h $$ dimana i merupakan tahapan iterasi. Algoritma Metode Euler : 1.Tentukan titik awal integrasi x0 dan y0. 2.Tentukan jumlah iterasi n dan step size h yang digunakan. 3.Lakukan integrasi menggunakan persamaan diatas.","title":"1.Metode Euler"},{"location":"changelog/#2metode-heun","text":"Metode Heun adalah salah satu peningkatan dari metode Euler. Metode ini melibatkan 2 buah persamaan. Persamaan pertama disebut sebagai persamaan prediktor yang digunakan untuk memprediksi nilai integrasi awal. $$ y_{i+1}^{0}=yi+f\\left( x_{i},yi\\right) h $$ Persamaan (10.2). $$ y_{i+1}=y_{i}+\\dfrac{f\\left( xi,yi\\right) +f\\begin{pmatrix} \\ x_{i+1},y_{i+1}^{0} \\end{pmatrix}}{2}h $$ Persamaan (10.3). Algoritma Metode Heun : 1.Tentukan titik awal integrasi x0 dan y0. 2.Tentukan jumlah iterasi n dan step size h yang digunakan. 3.Lakukan prediksi nilai awal dengan Persamaan (10.2). 4.Lakukan koreksi nilai awal menggunakan Persamaan (10.3). 5.Lakukan koreksi terhadap nilai koreksi yang dihasilkan sebelumnya menggunakan Persamaan (10.3).","title":"2.Metode Heun"},{"location":"changelog/#3metode-titik-tengah","text":"Metode titik tengah adalah metode yang menggunakan setengah step size pada metode Euler untuk melakukan estimasi terhadap integral suatu persamaan diferensial. Metode ini melakukan perhitungan melalui dua tahapan yaitu: menghitung nilai estimasi integral pada setengah step size dan menghitung nilai integral menggunkan hasil perhitungan setengah step size sebelumnya. $$ y_{{i+\\dfrac{1}{2}}}=y_{i}+f\\left( x_{i},y_{i}\\right) \\dfrac{h}{2} $$ Persamaan (10.4). $$ y_{i+1}=y_{i}+f\\left( x_{i}+\\dfrac{1}{2},y_{i},\\dfrac{1}{2}\\right) h $$ Persamaan (10.5). Algoritma Metode Tengah : 1.Tentukan titik awal integrasi x0 dan y0. 2.Tentukan jumlah iterasi n dan step size h yang digunakan. 3.Lakukan integrasi pada setengah tahapan iterasi menggunakan Persamaan (10.4). 4.Lakukan iterasi pada setengah tahapan selanjutnya menggunakan Persamaan (10.5).","title":"3.Metode Titik Tengah"},{"location":"changelog/#4metode-runge-kutta-orde-4","text":"Runge-Kutta orde 4 adalah metode yang paling sering digunakan dalam penyelesaian persamaan diferensial. Metode ini dapat memperoleh akurasi deret Taylor tanpa memerlukan diferensiasi orde yang lebih tinggi. $$ y_{i+1}=y_{i}+\\dfrac{1}{6}\\left( k_{1}+2k_{2}+2k_{3}+k_{4}\\right) h $$ Persamaan (10.6). Algoritma Runge-Kutta Orde 4 : 1.Tentukan titik awal integrasi x0 dan y0. 2.Tentukan jumlah iterasi n dan step size h yang digunakan. 3.Lakukan integrasi menggunakan Persamaan (10.6).","title":"4.Metode Runge-Kutta Orde 4"},{"location":"changelog/#5metode-multistep-linier","text":"Metode multistep linier adalah metode yang dikembangkan untuk mengatasi masalah jika kita dapat menggunakan kembali perkiraan sebelumnya, kita dapat memperoleh akurasi tambahan tanpa menimbulkan penalti kinerja yang terkait dengan evaluasi fungsi tambahan. $$ y_{i+2}=y_{i+1}+\\dfrac{h}{2}\\left( 3f\\left( x_{i+1},y_{i+1}\\right) -f\\left( x_{i},y_{i}\\right) \\right) $$ Persamaan (10.11). Algoritma Multistep Linier : 1.Tentukan titik awal integrasi x0 dan y0. 2.Tentukan jumlah iterasi n dan step size h yang digunakan. 3.Lakukan pendekatan pada iterasi ke-1 menggunakan metode Euler. 4.Lakukan integrasi ke-2 sampai n menggunakan Persamaan (10.11).","title":"5.Metode Multistep Linier"},{"location":"changelog/#6metode-deret-taylor","text":"Problem yang akan diselesaikan menggunakan metode deret Taylor adalah persamaan deferensial biasa orde satu : $$ \\dfrac{dy\\left( x\\right) }{dx}=f\\left( x,y\\right) ,y\\left( x_{0}\\right) =y_{0} $$ Estimasi pada beberapa titik : $$ y\\left( x_{0}+h\\right), y\\left( x_{0}+2h\\right), y\\left( x_{0}+3h\\right),... $$ Dihitung dengan menggunakan pemotongan expansi deret Taylor. Algoritma Deret Taylor : 1.Tentukan titik awal integrasi x0 dan y0. 2.Tentukan jumlah iterasi n dan step size h yang digunakan. 3.Tentukan turunan-turunan yang diperlukan untuk menyelesaikan permasalahan . 4.Hasil dari perhitungan","title":"6.Metode Deret Taylor"},{"location":"changelog/#7metode-deret-maclaurin","text":"Deret MacLaurin adalah metode yang masih berhubungan erat dengan Deret Taylor. Deret MacLaurin merupakan kasus khusus dari deret Taylor, yaitu deret Taylor dengan fungsi yang di ekspansi di sekitar c = 0. Deret Maclaurin disebut juga sebagai Deret Taylor Baku. Formula deret Maclaurin : $$ f\\left( x\\right) =f\\left( 0\\right) +\\dfrac{f'\\left( 0\\right) }{1!}x+\\dfrac{f''\\left( 0\\right) }{2!}x^{2}+\\dfrac{f'''\\left( 0\\right) }{3!}x^{3}+\\ldots $$ Algoritma Deret MacLaurin (sama seperti deret Taylor): 1.Tentukan titik awal integrasi x0 dan y0. 2.Tentukan jumlah iterasi n dan step size h yang digunakan. 3.Tentukan turunan-turunan yang diperlukan untuk menyelesaikan permasalahan . 4.Hasil dari perhitungan","title":"7.Metode Deret MacLaurin"},{"location":"changelog/#coding","text":"","title":"Coding"},{"location":"changelog/#program-python-deret-maclaurin","text":"Program untuk persamaan deferensial $$ e^{x-\\cos \\left( x\\right) } $$ sampai error yang dihasilkan kurang dari 0.001 untuk x=1 import numpy as np x = 1 e = 0 def f(x): return e**x - np.cos(x) a = np.zeros(40) b = np.zeros(40) c = np.zeros(40) a[0] = 1 b[0] = 8 c[0] = (a[0] + b[0])/2 for n in range(9): if f(a[n])*f(c[n])<0: a[n+1] = a[n] b[n+1] = c[n] else: a[n+1] = c[n] b[n+1] = b[n] c[n+1] = (a[n+1] + b[n+1])/2 print(c[n+1],f(c[n+1]))","title":"Program Python Deret MacLaurin"},{"location":"creating-your-site/","text":"Sistem Persamaan Linier \u00b6 Sebelum mempelajari materi sistem persamaan linier, sebaiknya kita mengetahui sejarah singkat dari materi ini. Dalam sejarah, perkembangan sistem persamaan linier sudah digunakan sejak 4000 tahun yang lalu (sekitar tahun 2000SM) pada masa Babylonian (Babel). Hal ini dapat dilihat dalam tablet YBC 4652 yang menjelaskan bagaimana Babel menyelesaikan suatu masalah dengan persamaan linier. Namun istilah \u201cSistem Persamaan Linier (Linear Equation)\u201d sendiri baru muncul sekitar abad ke-17 oleh seorang matematikawan Perancis bernama Rene Decartes. Tahun-tahun berikutnya baru bermunculan tokoh-tokoh seperti Gauss Paper(1811), Isaac Newton(1670), Carl Friedrich Gauss (1810), dan Wilhelm Jordan(1988). Teori \u00b6 A. DEFINISI SISTEM PERSAMAAN LINIER \u00b6 Sistem persamaan linear ialah kumpulan persamaan linear yang dikorelasikan untuk membentuk suatu sistem. Sistem persamaannya bisa terdiri dari satu variabel, dua variabel atau lebih. Dalam bahasan ini, kita hanya membahas sistem persamaan linear dengan dua dan tiga variabel. B. SISTEM PERSAMAAN LINIER DUA VARIABEL (SPLDV) \u00b6 Sistem persamaan linear dua variabel ialah sistem persamaan linear yang terdiri dari dua persamaan dimana masing-masing persamaan memiliki dua variabel. Contoh SPLDV dengan variabel x dan y : $$ \\begin{cases}ax+by=c\\ fx-gy=h\\end{cases} $$ dimana a,b,c,f,g dan h adalah bilangan-bilangan real. Penyelesaian SPLDV Tujuan penyelesaian ini untuk menentukan nilai yang memenuhi kedua persamaan yang ada pada SPLDV. Metode Penyelesaian : 1.Metode grafik \u00b6 Pada metode grafik ini, langkah-langkah yang dilakukan pertama adalah menentukan grafik garis dari masing-masing persamaan kemudian menentukan titik potong dari kedua garis. Titik potong dari kedua garis tersebut adalah penyelesaian dari SPLDV. Pada metode grafik ini, terdapat beberapa jenis himpunan penyelesaian berdasarkan grafik persamaan, yaitu: 1.Apabila kedua garis berpotongan, maka perpotonga kedua garis adalah penyelesaian dari SPLDV dan memiliki satu penyelesaian. 2.Apabila kedua garis sejajar, maka SPLDV tidak memiliki penyelesaian. 3.Apabila kedua garis saling berhimpit, maka SPLDV memiliki tak berhingga himpunan penyelesaian. 2.Metode eliminasi \u00b6 Pada metode eliminasi ini, menentukan penyelesaian dari variabel x dengan cara mengeliminasi variabel y, dan untuk menentukan penyelesaian variabel y dengan cara mengeliminasi variabel x. 3.Metode substitusi \u00b6 Pada metode substitusi, langkah pertama yang dilakukan adalah mengubah salah satu persamaan menjadi persamaan fungsi, yaitu x sebagai fungsi dari y atau y sebagai fungsi dari x. Kemudian subtitusikan x atau y pada persamaan yang lain. 4.Metode eliminasi-subtitusi \u00b6 Metode ini adalah gabungan dari metode eliminasi dan subtitusi. Pertama eliminasi salah satu variabel, kemudian penyelesaian dari variabel yang diperoleh disubtitusikan pada salah satu persamaan. C. SISTEM PERSAMAAN LINIER TIGA VARIABEL (SPLTV) \u00b6 Sistem persamaan linear tiga variabel adalah sistem persamaan yang terdiri dari tiga persamaan dimana masing-masing persamaan memiliki tiga variabel. Contoh SPLTV dengan variabel x,y, dan z: $$ \\begin{cases}a_{1}x_{1}+b_{1}y_{1}+c_{1}z_{1}=d_{1}\\ a_{2}x_{2}+b_{2}y_{2}+c_{2}z_{2}=d_{2}\\ a_{3}x_{3}+b_{3}y_{3}+c_{3}z_{3}=d_{3}\\end{cases} $$ dimana a, b, c dan d adalah bilangan-bilangan real. Pada SPLTV terdapat 2 cara penyelesaian, yaitu : 1.Metode Subtitusi \u00b6 1.Ubah salah satu persamaan yang ada pada sistem dan nyatakan x sebagai fungsi dari y dan z, atau y sebagai fungsi dari x dan z, atau z sebagai fungsi dari x dan y. 2.Subtitusikan fungsi x atau y atau z dari langkah pertama pada dua persamaan yang lain, sehingga diperoleh SPLDV. 3.Selesaikan SPLDV yang diperoleh dengan metode yang dibahas pada penyelesaian SPLDV di atas. 2.Metode Eliminasi \u00b6 1.Eliminasi salah satu variabel sehingga diperoleh SPLDV 2.Selesaikan SPLDV yang diperoleh dengan langkah seperti pada penyelesaian SPLDV yang telah dibahas 3.Subtitusikan variabel yang telah diperoleh pada persamaan yang ada. Algoritma \u00b6 A. Eliminasi Gauss \u00b6 Eliminasi Gauss merupakan suatu metode untuk mengoperasikan nilai-nilai persamaan linier di dalam matriks sehingga menjadi matriks yang lebih sederhana lagi. Algoritma Eliminasi Gauss : 1.Ubah bentuk persamaan tersebut ke dalam bentuk matriks. 2.Operasikan matriksnya menggunakan metode eliminasi perbaris. 3.Setelah mendapatkan persamaan linier baru, lakukan substitusi balik. 4.Hitunglah nilai x, y dan z nya. Kelebihan dan Kelemahan \u00b6 Keuntungan : 1.Dapat menentukan suatu sistem konsisten atau tidak. 2.Menghilangkan kebutuhan untuk menulis ulang variabel setiap langkah. 3.Lebih mudah dalam memecahkan suatu permasalahan. Kelemahan : 1.Terdapat masalah dalam akurasi hasil hitung saat pembulatan desimal B. Eliminasi Gauss-Jordan \u00b6 Eliminasi Gauss-Jordan adalah pengembangan dari metode eliminasi Gauss yang hasilnya lebih sederhana. Caranya yaitu dengan meneruskan operasi hitung baris dari eliminasi Gauss sehingga menghasilkan matriks yang Eselon-baris. Hal ini dapat digunakan sebagai metode penyelesaian persamaan linear dengan menggunakan matriks. Algoritma Metode Eliminasi Gauss-Jordan : 1.Ubah bentuk persamaan tersebut ke dalam bentuk matriks. 2.Masukkan matrik A, dan vektor B beserta ukurannya n. 3.Buatlah suatu augmented matrik [A|B] namakan dengan A. 4.Pada baris ke i dimana i=1 s/d n, perhatikan apakah nilai ai,i =0 : Apabila ya : Pertukarkan baris ke i dan baris ke i+k\u2264n, dimana ai+k ,i \u22600, apabila tidak ada berarti perhitungan tidak bisa dilanjutkan dan proses dihentikan dengan tanpa penyelesaian. Apabila tidak : lanjutkan proses. 5.Untuk baris ke j, dimana j = i+1 s/d n. Kelebihan dan Kelemahan \u00b6 Mengubah sistem persamaan linier yang ingin dihitung menjadi matriks augmentasi. Merupakan salah satu variasi dari eliminasi gauss dengan kebutuhan dapat menyelesaikan matriks invers. C. Eliminasi Gauss-Seidel \u00b6 Metode interasi Gauss-Seidel adalah metode yang menggunakan proses iterasi hingga diperoleh nilai-nilai yang berubah-ubah. Metode iterasi Gauss-Seidel dikembangkan dari gagasan metode iterasi pada solusi persamaan tak linier. Rumus dari metode eliminasi Gauss-Seidel : $$ xi_{aii}^{\\left( k\\right) }=1 b_{i}-\\sum a_{ii}x_{j}^\\left( k\\right) -\\sum a_{ii}x_{j}^{\\left( k-1\\right) } $$ Algoritma Metode Eliminasi Gauss-Seidel : 1.Pecahkan nilai persamaan menjadi x1,x2,x3,x4. 2.Hitunglah nilai pendekatan awal (0,0,0,0). 3.Lakukan iterasi sebanyak n. Kelebihan dan Kelemahan \u00b6 Keuntungan : Metode eliminasi gauss-seidel digunakan untuk menyelesaikan SPL yg berukuran kecil karena metode ini lebih efisien. Dengan metode iterasi Gauss-Seidel pembulatan dapat diperkecil karena dapat meneruskan iterasi sampai solusinya seteliti mungkin sesuai dengan batas sesatan yang diperbolehkan. Kelemahan : Kelemahan dari metode ini adalah masalah pivot (titik tengah) yang harus benar\u2013benar diperhatikan, karena penyusun yang salah akan menyebabkan iterasi menjadi divergen dan tidak diperoleh hasil yang benar. C. Eliminasi Jacobi \u00b6 Metode Jacobi merupakan salah satu metode / cara untuk menyelesaikan solusi sistem persamaan linear. Metode Jacobi adalah metode konvergen. Sehingga setiap persamaan harus diubah sedemikian hingga koefisien-koefisien nilai mutlaknya paling besar satu Iterasi Jacobi memiliki rumus persamaan sebagai berikut : $$ x_{i}=\\dfrac{b_{i-\\sum i\\neq j}a_{ij}x_{j}}{a_{ii}} $$ Algoritma Metode Eliminasi Jacobi 1.Nyatakan setiap variabel dalam ketiga variabel yang lainnya. 2.Hitunglah nilai pendekatan awal (0,0,0,0). 3.Lakukan iterasi sebanyak n. Kelebihan dan Kelemahan \u00b6 Keuntungan : 1.Menyelesaikan persamaan linear berukuran besar dan proporsi koefisien nolnya besar. 2.Hasil hitung memiliki tingkat akurasi yang tinggi Kelemahan : Harus benar\u2013benar memperhatikan masalah pivot (titik tengah), karena akan menyebabkan iterasi menjadi divergen dan tidak diperoleh hasil yang benar / valid. Coding \u00b6 Program Python Sistem Persamaan Linier \u00b6 Cara penyelesaian sistem persamaan berikut : 25x + 5y + z = 106.2 64x + 8y + z = 177.2 144x + 12y + z = 279.2 Eliminasi Gauss #Eliminasi Gauss import numpy A = numpy.array([[25, 5, 1, 106.2], [64, 8, 1, 177.2], [144, 12, 1, 279.2]]) print(A) n = len(A) x = numpy.zeros(n) for k in range(n): for i in range(k+1,n): if A[i][k] == 0: continue factor = A[i][k]/A[k][k] #print(factor) for j in range(k,n+1): A[i][j] = A[i][j] - (A[k][j] * factor) print(A) x[n-1] = A[n-1][n]/A[n-1][n-1] #baris terakhir dihitung sendiri #jadi tinggal x[0], x[1], x[2] for i in range(n-2,-1,-1): sum_el = 0 for j in range (i+1,n): sum_el = sum_el + (A[i][j] * x[j]) x[i] = (A[i][n] - sum_el)/A[i][i] print(x) Eliminasi Gauss Jordan #Eliminasi Gauss Jordan import numpy A = numpy.array([[25, 5, 1, 106.2], [64, 8, 1, 177.2], [144, 12, 1, 279.2]]) print(A) n = len(A) x = numpy.zeros(n) for k in range(n): pivot = A[k][k] A[k] = A[k]/pivot #print(A) for i in range(n): if i == k: continue factor = A[i][k] for j in range(k,n+1): A[i][j] = A[i][j] - factor * A[k][j] print(A) x = A[:,n] print(x) Eliminasi Jacobi #Metode Jacobi import numpy def fjacobi(A,xzero): baris = numpy.size(A,0) xi = [] xkira = [] xminus = xzero[:] for j in range(baris): xi = (A[j,:]/A[j][j]) sumel = xi[baris] for k in range(baris): if k == j: continue sumel = sumel - (xi[k] * xzero[k]) xkira.append(sumel) xzero = xkira delta = numpy.subtract(xzero, xminus) ea = abs(numpy.divide(delta,xzero) * 100) return [xzero, ea] matrix1 = numpy.array([[5, -2, 3, -1], [-3, 9, 1, 2], [2, -1, -7, 3]]) print(matrix1) xzero = [1, 2, 5] ea = [2.0, 2, 2] print(\"JAWABAN\") n = 0 while all(i > 0.01 for i in ea): [xzero,ea] = fjacobi(matrix1,xzero) n += 1 print(\"Nilai x1 x2 x3 untuk metode Jacobi =\") print(xzero) print(\"Error = \", ea, \" pada iterasi ke \", n) Metode Eliminasi Gauss Seidel #Metode Gauss Seidel import numpy def fseidel(A,xzero): baris = numpy.size(A,0) xi = [] xminus = xzero[:] for j in range(baris): xi = (A[j,:]/A[j][j]) sumel = xi[baris] for k in range(baris): if k == j: continue sumel = sumel - (xi[k] * xzero[k]) xzero[j] = sumel delta = numpy.subtract(xzero,xminus) ea = abs(numpy.divide(delta,xzero) * 100) return [xzero, ea] matrix1 = numpy.array([[5, -2, 3, -1], [-3, 9, 1, 2], [2, -1, -7, 3]]) print(matrix1) xzero = [1, 2, 5] ea = [2.0, 2, 2] print(\"JAWABAN\") n = 0 while all(i > 0.01 for i in ea): [xzero,ea] = fseidel(matrix1,xzero) n += 1 print(\"Nilai x1 x2 x3 untuk metode Gauss Seidel =\") print(xzero) print(\"Error = \", ea, \" pada iterasi ke \", n)","title":"Sistem Persamaan Linier"},{"location":"creating-your-site/#sistem-persamaan-linier","text":"Sebelum mempelajari materi sistem persamaan linier, sebaiknya kita mengetahui sejarah singkat dari materi ini. Dalam sejarah, perkembangan sistem persamaan linier sudah digunakan sejak 4000 tahun yang lalu (sekitar tahun 2000SM) pada masa Babylonian (Babel). Hal ini dapat dilihat dalam tablet YBC 4652 yang menjelaskan bagaimana Babel menyelesaikan suatu masalah dengan persamaan linier. Namun istilah \u201cSistem Persamaan Linier (Linear Equation)\u201d sendiri baru muncul sekitar abad ke-17 oleh seorang matematikawan Perancis bernama Rene Decartes. Tahun-tahun berikutnya baru bermunculan tokoh-tokoh seperti Gauss Paper(1811), Isaac Newton(1670), Carl Friedrich Gauss (1810), dan Wilhelm Jordan(1988).","title":"Sistem Persamaan Linier"},{"location":"creating-your-site/#teori","text":"","title":"Teori"},{"location":"creating-your-site/#a-definisi-sistem-persamaan-linier","text":"Sistem persamaan linear ialah kumpulan persamaan linear yang dikorelasikan untuk membentuk suatu sistem. Sistem persamaannya bisa terdiri dari satu variabel, dua variabel atau lebih. Dalam bahasan ini, kita hanya membahas sistem persamaan linear dengan dua dan tiga variabel.","title":"A. DEFINISI SISTEM PERSAMAAN LINIER"},{"location":"creating-your-site/#b-sistem-persamaan-linier-dua-variabel-spldv","text":"Sistem persamaan linear dua variabel ialah sistem persamaan linear yang terdiri dari dua persamaan dimana masing-masing persamaan memiliki dua variabel. Contoh SPLDV dengan variabel x dan y : $$ \\begin{cases}ax+by=c\\ fx-gy=h\\end{cases} $$ dimana a,b,c,f,g dan h adalah bilangan-bilangan real. Penyelesaian SPLDV Tujuan penyelesaian ini untuk menentukan nilai yang memenuhi kedua persamaan yang ada pada SPLDV. Metode Penyelesaian :","title":"B. SISTEM PERSAMAAN LINIER DUA VARIABEL (SPLDV)"},{"location":"creating-your-site/#1metode-grafik","text":"Pada metode grafik ini, langkah-langkah yang dilakukan pertama adalah menentukan grafik garis dari masing-masing persamaan kemudian menentukan titik potong dari kedua garis. Titik potong dari kedua garis tersebut adalah penyelesaian dari SPLDV. Pada metode grafik ini, terdapat beberapa jenis himpunan penyelesaian berdasarkan grafik persamaan, yaitu: 1.Apabila kedua garis berpotongan, maka perpotonga kedua garis adalah penyelesaian dari SPLDV dan memiliki satu penyelesaian. 2.Apabila kedua garis sejajar, maka SPLDV tidak memiliki penyelesaian. 3.Apabila kedua garis saling berhimpit, maka SPLDV memiliki tak berhingga himpunan penyelesaian.","title":"1.Metode grafik"},{"location":"creating-your-site/#2metode-eliminasi","text":"Pada metode eliminasi ini, menentukan penyelesaian dari variabel x dengan cara mengeliminasi variabel y, dan untuk menentukan penyelesaian variabel y dengan cara mengeliminasi variabel x.","title":"2.Metode eliminasi"},{"location":"creating-your-site/#3metode-substitusi","text":"Pada metode substitusi, langkah pertama yang dilakukan adalah mengubah salah satu persamaan menjadi persamaan fungsi, yaitu x sebagai fungsi dari y atau y sebagai fungsi dari x. Kemudian subtitusikan x atau y pada persamaan yang lain.","title":"3.Metode substitusi"},{"location":"creating-your-site/#4metode-eliminasi-subtitusi","text":"Metode ini adalah gabungan dari metode eliminasi dan subtitusi. Pertama eliminasi salah satu variabel, kemudian penyelesaian dari variabel yang diperoleh disubtitusikan pada salah satu persamaan.","title":"4.Metode eliminasi-subtitusi"},{"location":"creating-your-site/#c-sistem-persamaan-linier-tiga-variabel-spltv","text":"Sistem persamaan linear tiga variabel adalah sistem persamaan yang terdiri dari tiga persamaan dimana masing-masing persamaan memiliki tiga variabel. Contoh SPLTV dengan variabel x,y, dan z: $$ \\begin{cases}a_{1}x_{1}+b_{1}y_{1}+c_{1}z_{1}=d_{1}\\ a_{2}x_{2}+b_{2}y_{2}+c_{2}z_{2}=d_{2}\\ a_{3}x_{3}+b_{3}y_{3}+c_{3}z_{3}=d_{3}\\end{cases} $$ dimana a, b, c dan d adalah bilangan-bilangan real. Pada SPLTV terdapat 2 cara penyelesaian, yaitu :","title":"C. SISTEM PERSAMAAN LINIER TIGA VARIABEL (SPLTV)"},{"location":"creating-your-site/#1metode-subtitusi","text":"1.Ubah salah satu persamaan yang ada pada sistem dan nyatakan x sebagai fungsi dari y dan z, atau y sebagai fungsi dari x dan z, atau z sebagai fungsi dari x dan y. 2.Subtitusikan fungsi x atau y atau z dari langkah pertama pada dua persamaan yang lain, sehingga diperoleh SPLDV. 3.Selesaikan SPLDV yang diperoleh dengan metode yang dibahas pada penyelesaian SPLDV di atas.","title":"1.Metode Subtitusi"},{"location":"creating-your-site/#2metode-eliminasi_1","text":"1.Eliminasi salah satu variabel sehingga diperoleh SPLDV 2.Selesaikan SPLDV yang diperoleh dengan langkah seperti pada penyelesaian SPLDV yang telah dibahas 3.Subtitusikan variabel yang telah diperoleh pada persamaan yang ada.","title":"2.Metode Eliminasi"},{"location":"creating-your-site/#algoritma","text":"","title":"Algoritma"},{"location":"creating-your-site/#a-eliminasi-gauss","text":"Eliminasi Gauss merupakan suatu metode untuk mengoperasikan nilai-nilai persamaan linier di dalam matriks sehingga menjadi matriks yang lebih sederhana lagi. Algoritma Eliminasi Gauss : 1.Ubah bentuk persamaan tersebut ke dalam bentuk matriks. 2.Operasikan matriksnya menggunakan metode eliminasi perbaris. 3.Setelah mendapatkan persamaan linier baru, lakukan substitusi balik. 4.Hitunglah nilai x, y dan z nya.","title":"A. Eliminasi Gauss"},{"location":"creating-your-site/#kelebihan-dan-kelemahan","text":"Keuntungan : 1.Dapat menentukan suatu sistem konsisten atau tidak. 2.Menghilangkan kebutuhan untuk menulis ulang variabel setiap langkah. 3.Lebih mudah dalam memecahkan suatu permasalahan. Kelemahan : 1.Terdapat masalah dalam akurasi hasil hitung saat pembulatan desimal","title":"Kelebihan dan Kelemahan"},{"location":"creating-your-site/#b-eliminasi-gauss-jordan","text":"Eliminasi Gauss-Jordan adalah pengembangan dari metode eliminasi Gauss yang hasilnya lebih sederhana. Caranya yaitu dengan meneruskan operasi hitung baris dari eliminasi Gauss sehingga menghasilkan matriks yang Eselon-baris. Hal ini dapat digunakan sebagai metode penyelesaian persamaan linear dengan menggunakan matriks. Algoritma Metode Eliminasi Gauss-Jordan : 1.Ubah bentuk persamaan tersebut ke dalam bentuk matriks. 2.Masukkan matrik A, dan vektor B beserta ukurannya n. 3.Buatlah suatu augmented matrik [A|B] namakan dengan A. 4.Pada baris ke i dimana i=1 s/d n, perhatikan apakah nilai ai,i =0 : Apabila ya : Pertukarkan baris ke i dan baris ke i+k\u2264n, dimana ai+k ,i \u22600, apabila tidak ada berarti perhitungan tidak bisa dilanjutkan dan proses dihentikan dengan tanpa penyelesaian. Apabila tidak : lanjutkan proses. 5.Untuk baris ke j, dimana j = i+1 s/d n.","title":"B. Eliminasi Gauss-Jordan"},{"location":"creating-your-site/#kelebihan-dan-kelemahan_1","text":"Mengubah sistem persamaan linier yang ingin dihitung menjadi matriks augmentasi. Merupakan salah satu variasi dari eliminasi gauss dengan kebutuhan dapat menyelesaikan matriks invers.","title":"Kelebihan dan Kelemahan"},{"location":"creating-your-site/#c-eliminasi-gauss-seidel","text":"Metode interasi Gauss-Seidel adalah metode yang menggunakan proses iterasi hingga diperoleh nilai-nilai yang berubah-ubah. Metode iterasi Gauss-Seidel dikembangkan dari gagasan metode iterasi pada solusi persamaan tak linier. Rumus dari metode eliminasi Gauss-Seidel : $$ xi_{aii}^{\\left( k\\right) }=1 b_{i}-\\sum a_{ii}x_{j}^\\left( k\\right) -\\sum a_{ii}x_{j}^{\\left( k-1\\right) } $$ Algoritma Metode Eliminasi Gauss-Seidel : 1.Pecahkan nilai persamaan menjadi x1,x2,x3,x4. 2.Hitunglah nilai pendekatan awal (0,0,0,0). 3.Lakukan iterasi sebanyak n.","title":"C. Eliminasi Gauss-Seidel"},{"location":"creating-your-site/#kelebihan-dan-kelemahan_2","text":"Keuntungan : Metode eliminasi gauss-seidel digunakan untuk menyelesaikan SPL yg berukuran kecil karena metode ini lebih efisien. Dengan metode iterasi Gauss-Seidel pembulatan dapat diperkecil karena dapat meneruskan iterasi sampai solusinya seteliti mungkin sesuai dengan batas sesatan yang diperbolehkan. Kelemahan : Kelemahan dari metode ini adalah masalah pivot (titik tengah) yang harus benar\u2013benar diperhatikan, karena penyusun yang salah akan menyebabkan iterasi menjadi divergen dan tidak diperoleh hasil yang benar.","title":"Kelebihan dan Kelemahan"},{"location":"creating-your-site/#c-eliminasi-jacobi","text":"Metode Jacobi merupakan salah satu metode / cara untuk menyelesaikan solusi sistem persamaan linear. Metode Jacobi adalah metode konvergen. Sehingga setiap persamaan harus diubah sedemikian hingga koefisien-koefisien nilai mutlaknya paling besar satu Iterasi Jacobi memiliki rumus persamaan sebagai berikut : $$ x_{i}=\\dfrac{b_{i-\\sum i\\neq j}a_{ij}x_{j}}{a_{ii}} $$ Algoritma Metode Eliminasi Jacobi 1.Nyatakan setiap variabel dalam ketiga variabel yang lainnya. 2.Hitunglah nilai pendekatan awal (0,0,0,0). 3.Lakukan iterasi sebanyak n.","title":"C. Eliminasi Jacobi"},{"location":"creating-your-site/#kelebihan-dan-kelemahan_3","text":"Keuntungan : 1.Menyelesaikan persamaan linear berukuran besar dan proporsi koefisien nolnya besar. 2.Hasil hitung memiliki tingkat akurasi yang tinggi Kelemahan : Harus benar\u2013benar memperhatikan masalah pivot (titik tengah), karena akan menyebabkan iterasi menjadi divergen dan tidak diperoleh hasil yang benar / valid.","title":"Kelebihan dan Kelemahan"},{"location":"creating-your-site/#coding","text":"","title":"Coding"},{"location":"creating-your-site/#program-python-sistem-persamaan-linier","text":"Cara penyelesaian sistem persamaan berikut : 25x + 5y + z = 106.2 64x + 8y + z = 177.2 144x + 12y + z = 279.2 Eliminasi Gauss #Eliminasi Gauss import numpy A = numpy.array([[25, 5, 1, 106.2], [64, 8, 1, 177.2], [144, 12, 1, 279.2]]) print(A) n = len(A) x = numpy.zeros(n) for k in range(n): for i in range(k+1,n): if A[i][k] == 0: continue factor = A[i][k]/A[k][k] #print(factor) for j in range(k,n+1): A[i][j] = A[i][j] - (A[k][j] * factor) print(A) x[n-1] = A[n-1][n]/A[n-1][n-1] #baris terakhir dihitung sendiri #jadi tinggal x[0], x[1], x[2] for i in range(n-2,-1,-1): sum_el = 0 for j in range (i+1,n): sum_el = sum_el + (A[i][j] * x[j]) x[i] = (A[i][n] - sum_el)/A[i][i] print(x) Eliminasi Gauss Jordan #Eliminasi Gauss Jordan import numpy A = numpy.array([[25, 5, 1, 106.2], [64, 8, 1, 177.2], [144, 12, 1, 279.2]]) print(A) n = len(A) x = numpy.zeros(n) for k in range(n): pivot = A[k][k] A[k] = A[k]/pivot #print(A) for i in range(n): if i == k: continue factor = A[i][k] for j in range(k,n+1): A[i][j] = A[i][j] - factor * A[k][j] print(A) x = A[:,n] print(x) Eliminasi Jacobi #Metode Jacobi import numpy def fjacobi(A,xzero): baris = numpy.size(A,0) xi = [] xkira = [] xminus = xzero[:] for j in range(baris): xi = (A[j,:]/A[j][j]) sumel = xi[baris] for k in range(baris): if k == j: continue sumel = sumel - (xi[k] * xzero[k]) xkira.append(sumel) xzero = xkira delta = numpy.subtract(xzero, xminus) ea = abs(numpy.divide(delta,xzero) * 100) return [xzero, ea] matrix1 = numpy.array([[5, -2, 3, -1], [-3, 9, 1, 2], [2, -1, -7, 3]]) print(matrix1) xzero = [1, 2, 5] ea = [2.0, 2, 2] print(\"JAWABAN\") n = 0 while all(i > 0.01 for i in ea): [xzero,ea] = fjacobi(matrix1,xzero) n += 1 print(\"Nilai x1 x2 x3 untuk metode Jacobi =\") print(xzero) print(\"Error = \", ea, \" pada iterasi ke \", n) Metode Eliminasi Gauss Seidel #Metode Gauss Seidel import numpy def fseidel(A,xzero): baris = numpy.size(A,0) xi = [] xminus = xzero[:] for j in range(baris): xi = (A[j,:]/A[j][j]) sumel = xi[baris] for k in range(baris): if k == j: continue sumel = sumel - (xi[k] * xzero[k]) xzero[j] = sumel delta = numpy.subtract(xzero,xminus) ea = abs(numpy.divide(delta,xzero) * 100) return [xzero, ea] matrix1 = numpy.array([[5, -2, 3, -1], [-3, 9, 1, 2], [2, -1, -7, 3]]) print(matrix1) xzero = [1, 2, 5] ea = [2.0, 2, 2] print(\"JAWABAN\") n = 0 while all(i > 0.01 for i in ea): [xzero,ea] = fseidel(matrix1,xzero) n += 1 print(\"Nilai x1 x2 x3 untuk metode Gauss Seidel =\") print(xzero) print(\"Error = \", ea, \" pada iterasi ke \", n)","title":"Program Python Sistem Persamaan Linier"},{"location":"customization/","text":"Customization \u00b6 Project documentation is as diverse as the projects themselves and Material for MkDocs is a great starting point for making it look beautiful. However, as you write your documentation, you may reach a point where small adjustments are necessary to preserve your brand's style. Adding assets \u00b6 MkDocs provides several ways to customize a theme. In order to make a few tweaks to Material for MkDocs, you can just add your stylesheets and JavaScript files to the docs directory. Additional CSS \u00b6 If you want to tweak some colors or change the spacing of certain elements, you can do this in a separate stylesheet. The easiest way is by creating a new stylesheet file in the docs directory: . \u251c\u2500 docs/ \u2502 \u2514\u2500 stylesheets/ \u2502 \u2514\u2500 extra.css \u2514\u2500 mkdocs.yml Then, add the following line to mkdocs.yml : extra_css : - stylesheets/extra.css Spin up the live preview server and start typing your changes in your additional stylesheet file \u2013 you should see them almost instantly after saving. Additional JavaScript \u00b6 The same is true for additional JavaScript. If you want to integrate another syntax highlighter or add some custom logic to your theme, create a new JavaScript file in the docs directory: . \u251c\u2500 docs/ \u2502 \u2514\u2500 javascripts/ \u2502 \u2514\u2500 extra.js \u2514\u2500 mkdocs.yml Then, add the following line to mkdocs.yml : extra_javascript : - javascripts/extra.js Further assistance can be found in the MkDocs documentation . Extending the theme \u00b6 If you want to alter the HTML source (e.g. add or remove some parts), you can extend the theme. MkDocs supports theme extension , an easy way to override parts of Material for MkDocs without forking from git. This ensures that you can update to the latest version more easily. Setup and theme structure \u00b6 Enable Material for MkDocs as usual in mkdocs.yml , and create a new folder for overrides which you then reference using the custom_dir key: theme : name : material custom_dir : overrides Theme extension prerequisites As the custom_dir variable is used for the theme extension process, Material for MkDocs needs to be installed via pip and referenced with the name parameter in mkdocs.yml . It will not work when cloning from git . The structure in the overrides directory must mirror the directory structure of the original theme, as any file in the overrides directory will replace the file with the same name which is part of the original theme. Besides, further assets may also be put in the overrides directory. The directory layout of the theme is as follows: . \u251c\u2500 .icons/ # Bundled icon sets \u251c\u2500 assets/ \u2502 \u251c\u2500 images/ # Images and icons \u2502 \u251c\u2500 javascripts/ # JavaScript \u2502 \u2514\u2500 stylesheets/ # Stylesheets \u251c\u2500 partials/ \u2502 \u251c\u2500 integrations/ # Third-party integrations \u2502 \u2502 \u251c\u2500 analytics.html # - Google Analytics \u2502 \u2502 \u2514\u2500 disqus.html # - Disqus \u2502 \u251c\u2500 languages/ # Localized languages \u2502 \u251c\u2500 footer.html # Footer bar \u2502 \u251c\u2500 header.html # Header bar \u2502 \u251c\u2500 language.html # Localized labels \u2502 \u251c\u2500 logo.html # Logo in header and sidebar \u2502 \u251c\u2500 nav.html # Main navigation \u2502 \u251c\u2500 nav-item.html # Main navigation item \u2502 \u251c\u2500 palette.html # Color palette \u2502 \u251c\u2500 search.html # Search box \u2502 \u251c\u2500 social.html # Social links \u2502 \u251c\u2500 source.html # Repository information \u2502 \u251c\u2500 source-date.html # Last updated date \u2502 \u251c\u2500 source-link.html # Link to source file \u2502 \u251c\u2500 tabs.html # Tabs navigation \u2502 \u251c\u2500 tabs-item.html # Tabs navigation item \u2502 \u251c\u2500 toc.html # Table of contents \u2502 \u2514\u2500 toc-item.html # Table of contents item \u251c\u2500 404 .html # 404 error page \u251c\u2500 base.html # Base template \u2514\u2500 main.html # Default page Overriding partials \u00b6 In order to override a partial, we can replace it with a file of the same name and location in the overrides directory. For example, to replace the original footer.html , create a footer.html file in the overrides/partials directory: . \u251c\u2500 overrides/ \u2502 \u2514\u2500 partials/ \u2502 \u2514\u2500 footer.html \u2514\u2500 mkdocs.yml MkDocs will now use the new partial when rendering the theme. This can be done with any file. Overriding blocks recommended \u00b6 Besides overriding partials, it's also possible to override (and extend) template blocks , which are defined inside the templates and wrap specific features. To override a block, create a main.html file inside the overrides directory: . \u251c\u2500 overrides/ \u2502 \u2514\u2500 main.html \u2514\u2500 mkdocs.yml Then, e.g. to override the site title, add the following line to main.html : {% extends \"base.html\" %} {% block htmltitle %} < title > Lorem ipsum dolor sit amet </ title > {% endblock %} Material for MkDocs provides the following template blocks: Block name Purpose analytics Wraps the Google Analytics integration announce Wraps the announcement bar config Wraps the JavaScript application config content Wraps the main content disqus Wraps the Disqus integration extrahead Empty block to add custom meta tags fonts Wraps the font definitions footer Wraps the footer with navigation and copyright header Wraps the fixed header bar hero Wraps the hero teaser (if available) htmltitle Wraps the <title> tag libs Wraps the JavaScript libraries (header) outdated Wraps the version warning scripts Wraps the JavaScript application (footer) source Wraps the linked source files site_meta Wraps the meta tags in the document head site_nav Wraps the site navigation and table of contents styles Wraps the stylesheets (also extra sources) tabs Wraps the tabs navigation (if available) For more on this topic refer to the MkDocs documentation . Additional variables \u00b6 Besides template blocks, Material for MkDocs provides extra variables for parts that cannot be overridden with template blocks (due to technical limitations of the template engine). If you want to add further information after the Made with Material for MkDocs hint in the footer, add the following line to main.html : {% extends \"base.html\" %} {% set extracopyright %} <!-- Add your additional information here --> {% endset %} Material for MkDocs provides the following additional variables: Block name Purpose extracopyright Adds custom copyright information Theme development \u00b6 Material for MkDocs is built on top of TypeScript , RxJS and SASS , and uses a lean, custom build process to put everything together. 1 If you want to make more fundamental changes, it may be necessary to make the adjustments directly in the source of the theme and recompile it. Environment setup \u00b6 In order to start development on Material for MkDocs, a Node.js version of at least 14 is required. First, clone the repository: git clone https://github.com/squidfunk/mkdocs-material Next, all dependencies need to be installed, which is done with: cd mkdocs-material pip install -r requirements.txt pip install mkdocs-minify-plugin pip install mkdocs-redirects npm install Development mode \u00b6 Start the watcher with: npm start Then, in a second session, start the MkDocs live preview server with: mkdocs serve Point your browser to localhost:8000 and you should see this documentation in front of you. Automatically generated files Never make any changes in the material directory, as the contents of this directory are automatically generated from the src directory and will be overridden when the theme is built. Building the theme \u00b6 When you're finished making your changes, you can build the theme by invoking: npm run build This triggers the production-level compilation and minification of all stylesheets and JavaScript sources. When the command exits, the final files are located in the material directory. Add the theme_dir variable pointing to the aforementioned directory in the original mkdocs.yml . Now you can run mkdocs build and you should see your documentation with your changes to the original theme. Prior to version 7.0, the build was based on Webpack. This led to broken builds due to frequent incompatibilities with loaders and plugins, so we decided to swap Webpack for a leaner custom solution which is now based on RxJS as the application itself. This enabled us to remove more than 500 dependencies (~30% less). \u21a9","title":"Customization"},{"location":"customization/#customization","text":"Project documentation is as diverse as the projects themselves and Material for MkDocs is a great starting point for making it look beautiful. However, as you write your documentation, you may reach a point where small adjustments are necessary to preserve your brand's style.","title":"Customization"},{"location":"customization/#adding-assets","text":"MkDocs provides several ways to customize a theme. In order to make a few tweaks to Material for MkDocs, you can just add your stylesheets and JavaScript files to the docs directory.","title":"Adding assets"},{"location":"customization/#additional-css","text":"If you want to tweak some colors or change the spacing of certain elements, you can do this in a separate stylesheet. The easiest way is by creating a new stylesheet file in the docs directory: . \u251c\u2500 docs/ \u2502 \u2514\u2500 stylesheets/ \u2502 \u2514\u2500 extra.css \u2514\u2500 mkdocs.yml Then, add the following line to mkdocs.yml : extra_css : - stylesheets/extra.css Spin up the live preview server and start typing your changes in your additional stylesheet file \u2013 you should see them almost instantly after saving.","title":"Additional CSS"},{"location":"customization/#additional-javascript","text":"The same is true for additional JavaScript. If you want to integrate another syntax highlighter or add some custom logic to your theme, create a new JavaScript file in the docs directory: . \u251c\u2500 docs/ \u2502 \u2514\u2500 javascripts/ \u2502 \u2514\u2500 extra.js \u2514\u2500 mkdocs.yml Then, add the following line to mkdocs.yml : extra_javascript : - javascripts/extra.js Further assistance can be found in the MkDocs documentation .","title":"Additional JavaScript"},{"location":"customization/#extending-the-theme","text":"If you want to alter the HTML source (e.g. add or remove some parts), you can extend the theme. MkDocs supports theme extension , an easy way to override parts of Material for MkDocs without forking from git. This ensures that you can update to the latest version more easily.","title":"Extending the theme"},{"location":"customization/#setup-and-theme-structure","text":"Enable Material for MkDocs as usual in mkdocs.yml , and create a new folder for overrides which you then reference using the custom_dir key: theme : name : material custom_dir : overrides Theme extension prerequisites As the custom_dir variable is used for the theme extension process, Material for MkDocs needs to be installed via pip and referenced with the name parameter in mkdocs.yml . It will not work when cloning from git . The structure in the overrides directory must mirror the directory structure of the original theme, as any file in the overrides directory will replace the file with the same name which is part of the original theme. Besides, further assets may also be put in the overrides directory. The directory layout of the theme is as follows: . \u251c\u2500 .icons/ # Bundled icon sets \u251c\u2500 assets/ \u2502 \u251c\u2500 images/ # Images and icons \u2502 \u251c\u2500 javascripts/ # JavaScript \u2502 \u2514\u2500 stylesheets/ # Stylesheets \u251c\u2500 partials/ \u2502 \u251c\u2500 integrations/ # Third-party integrations \u2502 \u2502 \u251c\u2500 analytics.html # - Google Analytics \u2502 \u2502 \u2514\u2500 disqus.html # - Disqus \u2502 \u251c\u2500 languages/ # Localized languages \u2502 \u251c\u2500 footer.html # Footer bar \u2502 \u251c\u2500 header.html # Header bar \u2502 \u251c\u2500 language.html # Localized labels \u2502 \u251c\u2500 logo.html # Logo in header and sidebar \u2502 \u251c\u2500 nav.html # Main navigation \u2502 \u251c\u2500 nav-item.html # Main navigation item \u2502 \u251c\u2500 palette.html # Color palette \u2502 \u251c\u2500 search.html # Search box \u2502 \u251c\u2500 social.html # Social links \u2502 \u251c\u2500 source.html # Repository information \u2502 \u251c\u2500 source-date.html # Last updated date \u2502 \u251c\u2500 source-link.html # Link to source file \u2502 \u251c\u2500 tabs.html # Tabs navigation \u2502 \u251c\u2500 tabs-item.html # Tabs navigation item \u2502 \u251c\u2500 toc.html # Table of contents \u2502 \u2514\u2500 toc-item.html # Table of contents item \u251c\u2500 404 .html # 404 error page \u251c\u2500 base.html # Base template \u2514\u2500 main.html # Default page","title":"Setup and theme structure"},{"location":"customization/#overriding-partials","text":"In order to override a partial, we can replace it with a file of the same name and location in the overrides directory. For example, to replace the original footer.html , create a footer.html file in the overrides/partials directory: . \u251c\u2500 overrides/ \u2502 \u2514\u2500 partials/ \u2502 \u2514\u2500 footer.html \u2514\u2500 mkdocs.yml MkDocs will now use the new partial when rendering the theme. This can be done with any file.","title":"Overriding partials"},{"location":"customization/#overriding-blocks-recommended","text":"Besides overriding partials, it's also possible to override (and extend) template blocks , which are defined inside the templates and wrap specific features. To override a block, create a main.html file inside the overrides directory: . \u251c\u2500 overrides/ \u2502 \u2514\u2500 main.html \u2514\u2500 mkdocs.yml Then, e.g. to override the site title, add the following line to main.html : {% extends \"base.html\" %} {% block htmltitle %} < title > Lorem ipsum dolor sit amet </ title > {% endblock %} Material for MkDocs provides the following template blocks: Block name Purpose analytics Wraps the Google Analytics integration announce Wraps the announcement bar config Wraps the JavaScript application config content Wraps the main content disqus Wraps the Disqus integration extrahead Empty block to add custom meta tags fonts Wraps the font definitions footer Wraps the footer with navigation and copyright header Wraps the fixed header bar hero Wraps the hero teaser (if available) htmltitle Wraps the <title> tag libs Wraps the JavaScript libraries (header) outdated Wraps the version warning scripts Wraps the JavaScript application (footer) source Wraps the linked source files site_meta Wraps the meta tags in the document head site_nav Wraps the site navigation and table of contents styles Wraps the stylesheets (also extra sources) tabs Wraps the tabs navigation (if available) For more on this topic refer to the MkDocs documentation .","title":"Overiding blocks"},{"location":"customization/#additional-variables","text":"Besides template blocks, Material for MkDocs provides extra variables for parts that cannot be overridden with template blocks (due to technical limitations of the template engine). If you want to add further information after the Made with Material for MkDocs hint in the footer, add the following line to main.html : {% extends \"base.html\" %} {% set extracopyright %} <!-- Add your additional information here --> {% endset %} Material for MkDocs provides the following additional variables: Block name Purpose extracopyright Adds custom copyright information","title":"Additional variables"},{"location":"customization/#theme-development","text":"Material for MkDocs is built on top of TypeScript , RxJS and SASS , and uses a lean, custom build process to put everything together. 1 If you want to make more fundamental changes, it may be necessary to make the adjustments directly in the source of the theme and recompile it.","title":"Theme development"},{"location":"customization/#environment-setup","text":"In order to start development on Material for MkDocs, a Node.js version of at least 14 is required. First, clone the repository: git clone https://github.com/squidfunk/mkdocs-material Next, all dependencies need to be installed, which is done with: cd mkdocs-material pip install -r requirements.txt pip install mkdocs-minify-plugin pip install mkdocs-redirects npm install","title":"Environment setup"},{"location":"customization/#development-mode","text":"Start the watcher with: npm start Then, in a second session, start the MkDocs live preview server with: mkdocs serve Point your browser to localhost:8000 and you should see this documentation in front of you. Automatically generated files Never make any changes in the material directory, as the contents of this directory are automatically generated from the src directory and will be overridden when the theme is built.","title":"Development mode"},{"location":"customization/#building-the-theme","text":"When you're finished making your changes, you can build the theme by invoking: npm run build This triggers the production-level compilation and minification of all stylesheets and JavaScript sources. When the command exits, the final files are located in the material directory. Add the theme_dir variable pointing to the aforementioned directory in the original mkdocs.yml . Now you can run mkdocs build and you should see your documentation with your changes to the original theme. Prior to version 7.0, the build was based on Webpack. This led to broken builds due to frequent incompatibilities with loaders and plugins, so we decided to swap Webpack for a leaner custom solution which is now based on RxJS as the application itself. This enabled us to remove more than 500 dependencies (~30% less). \u21a9","title":"Building the theme"},{"location":"data-privacy/","text":"Data privacy \u00b6 In itself, Material for MkDocs does not perform any tracking and adheres to the General Data Protection Regulation (GDPR), but it integrates with some third-party services that may not. Third-party services \u00b6 Google Fonts \u00b6 Material for MkDocs makes fonts configurable by relying on Google Fonts CDN, which may be in breach with GDPR. The usage of Google's CDN can be easily disabled via mkdocs.yml . Google Analytics and Disqus \u00b6 Material for MkDocs comes with optional Google Analytics and Disqus integrations, both of which must be enabled explicitly, so there's no immediate action if you don't use those.","title":"Data privacy"},{"location":"data-privacy/#data-privacy","text":"In itself, Material for MkDocs does not perform any tracking and adheres to the General Data Protection Regulation (GDPR), but it integrates with some third-party services that may not.","title":"Data privacy"},{"location":"data-privacy/#third-party-services","text":"","title":"Third-party services"},{"location":"data-privacy/#google-fonts","text":"Material for MkDocs makes fonts configurable by relying on Google Fonts CDN, which may be in breach with GDPR. The usage of Google's CDN can be easily disabled via mkdocs.yml .","title":"Google Fonts"},{"location":"data-privacy/#google-analytics-and-disqus","text":"Material for MkDocs comes with optional Google Analytics and Disqus integrations, both of which must be enabled explicitly, so there's no immediate action if you don't use those.","title":"Google Analytics and Disqus"},{"location":"deprecations/","text":"Deprecations \u00b6 This page includes a list of deprecations, indicating which features of Material for MkDocs were replaced with newer, more flexible alternatives, and thus should not be used anymore. Front matter \u00b6 Redirect \u00b6 Deprecated: 5.5 \u00b7 Removed: 6.0 The redirect key, which could be added via Metadata , allowed to specify a redirect from within a document to a new address, which is a good idea when moving content around: --- redirect: /path/to/new/file --- # Document title ... The redirects plugin provides the ability to define redirect mappings via mkdocs.yml , which is considered to be a much better solution to achieve the same result. It can be installed with pip : pip install mkdocs-redirects Redirect mappings can then be added to mkdocs.yml : plugins : - redirects : redirect_maps : path/to/old/file.md : path/to/new/file.md Source link \u00b6 Deprecated: 5.5 \u00b7 Removed: 6.0 The source and path keys, which could be added via Metadata , showed a source icon at the top right corner of a document, linking a document to a single source file: --- path: tree/master/docs source: deprecations.md --- # Document title ... Only a single source file could be linked, which is useless if a document refers to multiple files (or multiple sections within a single file). A more flexible approach is to use the new icon integration : [ :octicons-file-code-24: Source ]( https://github.com/squidfunk/mkdocs-material/blob/master/docs/deprecations.md ) This will render as Source , which can be included at arbitrary positions in any document. Hero \u00b6 Deprecated: 5.5 \u00b7 Removed: 6.0 The hero key, which could be added via Metadata , allowed to render a simple, text-only and page-local teaser text as part of a document. It could be set from front matter with: --- hero: Lorem ipsum dolor sit amet --- # Document title ... The recommended way is to override the hero block via theme extension for a specific page, which has the nice side effect that hero templates can be shared among multiple pages: Markdown --- template: hero.html --- # Document title ... Template {% extends \"base.html\" %} {% block hero %} <!-- Add custom hero here --> {% endblock %} Docker image \u00b6 Bundled plugins \u00b6 Deprecated: 5.5 \u00b7 Removed: 6.0 Over the last years, the Docker image has continually increased in size. For CI it's important that download times are as short as possible, which is why the following plugins will be removed: mkdocs-awesome-pages-plugin mkdocs-git-revision-date-localized-plugin Note that it's trivial to install plugins inside the Docker image before building your documentation. See the installation guide for a step-by-step guide.","title":"Deprecations"},{"location":"deprecations/#deprecations","text":"This page includes a list of deprecations, indicating which features of Material for MkDocs were replaced with newer, more flexible alternatives, and thus should not be used anymore.","title":"Deprecations"},{"location":"deprecations/#front-matter","text":"","title":"Front matter"},{"location":"deprecations/#redirect","text":"Deprecated: 5.5 \u00b7 Removed: 6.0 The redirect key, which could be added via Metadata , allowed to specify a redirect from within a document to a new address, which is a good idea when moving content around: --- redirect: /path/to/new/file --- # Document title ... The redirects plugin provides the ability to define redirect mappings via mkdocs.yml , which is considered to be a much better solution to achieve the same result. It can be installed with pip : pip install mkdocs-redirects Redirect mappings can then be added to mkdocs.yml : plugins : - redirects : redirect_maps : path/to/old/file.md : path/to/new/file.md","title":"Redirect"},{"location":"deprecations/#source-link","text":"Deprecated: 5.5 \u00b7 Removed: 6.0 The source and path keys, which could be added via Metadata , showed a source icon at the top right corner of a document, linking a document to a single source file: --- path: tree/master/docs source: deprecations.md --- # Document title ... Only a single source file could be linked, which is useless if a document refers to multiple files (or multiple sections within a single file). A more flexible approach is to use the new icon integration : [ :octicons-file-code-24: Source ]( https://github.com/squidfunk/mkdocs-material/blob/master/docs/deprecations.md ) This will render as Source , which can be included at arbitrary positions in any document.","title":"Source link"},{"location":"deprecations/#hero","text":"Deprecated: 5.5 \u00b7 Removed: 6.0 The hero key, which could be added via Metadata , allowed to render a simple, text-only and page-local teaser text as part of a document. It could be set from front matter with: --- hero: Lorem ipsum dolor sit amet --- # Document title ... The recommended way is to override the hero block via theme extension for a specific page, which has the nice side effect that hero templates can be shared among multiple pages: Markdown --- template: hero.html --- # Document title ... Template {% extends \"base.html\" %} {% block hero %} <!-- Add custom hero here --> {% endblock %}","title":"Hero"},{"location":"deprecations/#docker-image","text":"","title":"Docker image"},{"location":"deprecations/#bundled-plugins","text":"Deprecated: 5.5 \u00b7 Removed: 6.0 Over the last years, the Docker image has continually increased in size. For CI it's important that download times are as short as possible, which is why the following plugins will be removed: mkdocs-awesome-pages-plugin mkdocs-git-revision-date-localized-plugin Note that it's trivial to install plugins inside the Docker image before building your documentation. See the installation guide for a step-by-step guide.","title":"Bundled plugins"},{"location":"getting-started/","text":"Turunan Numerik \u00b6 Dengan melakukan perhitungan turunan metode numerik, kita sangat dianjurkan untuk menggunakan alat hitung baik kalkulator maupun komputer. karena kita akan berurusan dengan angka yang memiliki banyak koma. Kemudian kita juga mendapat data-data berupa nilai-nilai suatu titik (nilai x dan y(f(x)). Kemudian kita akan mengidentifikasi metode yang akan kita gunakan berdasarakan data yang ada atau nilai yang akan kita cari. Turunan ke-1. Metode Beda Maju : Untuk metode beda maju intinya berdasarkan grafik berikut : pada grafik berikut, diibaratkan kita mencari nilai turunan pertama di titik x0 atau f\u2019(x0). Maka kita bisa mencari nilai turunannya dengan rumus berikut : f\u2019(x0) = f(x1)-f(x0)/(x1-x0). Nah, untuk x1-x0 biasanya sering dikenal dengan h (selisih antara dua buah titik terdekat) *aturan h berlaku untuk semua metode. Metode Beda Mundur Bisa diperhatikan terlebih dahulu grafiknya : Pada grafik berikut, dengan menggunakan metode beda mundur. Kita bisa mencari nilai dari f\u2019(x0) menggunakan rumus berikut : f\u2019(x0) = f(x0)-f(x-1)/(x0-x-1) Metode beda pusat Bisa diperhatikan terlebih dahulu grafik berikut : Untuk rumus beda pusat sendiri adalah sebagai berikut : f\u2019(x0) = f(x+1)-f(x-1)/(x+1-x-1) Turunan ke-2 : Untuk turunan kedua sendiri didapatkan dari metode taylor Untuk Metode Beda Maju : f\u201d(x0) = (f(x+2)-2f(x+1)+f(x0))/(x+1-x0)2 Untuk Beda Mundur : f\u201d(x0) = (f(x-2)-2f(x-1)+f(x0))/(x-1-x0)2 Untuk Beda Pusat : f\u201d(x0) = (f(x+1)-2f(x0)+f(x-1))/(x0-x-1)2 Contoh Soal \u00b6 Soal \u00b6 Tentukan turunan ke-1 dari xi di 0.1 dan 0.3 dari Jawaban \u00b6 Untuk xi di 0.1 karena tidak ada nilai sebelum 0.1 maka hanya dapat menggunakan metode maju saja Sedangakan untuk xi di 0.3 bisa menggunakan semua metode. Turunan ke-1 untuk xi dititik 0.1: -Beda maju:f\u2032(0.1)=(f(0.2)\u2212f(0.1)(0.2\u22120.1) =(0.92\u2212043)0.1=4.9 Turunan ke-1 untuk xi dititik 0.3: -Beda maju:f\u2032(0.3)=(f(0.4)\u2212f(0.3)(0.4\u22120.3) =(2.08\u22121.47)0.1=6.1 -Beda mundur:f\u2032(0.3)=(f(0.3)\u2212f(0.2)(0.3\u22120.2) =(1.47\u22120.92)0.1=5.5 -Beda pusat:f\u2032(0.3)=(f(0.4)\u2212f(0.2)(0.4\u22120.2) =(2.08\u22120.92)0.1=5.8 Jika ingin mencari turunan ke dua maka prosesnya hampir sama, akan tetapi rumusnya berbeda. Code Program \u00b6 Code: tabel_soal = [[0.1,0.43], [0.2,0.92], [0.3,1.47],[0.4,2.08],[0.5,2.75]] def menghitung(a): print(\"Turunan pertama dari xi =\",a) if a == tabel_soal[0][0]: x = (tabel_soal[1][1]-tabel_soal[0][1])/(tabel_soal[1][0]-tabel_soal[0][0]) print(\"Dengan Metode Maju hasilnya = \",x ) elif a == tabel_soal[len(tabel_soal)-1][0]: x = (tabel_soal[len(tabel_soal)-1][1]-tabel_soal[len(tabel_soal)-2][1])/(tabel_soal[len(tabel_soal)-1][0]-tabel_soal[len(tabel_soal)-2][0]) print(\"Dengan Metode Mundur hasilnya = \",x) else: for i in range(len(tabel_soal)): if a == tabel_soal[i][0]: x = (tabel_soal[i+1][1]-tabel_soal[i][1])/(tabel_soal[i+1][0]-tabel_soal[i][0]) print(\"Dengan Metode Maju hasilnya = \",x ) y = (tabel_soal[i][1]-tabel_soal[i-1][1])/(tabel_soal[i][0]-tabel_soal[i-1][0]) print(\"Dengan Metode Mundur hasilnya = \",y) z = (tabel_soal[i+1][1]-tabel_soal[i-1][1])/(tabel_soal[i+1][0]-tabel_soal[i-1][0]) print(\"Dengan Metode Mundur hasilnya = \",z) print(\"\") menghitung(0.3) menghitung(0.1) print(\"Sedangkan untuk xi=0.5 :\") menghitung(0.5)","title":"Turunan Numerik"},{"location":"getting-started/#turunan-numerik","text":"Dengan melakukan perhitungan turunan metode numerik, kita sangat dianjurkan untuk menggunakan alat hitung baik kalkulator maupun komputer. karena kita akan berurusan dengan angka yang memiliki banyak koma. Kemudian kita juga mendapat data-data berupa nilai-nilai suatu titik (nilai x dan y(f(x)). Kemudian kita akan mengidentifikasi metode yang akan kita gunakan berdasarakan data yang ada atau nilai yang akan kita cari. Turunan ke-1. Metode Beda Maju : Untuk metode beda maju intinya berdasarkan grafik berikut : pada grafik berikut, diibaratkan kita mencari nilai turunan pertama di titik x0 atau f\u2019(x0). Maka kita bisa mencari nilai turunannya dengan rumus berikut : f\u2019(x0) = f(x1)-f(x0)/(x1-x0). Nah, untuk x1-x0 biasanya sering dikenal dengan h (selisih antara dua buah titik terdekat) *aturan h berlaku untuk semua metode. Metode Beda Mundur Bisa diperhatikan terlebih dahulu grafiknya : Pada grafik berikut, dengan menggunakan metode beda mundur. Kita bisa mencari nilai dari f\u2019(x0) menggunakan rumus berikut : f\u2019(x0) = f(x0)-f(x-1)/(x0-x-1) Metode beda pusat Bisa diperhatikan terlebih dahulu grafik berikut : Untuk rumus beda pusat sendiri adalah sebagai berikut : f\u2019(x0) = f(x+1)-f(x-1)/(x+1-x-1) Turunan ke-2 : Untuk turunan kedua sendiri didapatkan dari metode taylor Untuk Metode Beda Maju : f\u201d(x0) = (f(x+2)-2f(x+1)+f(x0))/(x+1-x0)2 Untuk Beda Mundur : f\u201d(x0) = (f(x-2)-2f(x-1)+f(x0))/(x-1-x0)2 Untuk Beda Pusat : f\u201d(x0) = (f(x+1)-2f(x0)+f(x-1))/(x0-x-1)2","title":"Turunan Numerik"},{"location":"getting-started/#contoh-soal","text":"","title":"Contoh Soal"},{"location":"getting-started/#soal","text":"Tentukan turunan ke-1 dari xi di 0.1 dan 0.3 dari","title":"Soal"},{"location":"getting-started/#jawaban","text":"Untuk xi di 0.1 karena tidak ada nilai sebelum 0.1 maka hanya dapat menggunakan metode maju saja Sedangakan untuk xi di 0.3 bisa menggunakan semua metode. Turunan ke-1 untuk xi dititik 0.1: -Beda maju:f\u2032(0.1)=(f(0.2)\u2212f(0.1)(0.2\u22120.1) =(0.92\u2212043)0.1=4.9 Turunan ke-1 untuk xi dititik 0.3: -Beda maju:f\u2032(0.3)=(f(0.4)\u2212f(0.3)(0.4\u22120.3) =(2.08\u22121.47)0.1=6.1 -Beda mundur:f\u2032(0.3)=(f(0.3)\u2212f(0.2)(0.3\u22120.2) =(1.47\u22120.92)0.1=5.5 -Beda pusat:f\u2032(0.3)=(f(0.4)\u2212f(0.2)(0.4\u22120.2) =(2.08\u22120.92)0.1=5.8 Jika ingin mencari turunan ke dua maka prosesnya hampir sama, akan tetapi rumusnya berbeda.","title":"Jawaban"},{"location":"getting-started/#code-program","text":"Code: tabel_soal = [[0.1,0.43], [0.2,0.92], [0.3,1.47],[0.4,2.08],[0.5,2.75]] def menghitung(a): print(\"Turunan pertama dari xi =\",a) if a == tabel_soal[0][0]: x = (tabel_soal[1][1]-tabel_soal[0][1])/(tabel_soal[1][0]-tabel_soal[0][0]) print(\"Dengan Metode Maju hasilnya = \",x ) elif a == tabel_soal[len(tabel_soal)-1][0]: x = (tabel_soal[len(tabel_soal)-1][1]-tabel_soal[len(tabel_soal)-2][1])/(tabel_soal[len(tabel_soal)-1][0]-tabel_soal[len(tabel_soal)-2][0]) print(\"Dengan Metode Mundur hasilnya = \",x) else: for i in range(len(tabel_soal)): if a == tabel_soal[i][0]: x = (tabel_soal[i+1][1]-tabel_soal[i][1])/(tabel_soal[i+1][0]-tabel_soal[i][0]) print(\"Dengan Metode Maju hasilnya = \",x ) y = (tabel_soal[i][1]-tabel_soal[i-1][1])/(tabel_soal[i][0]-tabel_soal[i-1][0]) print(\"Dengan Metode Mundur hasilnya = \",y) z = (tabel_soal[i+1][1]-tabel_soal[i-1][1])/(tabel_soal[i+1][0]-tabel_soal[i-1][0]) print(\"Dengan Metode Mundur hasilnya = \",z) print(\"\") menghitung(0.3) menghitung(0.1) print(\"Sedangkan untuk xi=0.5 :\") menghitung(0.5)","title":"Code Program"},{"location":"license/","text":"License \u00b6 MIT License Copyright \u00a9 2016-2021 Martin Donath Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#license","text":"MIT License Copyright \u00a9 2016-2021 Martin Donath Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"publishing-your-site/","text":"Publishing your site \u00b6 The great thing about hosting project documentation in a git repository is the ability to deploy it automatically when new changes are pushed. MkDocs makes this ridiculously simple. GitHub Pages \u00b6 If you're already hosting your code on GitHub, GitHub Pages is certainly the most convenient way to publish your project documentation. It's free of charge and pretty easy to set up. with GitHub Actions \u00b6 Using GitHub Actions you can automate the deployment of your project documentation. At the root of your repository, create a new GitHub Actions workflow, e.g. .github/workflows/ci.yml , and copy and paste the following contents: Material for MkDocs name : ci on : push : branches : - master - main jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs-material - run : mkdocs gh-deploy --force Insiders name : ci on : push : branches : - master - main jobs : deploy : runs-on : ubuntu-latest if : github.event.repository.fork == false steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git - run : mkdocs gh-deploy --force env : GH_TOKEN : ${{ secrets.GH_TOKEN }} Now, when a new commit is pushed to either the master or main branches, the static site is automatically built and deployed. Push your changes to see the workflow in action. Your documentation should shortly appear at <username>.github.io/<repository> . Remember to set the GH_TOKEN environment variable to the value of your personal access token when deploying Insiders , which can be done using secrets . with MkDocs \u00b6 If you prefer to deploy your project documentation manually, you can just invoke the following command from the directory containing the mkdocs.yml file: mkdocs gh-deploy --force GitLab Pages \u00b6 If you're hosting your code on GitLab, deploying to GitLab Pages can be done by using the GitLab CI task runner. At the root of your repository, create a task definition named .gitlab-ci.yml and copy and paste the following contents: Material for MkDocs image : python:latest pages : stage : deploy only : - master script : - pip install mkdocs-material - mkdocs build --site-dir public artifacts : paths : - public Insiders image : python:latest pages : stage : deploy only : - master script : - pip install git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git - mkdocs build --site-dir public artifacts : paths : - public Now, when a new commit is pushed to master , the static site is automatically built and deployed. Commit and push the file to your repository to see the workflow in action. Your documentation should shortly appear at <username>.gitlab.io/<repository> . Remember to set the GH_TOKEN environment variable to the value of your personal access token when deploying Insiders , which can be done using masked custom variables .","title":"Publishing your site"},{"location":"publishing-your-site/#publishing-your-site","text":"The great thing about hosting project documentation in a git repository is the ability to deploy it automatically when new changes are pushed. MkDocs makes this ridiculously simple.","title":"Publishing your site"},{"location":"publishing-your-site/#github-pages","text":"If you're already hosting your code on GitHub, GitHub Pages is certainly the most convenient way to publish your project documentation. It's free of charge and pretty easy to set up.","title":"GitHub Pages"},{"location":"publishing-your-site/#with-github-actions","text":"Using GitHub Actions you can automate the deployment of your project documentation. At the root of your repository, create a new GitHub Actions workflow, e.g. .github/workflows/ci.yml , and copy and paste the following contents: Material for MkDocs name : ci on : push : branches : - master - main jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs-material - run : mkdocs gh-deploy --force Insiders name : ci on : push : branches : - master - main jobs : deploy : runs-on : ubuntu-latest if : github.event.repository.fork == false steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git - run : mkdocs gh-deploy --force env : GH_TOKEN : ${{ secrets.GH_TOKEN }} Now, when a new commit is pushed to either the master or main branches, the static site is automatically built and deployed. Push your changes to see the workflow in action. Your documentation should shortly appear at <username>.github.io/<repository> . Remember to set the GH_TOKEN environment variable to the value of your personal access token when deploying Insiders , which can be done using secrets .","title":"with GitHub Actions"},{"location":"publishing-your-site/#with-mkdocs","text":"If you prefer to deploy your project documentation manually, you can just invoke the following command from the directory containing the mkdocs.yml file: mkdocs gh-deploy --force","title":"with MkDocs"},{"location":"publishing-your-site/#gitlab-pages","text":"If you're hosting your code on GitLab, deploying to GitLab Pages can be done by using the GitLab CI task runner. At the root of your repository, create a task definition named .gitlab-ci.yml and copy and paste the following contents: Material for MkDocs image : python:latest pages : stage : deploy only : - master script : - pip install mkdocs-material - mkdocs build --site-dir public artifacts : paths : - public Insiders image : python:latest pages : stage : deploy only : - master script : - pip install git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git - mkdocs build --site-dir public artifacts : paths : - public Now, when a new commit is pushed to master , the static site is automatically built and deployed. Commit and push the file to your repository to see the workflow in action. Your documentation should shortly appear at <username>.gitlab.io/<repository> . Remember to set the GH_TOKEN environment variable to the value of your personal access token when deploying Insiders , which can be done using masked custom variables .","title":"GitLab Pages"},{"location":"troubleshooting/","text":"Troubleshooting \u00b6 Theme not recognized \u00b6 Operating systems: Error: Unrecognized theme mkdocs serve # => INFO - Building documentation... # => ERROR - Config value: 'theme'. Error: Unrecognised theme 'material'. # => ... # => ConfigurationError: Aborted with 1 Configuration Errors! If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. brew or apt-get ) and Material for MkDocs through pip , so both packages end up in different locations. MkDocs only checks its install location for themes. Inadequate permissions \u00b6 Operating systems: Error: Permission denied pip install mkdocs-material # => Could not install packages due to an EnvironmentError: [Errno 13] Permission denied: '...' # => Consider using the --user option or check the permissions. When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are three possible solutions for this, the recommended one of which is to use virtual environments: Virtual environments If you're installing Material for MkDocs with pip , the easiest way to make sure that you end up with the correct versions and without any incompatibility problems between packages it to use a virtual environment . First, ensure that you have a Python version of 3 or higher installed: python --version If you're good to go, create and activate a virtual environment with: python -m venv venv source ./venv/bin/activate Note that the second venv is the name of the folder where to create the virtual environment \u2013 you may choose it as you like. Your terminal should now print (venv) before the prompt and the python executable should be located inside the folder you just created. Next, install Material for MkDocs with pip , which will download and install all packages in the venv folder you just created, including MkDocs and its dependencies: pip install mkdocs-material Verify that MkDocs and Material for MkDocs were both installed correctly: mkdocs --version mkdocs serve --help MkDocs should list material as an option under the --theme flag. When you're finished working with MkDocs, you can exit the virtual environment with: deactivate User space Provide the --user flag to the install command and pip will install the package in a user-site location. While this is not a global installation, it's still not isolated and may lead to problems when you use different versions of Material for MkDocs in other projects: pip install --user mkdocs-material Upgrade Python Upgrade your Python installation by installing Python with Homebrew . This should eliminate a lot of problems you will run into with pip . Yet, it's still not an isolated installation which may also lead to the same problems as installing in user space: brew upgrade python","title":"Troubleshooting"},{"location":"troubleshooting/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"troubleshooting/#theme-not-recognized","text":"Operating systems: Error: Unrecognized theme mkdocs serve # => INFO - Building documentation... # => ERROR - Config value: 'theme'. Error: Unrecognised theme 'material'. # => ... # => ConfigurationError: Aborted with 1 Configuration Errors! If you run into this error, the most common reason is that you installed MkDocs through some package manager (e.g. brew or apt-get ) and Material for MkDocs through pip , so both packages end up in different locations. MkDocs only checks its install location for themes.","title":"Theme not recognized"},{"location":"troubleshooting/#inadequate-permissions","text":"Operating systems: Error: Permission denied pip install mkdocs-material # => Could not install packages due to an EnvironmentError: [Errno 13] Permission denied: '...' # => Consider using the --user option or check the permissions. When you're running the pre-installed version of Python on macOS, pip tries to install packages in a folder for which your user might not have the adequate permissions. There are three possible solutions for this, the recommended one of which is to use virtual environments: Virtual environments If you're installing Material for MkDocs with pip , the easiest way to make sure that you end up with the correct versions and without any incompatibility problems between packages it to use a virtual environment . First, ensure that you have a Python version of 3 or higher installed: python --version If you're good to go, create and activate a virtual environment with: python -m venv venv source ./venv/bin/activate Note that the second venv is the name of the folder where to create the virtual environment \u2013 you may choose it as you like. Your terminal should now print (venv) before the prompt and the python executable should be located inside the folder you just created. Next, install Material for MkDocs with pip , which will download and install all packages in the venv folder you just created, including MkDocs and its dependencies: pip install mkdocs-material Verify that MkDocs and Material for MkDocs were both installed correctly: mkdocs --version mkdocs serve --help MkDocs should list material as an option under the --theme flag. When you're finished working with MkDocs, you can exit the virtual environment with: deactivate User space Provide the --user flag to the install command and pip will install the package in a user-site location. While this is not a global installation, it's still not isolated and may lead to problems when you use different versions of Material for MkDocs in other projects: pip install --user mkdocs-material Upgrade Python Upgrade your Python installation by installing Python with Homebrew . This should eliminate a lot of problems you will run into with pip . Yet, it's still not an isolated installation which may also lead to the same problems as installing in user space: brew upgrade python","title":"Inadequate permissions"},{"location":"upgrading/","text":"Upgrading \u00b6 Upgrade to the latest version with: pip install --upgrade mkdocs-material Inspect the currently installed version with: pip show mkdocs-material Upgrading from 6.x to 7.x \u00b6 What's new? \u00b6 Added support for deploying multiple versions Added support for integrating a language selector Added support for rendering admonitions as inline blocks Rewrite of the underlying reactive architecture Removed Webpack in favor of reactive build strategy (-480 dependencies) Fixed keyboard navigation for code blocks after content tabs switch Changes to mkdocs.yml \u00b6 extra.version.method \u00b6 The versioning method configuration was renamed to extra.version.provider to allow for different versioning strategies in the future: 7.x extra : version : provider : mike 6.x extra : version : method : mike Changes to *.html files \u00b6 The templates have undergone a set of changes to make them future-proof. If you've used theme extension to override a block or template, make sure that it matches the new structure: If you've overridden a block , check base.html for potential changes If you've overridden a template , check the respective *.html file for potential changes base.html @@ -61,7 +61,7 @@ font.text | replace(' ', '+') + ':300,400,400i,700%7C' + font.code | replace(' ', '+') }}&display=fallback\"> - <style>body,input{font-family:\"{{ font.text }}\",-apple-system,BlinkMacSystemFont,Helvetica,Arial,sans-serif}code,kbd,pre{font-family:\"{{ font.code }}\",SFMono-Regular,Consolas,Menlo,monospace}</style> + <style>:root{--md-text-font-family:\"{{ font.text }}\";--md-code-font-family:\"{{ font.code }}\"}</style> {% endif %} {% endblock %} {% if config.extra.manifest %} @@ -131,7 +131,7 @@ {% if page and page.meta and page.meta.hide %} {% set hidden = \"hidden\" if \"navigation\" in page.meta.hide %} {% endif %} - <div class=\"md-sidebar md-sidebar--primary\" data-md-component=\"navigation\" {{ hidden }}> + <div class=\"md-sidebar md-sidebar--primary\" data-md-component=\"sidebar\" data-md-type=\"navigation\" {{ hidden }}> <div class=\"md-sidebar__scrollwrap\"> <div class=\"md-sidebar__inner\"> {% include \"partials/nav.html\" %} @@ -143,7 +143,7 @@ {% if page and page.meta and page.meta.hide %} {% set hidden = \"hidden\" if \"toc\" in page.meta.hide %} {% endif %} - <div class=\"md-sidebar md-sidebar--secondary\" data-md-component=\"toc\" {{ hidden }}> + <div class=\"md-sidebar md-sidebar--secondary\" data-md-component=\"sidebar\" data-md-type=\"toc\" {{ hidden }}> <div class=\"md-sidebar__scrollwrap\"> <div class=\"md-sidebar__inner\"> {% include \"partials/toc.html\" %} @@ -152,7 +152,7 @@ </div> {% endif %} {% endblock %} - <div class=\"md-content\"> + <div class=\"md-content\" data-md-component=\"content\"> <article class=\"md-content__inner md-typeset\"> {% block content %} {% if page.edit_url %} @@ -183,10 +183,18 @@ {% include \"partials/footer.html\" %} {% endblock %} </div> - {% block scripts %} - <script src=\"{{ 'assets/javascripts/vendor.18f0862e.min.js' | url }}\"></script> - <script src=\"{{ 'assets/javascripts/bundle.994580cf.min.js' | url }}\"></script> - {%- set translations = {} -%} + <div class=\"md-dialog\" data-md-component=\"dialog\"> + <div class=\"md-dialog__inner md-typeset\"></div> + </div> + {% block config %} + {%- set app = { + \"base\": base_url, + \"features\": features, + \"translations\": {}, + \"search\": \"assets/javascripts/workers/search.217ffd95.min.js\" | url, + \"version\": config.extra.version or None + } -%} + {%- set translations = app.translations -%} {%- for key in [ \"clipboard.copy\", \"clipboard.copied\", @@ -204,19 +212,12 @@ ] -%} {%- set _ = translations.update({ key: lang.t(key) }) -%} {%- endfor -%} - <script id=\"__lang\" type=\"application/json\"> - {{- translations | tojson -}} - </script> - {% block config %}{% endblock %} - <script> - app = initialize({ - base: \"{{ base_url }}\", - features: {{ features or [] | tojson }}, - search: Object.assign({ - worker: \"{{ 'assets/javascripts/worker/search.9c0e82ba.min.js' | url }}\" - }, typeof search !== \"undefined\" && search) - }) + <script id=\"__config\" type=\"application/json\"> + {{- app | tojson -}} </script> + {% endblock %} + {% block scripts %} + <script src=\"{{ 'assets/javascripts/bundle.926459b3.min.js' | url }}\"></script> {% for path in config[\"extra_javascript\"] %} <script src=\"{{ path | url }}\"></script> {% endfor %} partials/footer.html - <div class=\"md-footer-nav\"> - <nav class=\"md-footer-nav__inner md-grid\" aria-label=\"{{ lang.t('footer.title') }}\"> - {% if page.previous_page %} - <a href=\"{{ page.previous_page.url | url }}\" class=\"md-footer-nav__link md-footer-nav__link--prev\" rel=\"prev\"> - <div class=\"md-footer-nav__button md-icon\"> - {% include \".icons/material/arrow-left.svg\" %} - </div> - <div class=\"md-footer-nav__title\"> - <div class=\"md-ellipsis\"> - <span class=\"md-footer-nav__direction\"> - {{ lang.t(\"footer.previous\") }} - </span> - {{ page.previous_page.title }} - </div> - </div> - </a> - {% endif %} - {% if page.next_page %} - <a href=\"{{ page.next_page.url | url }}\" class=\"md-footer-nav__link md-footer-nav__link--next\" rel=\"next\"> - <div class=\"md-footer-nav__title\"> - <div class=\"md-ellipsis\"> - <span class=\"md-footer-nav__direction\"> - {{ lang.t(\"footer.next\") }} - </span> - {{ page.next_page.title }} - </div> + <nav class=\"md-footer__inner md-grid\" aria-label=\"{{ lang.t('footer.title') }}\"> + {% if page.previous_page %} + <a href=\"{{ page.previous_page.url | url }}\" class=\"md-footer__link md-footer__link--prev\" rel=\"prev\"> + <div class=\"md-footer__button md-icon\"> + {% include \".icons/material/arrow-left.svg\" %} + </div> + <div class=\"md-footer__title\"> + <div class=\"md-ellipsis\"> + <span class=\"md-footer__direction\"> + {{ lang.t(\"footer.previous\") }} + </span> + {{ page.previous_page.title }} </div> - <div class=\"md-footer-nav__button md-icon\"> - {% include \".icons/material/arrow-right.svg\" %} + </div> + </a> + {% endif %} + {% if page.next_page %} + <a href=\"{{ page.next_page.url | url }}\" class=\"md-footer__link md-footer__link--next\" rel=\"next\"> + <div class=\"md-footer__title\"> + <div class=\"md-ellipsis\"> + <span class=\"md-footer__direction\"> + {{ lang.t(\"footer.next\") }} + </span> + {{ page.next_page.title }} </div> - </a> - {% endif %} - </nav> - </div> + </div> + <div class=\"md-footer__button md-icon\"> + {% include \".icons/material/arrow-right.svg\" %} + </div> + </a> + {% endif %} + </nav> {% endif %} <div class=\"md-footer-meta md-typeset\"> <div class=\"md-footer-meta__inner md-grid\"> partials/header.html @@ -6,21 +6,21 @@ {% set site_url = site_url ~ \"/index.html\" %} {% endif %} <header class=\"md-header\" data-md-component=\"header\"> - <nav class=\"md-header-nav md-grid\" aria-label=\"{{ lang.t('header.title') }}\"> - <a href=\"{{ site_url }}\" title=\"{{ config.site_name | e }}\" class=\"md-header-nav__button md-logo\" aria-label=\"{{ config.site_name }}\"> + <nav class=\"md-header__inner md-grid\" aria-label=\"{{ lang.t('header.title') }}\"> + <a href=\"{{ site_url }}\" title=\"{{ config.site_name | e }}\" class=\"md-header__button md-logo\" aria-label=\"{{ config.site_name }}\"> {% include \"partials/logo.html\" %} </a> - <label class=\"md-header-nav__button md-icon\" for=\"__drawer\"> + <label class=\"md-header__button md-icon\" for=\"__drawer\"> {% include \".icons/material/menu\" ~ \".svg\" %} </label> - <div class=\"md-header-nav__title\" data-md-component=\"header-title\"> - <div class=\"md-header-nav__ellipsis\"> - <div class=\"md-header-nav__topic\"> + <div class=\"md-header__title\" data-md-component=\"header-title\"> + <div class=\"md-header__ellipsis\"> + <div class=\"md-header__topic\"> <span class=\"md-ellipsis\"> {{ config.site_name }} </span> </div> - <div class=\"md-header-nav__topic\"> + <div class=\"md-header__topic\" data-md-component=\"header-topic\"> <span class=\"md-ellipsis\"> {% if page and page.meta and page.meta.title %} {{ page.meta.title }} @@ -31,14 +31,35 @@ </div> </div> </div> + <div class=\"md-header__options\"> + {% if config.extra.alternate %} + <div class=\"md-select\"> + {% set icon = config.theme.icon.alternate or \"material/translate\" %} + <span class=\"md-header__button md-icon\"> + {% include \".icons/\" ~ icon ~ \".svg\" %} + </span> + <div class=\"md-select__inner\"> + <ul class=\"md-select__list\"> + {% for alt in config.extra.alternate %} + <li class=\"md-select__item\"> + <a href=\"{{ alt.link | url }}\" class=\"md-select__link\"> + {{ alt.name }} + </a> + </li> + {% endfor %} + </ul> + </div> + </div> + {% endif %} + </div> {% if \"search\" in config[\"plugins\"] %} - <label class=\"md-header-nav__button md-icon\" for=\"__search\"> + <label class=\"md-header__button md-icon\" for=\"__search\"> {% include \".icons/material/magnify.svg\" %} </label> {% include \"partials/search.html\" %} {% endif %} {% if config.repo_url %} - <div class=\"md-header-nav__source\"> + <div class=\"md-header__source\"> {% include \"partials/source.html\" %} </div> {% endif %} partials/source.html @@ -4,5 +4,5 @@ {% import \"partials/language.html\" as lang with context %} -<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\" class=\"md-source\"> +<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\" class=\"md-source\" data-md-component=\"source\"> <div class=\"md-source__icon md-icon\"> {% set icon = config.theme.icon.repo or \"fontawesome/brands/git-alt\" %} {% include \".icons/\" ~ icon ~ \".svg\" %} partials/toc.html @@ -12,7 +12,7 @@ <span class=\"md-nav__icon md-icon\"></span> {{ lang.t(\"toc.title\") }} </label> - <ul class=\"md-nav__list\" data-md-scrollfix> + <ul class=\"md-nav__list\" data-md-component=\"toc\" data-md-scrollfix> {% for toc_item in toc %} {% include \"partials/toc-item.html\" %} {% endfor %} Upgrading from 5.x to 6.x \u00b6 What's new? \u00b6 Improved search result look and feel Improved search result stability while typing Improved search result grouping (pages + headings) Improved search result relevance and scoring Added display of missing query terms to search results Reduced size of vendor bundle by 25% (84kb \u2192 67kb) Reduced size of the Docker image to improve CI build performance Removed hero partial in favor of custom implementation Removed deprecated front matter features Changes to mkdocs.yml \u00b6 Following is a list of changes that need to be made to mkdocs.yml . Note that you only have to adjust the value if you defined it, so if your configuration does not contain the key, you can skip it. theme.features \u00b6 All feature flags that can be set from mkdocs.yml , like tabs and instant loading , are now prefixed with the name of the component or function they apply to, e.g. navigation.* : 6.x theme : features : - navigation.tabs - navigation.instant 5.x theme : features : - tabs - instant Changes to *.html files \u00b6 The templates have undergone a set of changes to make them future-proof. If you've used theme extension to override a block or template, make sure that it matches the new structure: If you've overridden a block , check base.html for potential changes If you've overridden a template , check the respective *.html file for potential changes base.html @@ -22,13 +22,6 @@ {% import \"partials/language.html\" as lang with context %} -<!-- Theme options --> -{% set palette = config.theme.palette %} -{% if not palette is mapping %} - {% set palette = palette | first %} -{% endif %} -{% set font = config.theme.font %} - <!doctype html> <html lang=\"{{ lang.t('language') }}\" class=\"no-js\"> <head> @@ -45,21 +38,8 @@ <meta name=\"description\" content=\"{{ config.site_description }}\" /> {% endif %} - <!-- Redirect --> - {% if page and page.meta and page.meta.redirect %} - <script> - var anchor = window.location.hash.substr(1) - location.href = '{{ page.meta.redirect }}' + - (anchor ? '#' + anchor : '') - </script> - - <!-- Fallback in case JavaScript is not available --> - <meta http-equiv=\"refresh\" content=\"0; url={{ page.meta.redirect }}\" /> - <meta name=\"robots\" content=\"noindex\" /> - <link rel=\"canonical\" href=\"{{ page.meta.redirect }}\" /> - <!-- Canonical --> - {% elif page.canonical_url %} + {% if page.canonical_url %} <link rel=\"canonical\" href=\"{{ page.canonical_url }}\" /> {% endif %} @@ -96,20 +76,21 @@ <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/main.css' | url }}\" /> <!-- Extra color palette --> - {% if palette.scheme or palette.primary or palette.accent %} + {% if config.theme.palette %} + {% set palette = config.theme.palette %} <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/palette.css' | url }}\" /> - {% endif %} - <!-- Theme-color meta tag for Android --> - {% if palette.primary %} - {% import \"partials/palette.html\" as map %} - {% set primary = map.primary( - palette.primary | replace(\" \", \"-\") | lower - ) %} - <meta name=\"theme-color\" content=\"{{ primary }}\" /> + <!-- Theme-color meta tag for Android --> + {% if palette.primary %} + {% import \"partials/palette.html\" as map %} + {% set primary = map.primary( + palette.primary | replace(\" \", \"-\") | lower + ) %} + <meta name=\"theme-color\" content=\"{{ primary }}\" /> + {% endif %} {% endif %} {% endblock %} @@ -120,7 +101,8 @@ {% block fonts %} <!-- Load fonts from Google --> - {% if font != false %} + {% if config.theme.font != false %} + {% set font = config.theme.font %} <link href=\"https://fonts.gstatic.com\" rel=\"preconnect\" crossorigin /> <link rel=\"stylesheet\" @@ -169,8 +151,12 @@ <!-- Text direction and color palette, if defined --> {% set direction = config.theme.direction or lang.t('direction') %} - {% if palette.scheme or palette.primary or palette.accent %} - {% set scheme = palette.scheme | lower %} + {% if config.theme.palette %} + {% set palette = config.theme.palette %} + {% if not palette is mapping %} + {% set palette = palette | first %} + {% endif %} + {% set scheme = palette.scheme | replace(\" \", \"-\") | lower %} {% set primary = palette.primary | replace(\" \", \"-\") | lower %} {% set accent = palette.accent | replace(\" \", \"-\") | lower %} <body @@ -179,18 +165,19 @@ data-md-color-primary=\"{{ primary }}\" data-md-color-accent=\"{{ accent }}\" > + + <!-- Experimental: set color scheme based on preference --> + {% if \"preference\" == scheme %} + <script> + if (matchMedia(\"(prefers-color-scheme: dark)\").matches) + document.body.setAttribute(\"data-md-color-scheme\", \"slate\") + </script> + {% endif %} + {% else %} <body dir=\"{{ direction }}\"> {% endif %} - <!-- Experimental: set color scheme based on preference --> - {% if \"preference\" == palette.scheme %} - <script> - if (matchMedia(\"(prefers-color-scheme: dark)\").matches) - document.body.setAttribute(\"data-md-color-scheme\", \"slate\") - </script> - {% endif %} - <!-- State toggles - we need to set autocomplete=\"off\" in order to reset the drawer on back button invocation in some browsers @@ -243,15 +230,11 @@ <div class=\"md-container\" data-md-component=\"container\"> <!-- Hero teaser --> - {% block hero %} - {% if page and page.meta and page.meta.hero %} - {% include \"partials/hero.html\" with context %} - {% endif %} - {% endblock %} + {% block hero %}{% endblock %} <!-- Tabs navigation --> {% block tabs %} - {% if \"tabs\" in config.theme.features %} + {% if \"navigation.tabs\" in config.theme.features %} {% include \"partials/tabs.html\" %} {% endif %} {% endblock %} @@ -310,13 +293,6 @@ </a> {% endif %} - <!-- Link to source file --> - {% block source %} - {% if page and page.meta and page.meta.source %} - {% include \"partials/source-link.html\" %} - {% endif %} - {% endblock %} - <!-- Hack: check whether the content contains a h1 headline. If it doesn't, the page title (or respectively site name) is used @@ -370,7 +346,10 @@ \"search.result.placeholder\", \"search.result.none\", \"search.result.one\", - \"search.result.other\" + \"search.result.other\", + \"search.result.more.one\", + \"search.result.more.other\", + \"search.result.term.missing\" ] -%} {%- set _ = translations.update({ key: lang.t(key) }) -%} {%- endfor -%} partials/hero.html @@ -1,12 +0,0 @@ -{#- - This file was automatically generated - do not edit --#} -{% set class = \"md-hero\" %} -{% if \"tabs\" not in config.theme.features %} - {% set class = \"md-hero md-hero--expand\" %} -{% endif %} -<div class=\"{{ class }}\" data-md-component=\"hero\"> - <div class=\"md-hero__inner md-grid\"> - {{ page.meta.hero }} - </div> -</div> partials/source-link -{#- - This file was automatically generated - do not edit --#} -{% import \"partials/language.html\" as lang with context %} -{% set repo = config.repo_url %} -{% if repo | last == \"/\" %} - {% set repo = repo[:-1] %} -{% endif %} -{% set path = page.meta.path | default(\"\") %} -<a href=\"{{ [repo, path, page.meta.source] | join('/') }}\" title=\"{{ page.meta.source }}\" class=\"md-content__button md-icon\"> - {{ lang.t(\"meta.source\") }} - {% set icon = config.theme.icon.repo or \"fontawesome/brands/git-alt\" %} - {% include \".icons/\" ~ icon ~ \".svg\" %} -</a> Upgrading from 4.x to 5.x \u00b6 What's new? \u00b6 Reactive architecture \u2013 try app . dialog$ . next ( \"Hi!\" ) in the console Instant loading \u2013 make Material behave like a Single Page Application Improved CSS customization with CSS variables \u2013 set your brand's colors Improved CSS resilience, e.g. proper sidebar locking for customized headers Improved icon integration and configuration \u2013 now including over 5k icons Added possibility to use any icon for logo, repository and social links Search UI does not freeze anymore (moved to web worker) Search index built only once when using instant loading Improved extensible keyboard handling Support for prebuilt search indexes Support for displaying stars and forks for GitLab repositories Support for scroll snapping of sidebars and search results Reduced HTML and CSS footprint due to deprecation of Internet Explorer support Slight facelifting of some UI elements (Admonitions, tables, ...) Changes to mkdocs.yml \u00b6 Following is a list of changes that need to be made to mkdocs.yml . Note that you only have to adjust the value if you defined it, so if your configuration does not contain the key, you can skip it. theme.feature \u00b6 Optional features like tabs and instant loading are now implemented as flags and can be enabled by listing them in mkdocs.yml under theme.features : 5.x theme : features : - tabs - instant 4.x theme : feature : tabs : true theme.logo.icon \u00b6 The logo icon configuration was centralized under theme.icon.logo and can now be set to any of the icons bundled with the theme : 5.x theme : icon : logo : material/cloud 4.x theme : logo : icon : cloud extra.repo_icon \u00b6 The repo icon configuration was centralized under theme.icon.repo and can now be set to any of the icons bundled with the theme : 5.x theme : icon : repo : fontawesome/brands/gitlab 4.x extra : repo_icon : gitlab extra.search.* \u00b6 Search is now configured as part of the plugin options . Note that the search languages must now be listed as an array of strings and the tokenizer was renamed to separator : 5.x plugins : - search : separator : '[\\s\\-\\.]+' lang : - en - de - ru 4.x extra : search : language : en, de, ru tokenizer : '[\\s\\-\\.]+' extra.social.* \u00b6 Social links stayed in the same place, but the type key was renamed to icon in order to match the new way of specifying which icon to be used: 5.x extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk 4.x extra : social : - type : github link : https://github.com/squidfunk Changes to *.html files \u00b6 The templates have undergone a set of changes to make them future-proof. If you've used theme extension to override a block or template, make sure that it matches the new structure: If you've overridden a block , check base.html for potential changes If you've overridden a template , check the respective *.html file for potential changes base.html @@ -2,7 +2,6 @@ This file was automatically generated - do not edit -#} {% import \"partials/language.html\" as lang with context %} -{% set feature = config.theme.feature %} {% set palette = config.theme.palette %} {% set font = config.theme.font %} <!doctype html> @@ -30,19 +29,6 @@ {% elif config.site_author %} <meta name=\"author\" content=\"{{ config.site_author }}\"> {% endif %} - {% for key in [ - \"clipboard.copy\", - \"clipboard.copied\", - \"search.language\", - \"search.pipeline.stopwords\", - \"search.pipeline.trimmer\", - \"search.result.none\", - \"search.result.one\", - \"search.result.other\", - \"search.tokenizer\" - ] %} - <meta name=\"lang:{{ key }}\" content=\"{{ lang.t(key) }}\"> - {% endfor %} <link rel=\"shortcut icon\" href=\"{{ config.theme.favicon | url }}\"> <meta name=\"generator\" content=\"mkdocs-{{ mkdocs_version }}, mkdocs-material-5.0.0\"> {% endblock %} @@ -56,9 +42,9 @@ {% endif %} {% endblock %} {% block styles %} - <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/application.********.css' | url }}\"> + <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/main.********.min.css' | url }}\"> {% if palette.primary or palette.accent %} - <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/application-palette.********.css' | url }}\"> + <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/palette.********.min.css' | url }}\"> {% endif %} {% if palette.primary %} {% import \"partials/palette.html\" as map %} @@ -69,20 +55,17 @@ {% endif %} {% endblock %} {% block libs %} - <script src=\"{{ 'assets/javascripts/modernizr.********.js' | url }}\"></script> {% endblock %} {% block fonts %} {% if font != false %} <link href=\"https://fonts.gstatic.com\" rel=\"preconnect\" crossorigin> <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family={{ font.text | replace(' ', '+') + ':300,400,400i,700%7C' + font.code | replace(' ', '+') }}&display=fallback\"> <style>body,input{font-family:\"{{ font.text }}\",\"Helvetica Neue\",Helvetica,Arial,sans-serif}code,kbd,pre{font-family:\"{{ font.code }}\",\"Courier New\",Courier,monospace}</style> {% endif %} {% endblock %} - <link rel=\"stylesheet\" href=\"{{ 'assets/fonts/material-icons.css' | url }}\"> {% if config.extra.manifest %} <link rel=\"manifest\" href=\"{{ config.extra.manifest | url }}\" crossorigin=\"use-credentials\"> {% endif %} @@ -95,47 +77,50 @@ {% endblock %} {% block extrahead %}{% endblock %} </head> + {% set direction = config.theme.direction | default(lang.t('direction')) %} {% if palette.primary or palette.accent %} {% set primary = palette.primary | replace(\" \", \"-\") | lower %} {% set accent = palette.accent | replace(\" \", \"-\") | lower %} - <body dir=\"{{ lang.t('direction') }}\" data-md-color-primary=\"{{ primary }}\" data-md-color-accent=\"{{ accent }}\"> + <body dir=\"{{ direction }}\" data-md-color-primary=\"{{ primary }}\" data-md-color-accent=\"{{ accent }}\"> {% else %} - <body dir=\"{{ lang.t('direction') }}\"> + <body dir=\"{{ direction }}\"> {% endif %} - <svg class=\"md-svg\"> - <defs> - {% set platform = config.extra.repo_icon or config.repo_url %} - {% if \"github\" in platform %} - {% include \"assets/images/icons/github.f0b8504a.svg\" %} - {% elif \"gitlab\" in platform %} - {% include \"assets/images/icons/gitlab.6dd19c00.svg\" %} - {% elif \"bitbucket\" in platform %} - {% include \"assets/images/icons/bitbucket.1b09e088.svg\" %} - {% endif %} - </defs> - </svg> <input class=\"md-toggle\" data-md-toggle=\"drawer\" type=\"checkbox\" id=\"__drawer\" autocomplete=\"off\"> <input class=\"md-toggle\" data-md-toggle=\"search\" type=\"checkbox\" id=\"__search\" autocomplete=\"off\"> - <label class=\"md-overlay\" data-md-component=\"overlay\" for=\"__drawer\"></label> + <label class=\"md-overlay\" for=\"__drawer\"></label> + <div data-md-component=\"skip\"> + {% if page.toc | first is defined %} + {% set skip = page.toc | first %} + <a href=\"{{ skip.url | url }}\" class=\"md-skip\"> + {{ lang.t('skip.link.title') }} + </a> + {% endif %} + </div> + <div data-md-component=\"announce\"> + {% if self.announce() %} + <aside class=\"md-announce\"> + <div class=\"md-announce__inner md-grid md-typeset\"> + {% block announce %}{% endblock %} + </div> + </aside> + {% endif %} + </div> {% block header %} {% include \"partials/header.html\" %} {% endblock %} - <div class=\"md-container\"> + <div class=\"md-container\" data-md-component=\"container\"> {% block hero %} {% if page and page.meta and page.meta.hero %} {% include \"partials/hero.html\" with context %} {% endif %} {% endblock %} - {% if feature.tabs %} - {% include \"partials/tabs.html\" %} - {% endif %} + {% block tabs %} + {% if \"tabs\" in config.theme.features %} + {% include \"partials/tabs.html\" %} + {% endif %} + {% endblock %} - <main class=\"md-main\" role=\"main\"> - <div class=\"md-main__inner md-grid\" data-md-component=\"container\"> + <main class=\"md-main\" data-md-component=\"main\"> + <div class=\"md-main__inner md-grid\"> {% block site_nav %} {% if nav %} <div class=\"md-sidebar md-sidebar--primary\" data-md-component=\"navigation\"> @@ -160,41 +141,25 @@ <article class=\"md-content__inner md-typeset\"> {% block content %} {% if page.edit_url %} - <a href=\"{{ page.edit_url }}\" title=\"{{ lang.t('edit.link.title') }}\" class=\"md-icon md-content__icon\">&#xE3C9;</a> + <a href=\"{{ page.edit_url }}\" title=\"{{ lang.t('edit.link.title') }}\" class=\"md-content__button md-icon\"> + {% include \".icons/material/pencil.svg\" %} + </a> {% endif %} + {% block source %} + {% if page and page.meta and page.meta.source %} + {% include \"partials/source-link.html\" %} + {% endif %} + {% endblock %} {% if not \"\\x3ch1\" in page.content %} <h1>{{ page.title | default(config.site_name, true)}}</h1> {% endif %} {{ page.content }} - {% block source %} - {% if page and page.meta and page.meta.source %} - <h2 id=\"__source\">{{ lang.t(\"meta.source\") }}</h2> - {% set repo = config.repo_url %} - {% if repo | last == \"/\" %} - {% set repo = repo[:-1] %} - {% endif %} - {% set path = page.meta.path | default([\"\"]) %} - {% set file = page.meta.source %} - <a href=\"{{ [repo, path, file] | join('/') }}\" title=\"{{ file }}\" class=\"md-source-file\"> - {{ file }} - </a> - {% endif %} - {% endblock %} + {% if page and page.meta %} + {% if page.meta.git_revision_date_localized or + page.meta.revision_date + %} + {% include \"partials/source-date.html\" %} - {% if page and page.meta and ( - page.meta.git_revision_date_localized or - page.meta.revision_date - ) %} - {% set label = lang.t(\"source.revision.date\") %} - <hr> - <div class=\"md-source-date\"> - <small> - {% if page.meta.git_revision_date_localized %} - {{ label }}: {{ page.meta.git_revision_date_localized }} - {% elif page.meta.revision_date %} - {{ label }}: {{ page.meta.revision_date }} - {% endif %} - </small> - </div> {% endif %} {% endblock %} {% block disqus %} @@ -208,29 +174,35 @@ {% include \"partials/footer.html\" %} {% endblock %} </div> {% block scripts %} - <script src=\"{{ 'assets/javascripts/application.********.js' | url }}\"></script> - {% if lang.t(\"search.language\") != \"en\" %} - {% set languages = lang.t(\"search.language\").split(\",\") %} - {% if languages | length and languages[0] != \"\" %} - {% set path = \"assets/javascripts/lunr/\" %} - <script src=\"{{ (path ~ 'lunr.stemmer.support.js') | url }}\"></script> - {% for language in languages | map(\"trim\") %} - {% if language != \"en\" %} - {% if language == \"ja\" %} - <script src=\"{{ (path ~ 'tinyseg.js') | url }}\"></script> - {% endif %} - {% if language in (\"ar\", \"da\", \"de\", \"es\", \"fi\", \"fr\", \"hu\", \"it\", \"ja\", \"nl\", \"no\", \"pt\", \"ro\", \"ru\", \"sv\", \"th\", \"tr\", \"vi\") %} - <script src=\"{{ (path ~ 'lunr.' ~ language ~ '.js') | url }}\"></script> - {% endif %} - {% endif %} - {% endfor %} - {% if languages | length > 1 %} - <script src=\"{{ (path ~ 'lunr.multi.js') | url }}\"></script> - {% endif %} - {% endif %} - {% endif %} - <script>app.initialize({version:\"{{ mkdocs_version }}\",url:{base:\"{{ base_url }}\"}})</script> + <script src=\"{{ 'assets/javascripts/vendor.********.min.js' | url }}\"></script> + <script src=\"{{ 'assets/javascripts/bundle.********.min.js' | url }}\"></script> + {%- set translations = {} -%} + {%- for key in [ + \"clipboard.copy\", + \"clipboard.copied\", + \"search.config.lang\", + \"search.config.pipeline\", + \"search.config.separator\", + \"search.result.placeholder\", + \"search.result.none\", + \"search.result.one\", + \"search.result.other\" + ] -%} + {%- set _ = translations.update({ key: lang.t(key) }) -%} + {%- endfor -%} + <script id=\"__lang\" type=\"application/json\"> + {{- translations | tojson -}} + </script> + {% block config %}{% endblock %} + <script> + app = initialize({ + base: \"{{ base_url }}\", + features: {{ config.theme.features | tojson }}, + search: Object.assign({ + worker: \"{{ 'assets/javascripts/worker/search.********.min.js' | url }}\" + }, typeof search !== \"undefined\" && search) + }) + </script> {% for path in config[\"extra_javascript\"] %} <script src=\"{{ path | url }}\"></script> {% endfor %} partials/footer.html @@ -5,34 +5,34 @@ <div class=\"md-footer-nav\"> - <nav class=\"md-footer-nav__inner md-grid\"> + <nav class=\"md-footer-nav__inner md-grid\" aria-label=\"{{ lang.t('footer.title') }}\"> {% if page.previous_page %} - <a href=\"{{ page.previous_page.url | url }}\" title=\"{{ page.previous_page.title | striptags }}\" class=\"md-flex md-footer-nav__link md-footer-nav__link--prev\" rel=\"prev\"> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <i class=\"md-icon md-icon--arrow-back md-footer-nav__button\"></i> + <a href=\"{{ page.previous_page.url | url }}\" title=\"{{ page.previous_page.title | striptags }}\" class=\"md-footer-nav__link md-footer-nav__link--prev\" rel=\"prev\"> + <div class=\"md-footer-nav__button md-icon\"> + {% include \".icons/material/arrow-left.svg\" %} </div> - <div class=\"md-flex__cell md-flex__cell--stretch md-footer-nav__title\"> - <span class=\"md-flex__ellipsis\"> + <div class=\"md-footer-nav__title\"> + <div class=\"md-ellipsis\"> <span class=\"md-footer-nav__direction\"> {{ lang.t(\"footer.previous\") }} </span> {{ page.previous_page.title }} - </span> + </div> </div> </a> {% endif %} {% if page.next_page %} - <a href=\"{{ page.next_page.url | url }}\" title=\"{{ page.next_page.title | striptags }}\" class=\"md-flex md-footer-nav__link md-footer-nav__link--next\" rel=\"next\"> - <div class=\"md-flex__cell md-flex__cell--stretch md-footer-nav__title\"> - <span class=\"md-flex__ellipsis\"> + <a href=\"{{ page.next_page.url | url }}\" title=\"{{ page.next_page.title | striptags }}\" class=\"md-footer-nav__link md-footer-nav__link--next\" rel=\"next\"> + <div class=\"md-footer-nav__title\"> + <div class=\"md-ellipsis\"> <span class=\"md-footer-nav__direction\"> {{ lang.t(\"footer.next\") }} </span> {{ page.next_page.title }} - </span> + </div> </div> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <i class=\"md-icon md-icon--arrow-forward md-footer-nav__button\"></i> + <div class=\"md-footer-nav__button md-icon\"> + {% include \".icons/material/arrow-right.svg\" %} </div> </a> {% endif %} partials/header.html @@ -2,51 +2,43 @@ This file was automatically generated - do not edit -#} <header class=\"md-header\" data-md-component=\"header\"> - <nav class=\"md-header-nav md-grid\"> - <div class=\"md-flex\"> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" aria-label=\"{{ config.site_name }}\" class=\"md-header-nav__button md-logo\"> - {% if config.theme.logo.icon %} - <i class=\"md-icon\">{{ config.theme.logo.icon }}</i> - {% else %} - <img alt=\"logo\" src=\"{{ config.theme.logo | url }}\" width=\"24\" height=\"24\"> - {% endif %} - </a> - </div> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <label class=\"md-icon md-icon--menu md-header-nav__button\" for=\"__drawer\"></label> - </div> - <div class=\"md-flex__cell md-flex__cell--stretch\"> - <div class=\"md-flex__ellipsis md-header-nav__title\" data-md-component=\"title\"> - {% if config.site_name == page.title %} - {{ config.site_name }} - {% else %} - <span class=\"md-header-nav__topic\"> - {{ config.site_name }} - </span> - <span class=\"md-header-nav__topic\"> - {% if page and page.meta and page.meta.title %} - {{ page.meta.title }} - {% else %} - {{ page.title }} - {% endif %} - </span> - {% endif %} + <nav class=\"md-header-nav md-grid\" aria-label=\"{{ lang.t('header.title') }}\"> + <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-header-nav__button md-logo\" aria-label=\"{{ config.site_name }}\"> + {% include \"partials/logo.html\" %} + </a> + <label class=\"md-header-nav__button md-icon\" for=\"__drawer\"> + {% include \".icons/material/menu\" ~ \".svg\" %} + </label> + <div class=\"md-header-nav__title\" data-md-component=\"header-title\"> + {% if config.site_name == page.title %} + <div class=\"md-header-nav__ellipsis md-ellipsis\"> + {{ config.site_name }} </div> - </div> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - {% if \"search\" in config[\"plugins\"] %} - <label class=\"md-icon md-icon--search md-header-nav__button\" for=\"__search\"></label> - {% include \"partials/search.html\" %} - {% endif %} - </div> - {% if config.repo_url %} - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <div class=\"md-header-nav__source\"> - {% include \"partials/source.html\" %} - </div> + {% else %} + <div class=\"md-header-nav__ellipsis\"> + <span class=\"md-header-nav__topic md-ellipsis\"> + {{ config.site_name }} + </span> + <span class=\"md-header-nav__topic md-ellipsis\"> + {% if page and page.meta and page.meta.title %} + {{ page.meta.title }} + {% else %} + {{ page.title }} + {% endif %} + </span> </div> {% endif %} </div> + {% if \"search\" in config[\"plugins\"] %} + <label class=\"md-header-nav__button md-icon\" for=\"__search\"> + {% include \".icons/material/magnify.svg\" %} + </label> + {% include \"partials/search.html\" %} + {% endif %} + {% if config.repo_url %} + <div class=\"md-header-nav__source\"> + {% include \"partials/source.html\" %} + </div> + {% endif %} </nav> </header> partials/hero.html @@ -1,9 +1,8 @@ {#- This file was automatically generated - do not edit -#} -{% set feature = config.theme.feature %} {% set class = \"md-hero\" %} -{% if not feature.tabs %} +{% if \"tabs\" not in config.theme.features %} {% set class = \"md-hero md-hero--expand\" %} {% endif %} <div class=\"{{ class }}\" data-md-component=\"hero\"> partials/language.html @@ -3,12 +3,4 @@ -#} {% import \"partials/language/\" + config.theme.language + \".html\" as lang %} {% import \"partials/language/en.html\" as fallback %} -{% macro t(key) %}{{ { - \"direction\": config.theme.direction, - \"search.language\": ( - config.extra.search | default({}) - ).language, - \"search.tokenizer\": ( - config.extra.search | default({}) - ).tokenizer | default(\"\", true), -}[key] or lang.t(key) or fallback.t(key) }}{% endmacro %} +{% macro t(key) %}{{ lang.t(key) | default(fallback.t(key)) }}{% endmacro %} partials/logo.html @@ -0,0 +1,9 @@ +{#- + This file was automatically generated - do not edit +-#} +{% if config.theme.logo %} + <img src=\"{{ config.theme.logo | url }}\" alt=\"logo\"> +{% else %} + {% set icon = config.theme.icon.logo or \"material/library\" %} + {% include \".icons/\" ~ icon ~ \".svg\" %} +{% endif %} partials/nav-item.html @@ -14,9 +14,15 @@ {% endif %} <label class=\"md-nav__link\" for=\"{{ path }}\"> {{ nav_item.title }} + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/chevron-right.svg\" %} + </span> </label> - <nav class=\"md-nav\" data-md-component=\"collapsible\" data-md-level=\"{{ level }}\"> + <nav class=\"md-nav\" aria-label=\"{{ nav_item.title }}\" data-md-level=\"{{ level }}\"> <label class=\"md-nav__title\" for=\"{{ path }}\"> + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/arrow-left.svg\" %} + </span> {{ nav_item.title }} </label> <ul class=\"md-nav__list\" data-md-scrollfix> @@ -39,6 +45,9 @@ {% if toc | first is defined %} <label class=\"md-nav__link md-nav__link--active\" for=\"__toc\"> {{ nav_item.title }} + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/table-of-contents.svg\" %} + </span> </label> {% endif %} <a href=\"{{ nav_item.url | url }}\" title=\"{{ nav_item.title | striptags }}\" class=\"md-nav__link md-nav__link--active\"> partials/nav.html @@ -1,14 +1,10 @@ {#- This file was automatically generated - do not edit -#} -<nav class=\"md-nav md-nav--primary\" data-md-level=\"0\"> - <label class=\"md-nav__title md-nav__title--site\" for=\"__drawer\"> - <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-nav__button md-logo\"> - {% if config.theme.logo.icon %} - <i class=\"md-icon\">{{ config.theme.logo.icon }}</i> - {% else %} - <img alt=\"logo\" src=\"{{ config.theme.logo | url }}\" width=\"48\" height=\"48\"> - {% endif %} +<nav class=\"md-nav md-nav--primary\" aria-label=\"{{ lang.t('nav.title') }}\" data-md-level=\"0\"> + <label class=\"md-nav__title\" for=\"__drawer\"> + <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-nav__button md-logo\" aria-label=\"{{ config.site_name }}\"> + {% include \"partials/logo.html\" %} </a> {{ config.site_name }} </label> partials/search.html @@ -6,15 +6,18 @@ <label class=\"md-search__overlay\" for=\"__search\"></label> <div class=\"md-search__inner\" role=\"search\"> <form class=\"md-search__form\" name=\"search\"> - <input type=\"text\" class=\"md-search__input\" name=\"query\" aria-label=\"Search\" placeholder=\"{{ lang.t('search.placeholder') }}\" autocapitalize=\"off\" autocorrect=\"off\" autocomplete=\"off\" spellcheck=\"false\" data-md-component=\"query\" data-md-state=\"active\"> + <input type=\"text\" class=\"md-search__input\" name=\"query\" aria-label=\"{{ lang.t('search.placeholder') }}\" placeholder=\"{{ lang.t('search.placeholder') }}\" autocapitalize=\"off\" autocorrect=\"off\" autocomplete=\"off\" spellcheck=\"false\" data-md-component=\"search-query\" data-md-state=\"active\"> <label class=\"md-search__icon md-icon\" for=\"__search\"> + {% include \".icons/material/magnify.svg\" %} + {% include \".icons/material/arrow-left.svg\" %} </label> - <button type=\"reset\" class=\"md-icon md-search__icon\" data-md-component=\"reset\" tabindex=\"-1\"> - &#xE5CD; + <button type=\"reset\" class=\"md-search__icon md-icon\" aria-label=\"{{ lang.t('search.reset') }}\" data-md-component=\"search-reset\" tabindex=\"-1\"> + {% include \".icons/material/close.svg\" %} </button> </form> <div class=\"md-search__output\"> <div class=\"md-search__scrollwrap\" data-md-scrollfix> - <div class=\"md-search-result\" data-md-component=\"result\"> + <div class=\"md-search-result\" data-md-component=\"search-result\"> <div class=\"md-search-result__meta\"> {{ lang.t(\"search.result.placeholder\") }} </div> partials/social.html @@ -3,9 +3,12 @@ -#} {% if config.extra.social %} <div class=\"md-footer-social\"> - <link rel=\"stylesheet\" href=\"{{ 'assets/fonts/font-awesome.css' | url }}\"> {% for social in config.extra.social %} - <a href=\"{{ social.link }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ social.type }}\" class=\"md-footer-social__link fa fa-{{ social.type }}\"></a> + {% set _,rest = social.link.split(\"//\") %} + {% set domain = rest.split(\"/\")[0] %} + <a href=\"{{ social.link }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ domain }}\" class=\"md-footer-social__link\"> + {% include \".icons/\" ~ social.icon ~ \".svg\" %} + </a> {% endfor %} </div> {% endif %} partials/source-date.html @@ -0,0 +1,15 @@ +{#- + This file was automatically generated - do not edit +-#} +{% import \"partials/language.html\" as lang with context %} +{% set label = lang.t(\"source.revision.date\") %} +<hr> +<div class=\"md-source-date\"> + <small> + {% if page.meta.git_revision_date_localized %} + {{ label }}: {{ page.meta.git_revision_date_localized }} + {% elif page.meta.revision_date %} + {{ label }}: {{ page.meta.revision_date }} + {% endif %} + </small> +</div> partials/source-link.html @@ -0,0 +1,13 @@ +{#- + This file was automatically generated - do not edit +-#} +{% import \"partials/language.html\" as lang with context %} +{% set repo = config.repo_url %} +{% if repo | last == \"/\" %} + {% set repo = repo[:-1] %} +{% endif %} +{% set path = page.meta.path | default([\"\"]) %} +<a href=\"{{ [repo, path, page.meta.source] | join('/') }}\" title=\"{{ file }}\" class=\"md-content__button md-icon\"> + {{ lang.t(\"meta.source\") }} + {% include \".icons/\" ~ config.theme.icon.repo ~ \".svg\" %} +</a> partials/source.html @@ -2,24 +2,11 @@ This file was automatically generated - do not edit -#} {% import \"partials/language.html\" as lang with context %} -{% set platform = config.extra.repo_icon or config.repo_url %} -{% if \"github\" in platform %} - {% set repo_type = \"github\" %} -{% elif \"gitlab\" in platform %} - {% set repo_type = \"gitlab\" %} -{% elif \"bitbucket\" in platform %} - {% set repo_type = \"bitbucket\" %} -{% else %} - {% set repo_type = \"\" %} -{% endif %} -<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\" class=\"md-source\" data-md-source=\"{{ repo_type }}\"> - {% if repo_type %} - <div class=\"md-source__icon\"> - <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"> - <use xlink:href=\"#__{{ repo_type }}\" width=\"24\" height=\"24\"></use> - </svg> - </div> - {% endif %} +<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\" class=\"md-source\"> + <div class=\"md-source__icon md-icon\"> + {% set icon = config.theme.icon.repo or \"fontawesome/brands/git-alt\" %} + {% include \".icons/\" ~ icon ~ \".svg\" %} + </div> <div class=\"md-source__repository\"> {{ config.repo_name }} </div> partials/tabs-item.html @@ -1,7 +1,7 @@ {#- This file was automatically generated - do not edit -#} -{% if nav_item.is_homepage %} +{% if nav_item.is_homepage or nav_item.url == \"index.html\" %} <li class=\"md-tabs__item\"> {% if not page.ancestors | length and nav | selectattr(\"url\", page.url) %} <a href=\"{{ nav_item.url | url }}\" class=\"md-tabs__link md-tabs__link--active\"> partials/tabs.html @@ -5,7 +5,7 @@ {% if page.ancestors | length > 0 %} {% set class = \"md-tabs md-tabs--active\" %} {% endif %} -<nav class=\"{{ class }}\" data-md-component=\"tabs\"> +<nav class=\"{{ class }}\" aria-label=\"{{ lang.t('tabs.title') }}\" data-md-component=\"tabs\"> <div class=\"md-tabs__inner md-grid\"> <ul class=\"md-tabs__list\"> {% for nav_item in nav %} partials/toc-item.html @@ -6,7 +6,7 @@ {{ toc_item.title }} </a> {% if toc_item.children %} - <nav class=\"md-nav\"> + <nav class=\"md-nav\" aria-label=\"{{ toc_item.title }}\"> <ul class=\"md-nav__list\"> {% for toc_item in toc_item.children %} {% include \"partials/toc-item.html\" %} partials/toc.html @@ -2,35 +2,22 @@ This file was automatically generated - do not edit -#} {% import \"partials/language.html\" as lang with context %} -<nav class=\"md-nav md-nav--secondary\"> +<nav class=\"md-nav md-nav--secondary\" aria-label=\"{{ lang.t('toc.title') }}\"> {% endif %} {% if toc | first is defined %} <label class=\"md-nav__title\" for=\"__toc\"> + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/arrow-left.svg\" %} + </span> {{ lang.t(\"toc.title\") }} </label> <ul class=\"md-nav__list\" data-md-scrollfix> {% for toc_item in toc %} {% include \"partials/toc-item.html\" %} {% endfor %} - {% if page.meta.source and page.meta.source | length > 0 %} - <li class=\"md-nav__item\"> - <a href=\"#__source\" class=\"md-nav__link md-nav__link--active\"> - {{ lang.t(\"meta.source\") }} - </a> - </li> - {% endif %} - {% set disqus = config.extra.disqus %} - {% if page and page.meta and page.meta.disqus is string %} - {% set disqus = page.meta.disqus %} - {% endif %} - {% if not page.is_homepage and disqus %} - <li class=\"md-nav__item\"> - <a href=\"#__comments\" class=\"md-nav__link md-nav__link--active\"> - {{ lang.t(\"meta.comments\") }} - </a> - </li> - {% endif %} </ul> {% endif %} </nav> Upgrading from 3.x to 4.x \u00b6 What's new? \u00b6 Material for MkDocs 4 fixes incorrect layout on Chinese systems. The fix includes a mandatory change of the base font-size from 10px to 20px which means all rem values needed to be updated. Within the theme, px to rem calculation is now encapsulated in a new function called px2rem which is part of the SASS code base. If you use Material for MkDocs with custom CSS that is based on rem values, note that those values must now be divided by 2. Now, 1.0rem doesn't map to 10px , but 20px . To learn more about the problem and implications, please refer to #911 in which the problem was discovered and fixed. Changes to mkdocs.yml \u00b6 None. Changes to *.html files \u00b6 None.","title":"Upgrading"},{"location":"upgrading/#upgrading","text":"Upgrade to the latest version with: pip install --upgrade mkdocs-material Inspect the currently installed version with: pip show mkdocs-material","title":"Upgrading"},{"location":"upgrading/#upgrading-from-6x-to-7x","text":"","title":"Upgrading from 6.x to 7.x"},{"location":"upgrading/#whats-new","text":"Added support for deploying multiple versions Added support for integrating a language selector Added support for rendering admonitions as inline blocks Rewrite of the underlying reactive architecture Removed Webpack in favor of reactive build strategy (-480 dependencies) Fixed keyboard navigation for code blocks after content tabs switch","title":"What's new?"},{"location":"upgrading/#changes-to-mkdocsyml","text":"","title":"Changes to mkdocs.yml"},{"location":"upgrading/#extraversionmethod","text":"The versioning method configuration was renamed to extra.version.provider to allow for different versioning strategies in the future: 7.x extra : version : provider : mike 6.x extra : version : method : mike","title":"extra.version.method"},{"location":"upgrading/#changes-to-html-files","text":"The templates have undergone a set of changes to make them future-proof. If you've used theme extension to override a block or template, make sure that it matches the new structure: If you've overridden a block , check base.html for potential changes If you've overridden a template , check the respective *.html file for potential changes base.html @@ -61,7 +61,7 @@ font.text | replace(' ', '+') + ':300,400,400i,700%7C' + font.code | replace(' ', '+') }}&display=fallback\"> - <style>body,input{font-family:\"{{ font.text }}\",-apple-system,BlinkMacSystemFont,Helvetica,Arial,sans-serif}code,kbd,pre{font-family:\"{{ font.code }}\",SFMono-Regular,Consolas,Menlo,monospace}</style> + <style>:root{--md-text-font-family:\"{{ font.text }}\";--md-code-font-family:\"{{ font.code }}\"}</style> {% endif %} {% endblock %} {% if config.extra.manifest %} @@ -131,7 +131,7 @@ {% if page and page.meta and page.meta.hide %} {% set hidden = \"hidden\" if \"navigation\" in page.meta.hide %} {% endif %} - <div class=\"md-sidebar md-sidebar--primary\" data-md-component=\"navigation\" {{ hidden }}> + <div class=\"md-sidebar md-sidebar--primary\" data-md-component=\"sidebar\" data-md-type=\"navigation\" {{ hidden }}> <div class=\"md-sidebar__scrollwrap\"> <div class=\"md-sidebar__inner\"> {% include \"partials/nav.html\" %} @@ -143,7 +143,7 @@ {% if page and page.meta and page.meta.hide %} {% set hidden = \"hidden\" if \"toc\" in page.meta.hide %} {% endif %} - <div class=\"md-sidebar md-sidebar--secondary\" data-md-component=\"toc\" {{ hidden }}> + <div class=\"md-sidebar md-sidebar--secondary\" data-md-component=\"sidebar\" data-md-type=\"toc\" {{ hidden }}> <div class=\"md-sidebar__scrollwrap\"> <div class=\"md-sidebar__inner\"> {% include \"partials/toc.html\" %} @@ -152,7 +152,7 @@ </div> {% endif %} {% endblock %} - <div class=\"md-content\"> + <div class=\"md-content\" data-md-component=\"content\"> <article class=\"md-content__inner md-typeset\"> {% block content %} {% if page.edit_url %} @@ -183,10 +183,18 @@ {% include \"partials/footer.html\" %} {% endblock %} </div> - {% block scripts %} - <script src=\"{{ 'assets/javascripts/vendor.18f0862e.min.js' | url }}\"></script> - <script src=\"{{ 'assets/javascripts/bundle.994580cf.min.js' | url }}\"></script> - {%- set translations = {} -%} + <div class=\"md-dialog\" data-md-component=\"dialog\"> + <div class=\"md-dialog__inner md-typeset\"></div> + </div> + {% block config %} + {%- set app = { + \"base\": base_url, + \"features\": features, + \"translations\": {}, + \"search\": \"assets/javascripts/workers/search.217ffd95.min.js\" | url, + \"version\": config.extra.version or None + } -%} + {%- set translations = app.translations -%} {%- for key in [ \"clipboard.copy\", \"clipboard.copied\", @@ -204,19 +212,12 @@ ] -%} {%- set _ = translations.update({ key: lang.t(key) }) -%} {%- endfor -%} - <script id=\"__lang\" type=\"application/json\"> - {{- translations | tojson -}} - </script> - {% block config %}{% endblock %} - <script> - app = initialize({ - base: \"{{ base_url }}\", - features: {{ features or [] | tojson }}, - search: Object.assign({ - worker: \"{{ 'assets/javascripts/worker/search.9c0e82ba.min.js' | url }}\" - }, typeof search !== \"undefined\" && search) - }) + <script id=\"__config\" type=\"application/json\"> + {{- app | tojson -}} </script> + {% endblock %} + {% block scripts %} + <script src=\"{{ 'assets/javascripts/bundle.926459b3.min.js' | url }}\"></script> {% for path in config[\"extra_javascript\"] %} <script src=\"{{ path | url }}\"></script> {% endfor %} partials/footer.html - <div class=\"md-footer-nav\"> - <nav class=\"md-footer-nav__inner md-grid\" aria-label=\"{{ lang.t('footer.title') }}\"> - {% if page.previous_page %} - <a href=\"{{ page.previous_page.url | url }}\" class=\"md-footer-nav__link md-footer-nav__link--prev\" rel=\"prev\"> - <div class=\"md-footer-nav__button md-icon\"> - {% include \".icons/material/arrow-left.svg\" %} - </div> - <div class=\"md-footer-nav__title\"> - <div class=\"md-ellipsis\"> - <span class=\"md-footer-nav__direction\"> - {{ lang.t(\"footer.previous\") }} - </span> - {{ page.previous_page.title }} - </div> - </div> - </a> - {% endif %} - {% if page.next_page %} - <a href=\"{{ page.next_page.url | url }}\" class=\"md-footer-nav__link md-footer-nav__link--next\" rel=\"next\"> - <div class=\"md-footer-nav__title\"> - <div class=\"md-ellipsis\"> - <span class=\"md-footer-nav__direction\"> - {{ lang.t(\"footer.next\") }} - </span> - {{ page.next_page.title }} - </div> + <nav class=\"md-footer__inner md-grid\" aria-label=\"{{ lang.t('footer.title') }}\"> + {% if page.previous_page %} + <a href=\"{{ page.previous_page.url | url }}\" class=\"md-footer__link md-footer__link--prev\" rel=\"prev\"> + <div class=\"md-footer__button md-icon\"> + {% include \".icons/material/arrow-left.svg\" %} + </div> + <div class=\"md-footer__title\"> + <div class=\"md-ellipsis\"> + <span class=\"md-footer__direction\"> + {{ lang.t(\"footer.previous\") }} + </span> + {{ page.previous_page.title }} </div> - <div class=\"md-footer-nav__button md-icon\"> - {% include \".icons/material/arrow-right.svg\" %} + </div> + </a> + {% endif %} + {% if page.next_page %} + <a href=\"{{ page.next_page.url | url }}\" class=\"md-footer__link md-footer__link--next\" rel=\"next\"> + <div class=\"md-footer__title\"> + <div class=\"md-ellipsis\"> + <span class=\"md-footer__direction\"> + {{ lang.t(\"footer.next\") }} + </span> + {{ page.next_page.title }} </div> - </a> - {% endif %} - </nav> - </div> + </div> + <div class=\"md-footer__button md-icon\"> + {% include \".icons/material/arrow-right.svg\" %} + </div> + </a> + {% endif %} + </nav> {% endif %} <div class=\"md-footer-meta md-typeset\"> <div class=\"md-footer-meta__inner md-grid\"> partials/header.html @@ -6,21 +6,21 @@ {% set site_url = site_url ~ \"/index.html\" %} {% endif %} <header class=\"md-header\" data-md-component=\"header\"> - <nav class=\"md-header-nav md-grid\" aria-label=\"{{ lang.t('header.title') }}\"> - <a href=\"{{ site_url }}\" title=\"{{ config.site_name | e }}\" class=\"md-header-nav__button md-logo\" aria-label=\"{{ config.site_name }}\"> + <nav class=\"md-header__inner md-grid\" aria-label=\"{{ lang.t('header.title') }}\"> + <a href=\"{{ site_url }}\" title=\"{{ config.site_name | e }}\" class=\"md-header__button md-logo\" aria-label=\"{{ config.site_name }}\"> {% include \"partials/logo.html\" %} </a> - <label class=\"md-header-nav__button md-icon\" for=\"__drawer\"> + <label class=\"md-header__button md-icon\" for=\"__drawer\"> {% include \".icons/material/menu\" ~ \".svg\" %} </label> - <div class=\"md-header-nav__title\" data-md-component=\"header-title\"> - <div class=\"md-header-nav__ellipsis\"> - <div class=\"md-header-nav__topic\"> + <div class=\"md-header__title\" data-md-component=\"header-title\"> + <div class=\"md-header__ellipsis\"> + <div class=\"md-header__topic\"> <span class=\"md-ellipsis\"> {{ config.site_name }} </span> </div> - <div class=\"md-header-nav__topic\"> + <div class=\"md-header__topic\" data-md-component=\"header-topic\"> <span class=\"md-ellipsis\"> {% if page and page.meta and page.meta.title %} {{ page.meta.title }} @@ -31,14 +31,35 @@ </div> </div> </div> + <div class=\"md-header__options\"> + {% if config.extra.alternate %} + <div class=\"md-select\"> + {% set icon = config.theme.icon.alternate or \"material/translate\" %} + <span class=\"md-header__button md-icon\"> + {% include \".icons/\" ~ icon ~ \".svg\" %} + </span> + <div class=\"md-select__inner\"> + <ul class=\"md-select__list\"> + {% for alt in config.extra.alternate %} + <li class=\"md-select__item\"> + <a href=\"{{ alt.link | url }}\" class=\"md-select__link\"> + {{ alt.name }} + </a> + </li> + {% endfor %} + </ul> + </div> + </div> + {% endif %} + </div> {% if \"search\" in config[\"plugins\"] %} - <label class=\"md-header-nav__button md-icon\" for=\"__search\"> + <label class=\"md-header__button md-icon\" for=\"__search\"> {% include \".icons/material/magnify.svg\" %} </label> {% include \"partials/search.html\" %} {% endif %} {% if config.repo_url %} - <div class=\"md-header-nav__source\"> + <div class=\"md-header__source\"> {% include \"partials/source.html\" %} </div> {% endif %} partials/source.html @@ -4,5 +4,5 @@ {% import \"partials/language.html\" as lang with context %} -<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\" class=\"md-source\"> +<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\" class=\"md-source\" data-md-component=\"source\"> <div class=\"md-source__icon md-icon\"> {% set icon = config.theme.icon.repo or \"fontawesome/brands/git-alt\" %} {% include \".icons/\" ~ icon ~ \".svg\" %} partials/toc.html @@ -12,7 +12,7 @@ <span class=\"md-nav__icon md-icon\"></span> {{ lang.t(\"toc.title\") }} </label> - <ul class=\"md-nav__list\" data-md-scrollfix> + <ul class=\"md-nav__list\" data-md-component=\"toc\" data-md-scrollfix> {% for toc_item in toc %} {% include \"partials/toc-item.html\" %} {% endfor %}","title":"Changes to *.html files"},{"location":"upgrading/#upgrading-from-5x-to-6x","text":"","title":"Upgrading from 5.x to 6.x"},{"location":"upgrading/#whats-new_1","text":"Improved search result look and feel Improved search result stability while typing Improved search result grouping (pages + headings) Improved search result relevance and scoring Added display of missing query terms to search results Reduced size of vendor bundle by 25% (84kb \u2192 67kb) Reduced size of the Docker image to improve CI build performance Removed hero partial in favor of custom implementation Removed deprecated front matter features","title":"What's new?"},{"location":"upgrading/#changes-to-mkdocsyml_1","text":"Following is a list of changes that need to be made to mkdocs.yml . Note that you only have to adjust the value if you defined it, so if your configuration does not contain the key, you can skip it.","title":"Changes to mkdocs.yml"},{"location":"upgrading/#themefeatures","text":"All feature flags that can be set from mkdocs.yml , like tabs and instant loading , are now prefixed with the name of the component or function they apply to, e.g. navigation.* : 6.x theme : features : - navigation.tabs - navigation.instant 5.x theme : features : - tabs - instant","title":"theme.features"},{"location":"upgrading/#changes-to-html-files_1","text":"The templates have undergone a set of changes to make them future-proof. If you've used theme extension to override a block or template, make sure that it matches the new structure: If you've overridden a block , check base.html for potential changes If you've overridden a template , check the respective *.html file for potential changes base.html @@ -22,13 +22,6 @@ {% import \"partials/language.html\" as lang with context %} -<!-- Theme options --> -{% set palette = config.theme.palette %} -{% if not palette is mapping %} - {% set palette = palette | first %} -{% endif %} -{% set font = config.theme.font %} - <!doctype html> <html lang=\"{{ lang.t('language') }}\" class=\"no-js\"> <head> @@ -45,21 +38,8 @@ <meta name=\"description\" content=\"{{ config.site_description }}\" /> {% endif %} - <!-- Redirect --> - {% if page and page.meta and page.meta.redirect %} - <script> - var anchor = window.location.hash.substr(1) - location.href = '{{ page.meta.redirect }}' + - (anchor ? '#' + anchor : '') - </script> - - <!-- Fallback in case JavaScript is not available --> - <meta http-equiv=\"refresh\" content=\"0; url={{ page.meta.redirect }}\" /> - <meta name=\"robots\" content=\"noindex\" /> - <link rel=\"canonical\" href=\"{{ page.meta.redirect }}\" /> - <!-- Canonical --> - {% elif page.canonical_url %} + {% if page.canonical_url %} <link rel=\"canonical\" href=\"{{ page.canonical_url }}\" /> {% endif %} @@ -96,20 +76,21 @@ <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/main.css' | url }}\" /> <!-- Extra color palette --> - {% if palette.scheme or palette.primary or palette.accent %} + {% if config.theme.palette %} + {% set palette = config.theme.palette %} <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/palette.css' | url }}\" /> - {% endif %} - <!-- Theme-color meta tag for Android --> - {% if palette.primary %} - {% import \"partials/palette.html\" as map %} - {% set primary = map.primary( - palette.primary | replace(\" \", \"-\") | lower - ) %} - <meta name=\"theme-color\" content=\"{{ primary }}\" /> + <!-- Theme-color meta tag for Android --> + {% if palette.primary %} + {% import \"partials/palette.html\" as map %} + {% set primary = map.primary( + palette.primary | replace(\" \", \"-\") | lower + ) %} + <meta name=\"theme-color\" content=\"{{ primary }}\" /> + {% endif %} {% endif %} {% endblock %} @@ -120,7 +101,8 @@ {% block fonts %} <!-- Load fonts from Google --> - {% if font != false %} + {% if config.theme.font != false %} + {% set font = config.theme.font %} <link href=\"https://fonts.gstatic.com\" rel=\"preconnect\" crossorigin /> <link rel=\"stylesheet\" @@ -169,8 +151,12 @@ <!-- Text direction and color palette, if defined --> {% set direction = config.theme.direction or lang.t('direction') %} - {% if palette.scheme or palette.primary or palette.accent %} - {% set scheme = palette.scheme | lower %} + {% if config.theme.palette %} + {% set palette = config.theme.palette %} + {% if not palette is mapping %} + {% set palette = palette | first %} + {% endif %} + {% set scheme = palette.scheme | replace(\" \", \"-\") | lower %} {% set primary = palette.primary | replace(\" \", \"-\") | lower %} {% set accent = palette.accent | replace(\" \", \"-\") | lower %} <body @@ -179,18 +165,19 @@ data-md-color-primary=\"{{ primary }}\" data-md-color-accent=\"{{ accent }}\" > + + <!-- Experimental: set color scheme based on preference --> + {% if \"preference\" == scheme %} + <script> + if (matchMedia(\"(prefers-color-scheme: dark)\").matches) + document.body.setAttribute(\"data-md-color-scheme\", \"slate\") + </script> + {% endif %} + {% else %} <body dir=\"{{ direction }}\"> {% endif %} - <!-- Experimental: set color scheme based on preference --> - {% if \"preference\" == palette.scheme %} - <script> - if (matchMedia(\"(prefers-color-scheme: dark)\").matches) - document.body.setAttribute(\"data-md-color-scheme\", \"slate\") - </script> - {% endif %} - <!-- State toggles - we need to set autocomplete=\"off\" in order to reset the drawer on back button invocation in some browsers @@ -243,15 +230,11 @@ <div class=\"md-container\" data-md-component=\"container\"> <!-- Hero teaser --> - {% block hero %} - {% if page and page.meta and page.meta.hero %} - {% include \"partials/hero.html\" with context %} - {% endif %} - {% endblock %} + {% block hero %}{% endblock %} <!-- Tabs navigation --> {% block tabs %} - {% if \"tabs\" in config.theme.features %} + {% if \"navigation.tabs\" in config.theme.features %} {% include \"partials/tabs.html\" %} {% endif %} {% endblock %} @@ -310,13 +293,6 @@ </a> {% endif %} - <!-- Link to source file --> - {% block source %} - {% if page and page.meta and page.meta.source %} - {% include \"partials/source-link.html\" %} - {% endif %} - {% endblock %} - <!-- Hack: check whether the content contains a h1 headline. If it doesn't, the page title (or respectively site name) is used @@ -370,7 +346,10 @@ \"search.result.placeholder\", \"search.result.none\", \"search.result.one\", - \"search.result.other\" + \"search.result.other\", + \"search.result.more.one\", + \"search.result.more.other\", + \"search.result.term.missing\" ] -%} {%- set _ = translations.update({ key: lang.t(key) }) -%} {%- endfor -%} partials/hero.html @@ -1,12 +0,0 @@ -{#- - This file was automatically generated - do not edit --#} -{% set class = \"md-hero\" %} -{% if \"tabs\" not in config.theme.features %} - {% set class = \"md-hero md-hero--expand\" %} -{% endif %} -<div class=\"{{ class }}\" data-md-component=\"hero\"> - <div class=\"md-hero__inner md-grid\"> - {{ page.meta.hero }} - </div> -</div> partials/source-link -{#- - This file was automatically generated - do not edit --#} -{% import \"partials/language.html\" as lang with context %} -{% set repo = config.repo_url %} -{% if repo | last == \"/\" %} - {% set repo = repo[:-1] %} -{% endif %} -{% set path = page.meta.path | default(\"\") %} -<a href=\"{{ [repo, path, page.meta.source] | join('/') }}\" title=\"{{ page.meta.source }}\" class=\"md-content__button md-icon\"> - {{ lang.t(\"meta.source\") }} - {% set icon = config.theme.icon.repo or \"fontawesome/brands/git-alt\" %} - {% include \".icons/\" ~ icon ~ \".svg\" %} -</a>","title":"Changes to *.html files"},{"location":"upgrading/#upgrading-from-4x-to-5x","text":"","title":"Upgrading from 4.x to 5.x"},{"location":"upgrading/#whats-new_2","text":"Reactive architecture \u2013 try app . dialog$ . next ( \"Hi!\" ) in the console Instant loading \u2013 make Material behave like a Single Page Application Improved CSS customization with CSS variables \u2013 set your brand's colors Improved CSS resilience, e.g. proper sidebar locking for customized headers Improved icon integration and configuration \u2013 now including over 5k icons Added possibility to use any icon for logo, repository and social links Search UI does not freeze anymore (moved to web worker) Search index built only once when using instant loading Improved extensible keyboard handling Support for prebuilt search indexes Support for displaying stars and forks for GitLab repositories Support for scroll snapping of sidebars and search results Reduced HTML and CSS footprint due to deprecation of Internet Explorer support Slight facelifting of some UI elements (Admonitions, tables, ...)","title":"What's new?"},{"location":"upgrading/#changes-to-mkdocsyml_2","text":"Following is a list of changes that need to be made to mkdocs.yml . Note that you only have to adjust the value if you defined it, so if your configuration does not contain the key, you can skip it.","title":"Changes to mkdocs.yml"},{"location":"upgrading/#themefeature","text":"Optional features like tabs and instant loading are now implemented as flags and can be enabled by listing them in mkdocs.yml under theme.features : 5.x theme : features : - tabs - instant 4.x theme : feature : tabs : true","title":"theme.feature"},{"location":"upgrading/#themelogoicon","text":"The logo icon configuration was centralized under theme.icon.logo and can now be set to any of the icons bundled with the theme : 5.x theme : icon : logo : material/cloud 4.x theme : logo : icon : cloud","title":"theme.logo.icon"},{"location":"upgrading/#extrarepo_icon","text":"The repo icon configuration was centralized under theme.icon.repo and can now be set to any of the icons bundled with the theme : 5.x theme : icon : repo : fontawesome/brands/gitlab 4.x extra : repo_icon : gitlab","title":"extra.repo_icon"},{"location":"upgrading/#extrasearch","text":"Search is now configured as part of the plugin options . Note that the search languages must now be listed as an array of strings and the tokenizer was renamed to separator : 5.x plugins : - search : separator : '[\\s\\-\\.]+' lang : - en - de - ru 4.x extra : search : language : en, de, ru tokenizer : '[\\s\\-\\.]+'","title":"extra.search.*"},{"location":"upgrading/#extrasocial","text":"Social links stayed in the same place, but the type key was renamed to icon in order to match the new way of specifying which icon to be used: 5.x extra : social : - icon : fontawesome/brands/github-alt link : https://github.com/squidfunk 4.x extra : social : - type : github link : https://github.com/squidfunk","title":"extra.social.*"},{"location":"upgrading/#changes-to-html-files_2","text":"The templates have undergone a set of changes to make them future-proof. If you've used theme extension to override a block or template, make sure that it matches the new structure: If you've overridden a block , check base.html for potential changes If you've overridden a template , check the respective *.html file for potential changes base.html @@ -2,7 +2,6 @@ This file was automatically generated - do not edit -#} {% import \"partials/language.html\" as lang with context %} -{% set feature = config.theme.feature %} {% set palette = config.theme.palette %} {% set font = config.theme.font %} <!doctype html> @@ -30,19 +29,6 @@ {% elif config.site_author %} <meta name=\"author\" content=\"{{ config.site_author }}\"> {% endif %} - {% for key in [ - \"clipboard.copy\", - \"clipboard.copied\", - \"search.language\", - \"search.pipeline.stopwords\", - \"search.pipeline.trimmer\", - \"search.result.none\", - \"search.result.one\", - \"search.result.other\", - \"search.tokenizer\" - ] %} - <meta name=\"lang:{{ key }}\" content=\"{{ lang.t(key) }}\"> - {% endfor %} <link rel=\"shortcut icon\" href=\"{{ config.theme.favicon | url }}\"> <meta name=\"generator\" content=\"mkdocs-{{ mkdocs_version }}, mkdocs-material-5.0.0\"> {% endblock %} @@ -56,9 +42,9 @@ {% endif %} {% endblock %} {% block styles %} - <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/application.********.css' | url }}\"> + <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/main.********.min.css' | url }}\"> {% if palette.primary or palette.accent %} - <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/application-palette.********.css' | url }}\"> + <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/palette.********.min.css' | url }}\"> {% endif %} {% if palette.primary %} {% import \"partials/palette.html\" as map %} @@ -69,20 +55,17 @@ {% endif %} {% endblock %} {% block libs %} - <script src=\"{{ 'assets/javascripts/modernizr.********.js' | url }}\"></script> {% endblock %} {% block fonts %} {% if font != false %} <link href=\"https://fonts.gstatic.com\" rel=\"preconnect\" crossorigin> <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family={{ font.text | replace(' ', '+') + ':300,400,400i,700%7C' + font.code | replace(' ', '+') }}&display=fallback\"> <style>body,input{font-family:\"{{ font.text }}\",\"Helvetica Neue\",Helvetica,Arial,sans-serif}code,kbd,pre{font-family:\"{{ font.code }}\",\"Courier New\",Courier,monospace}</style> {% endif %} {% endblock %} - <link rel=\"stylesheet\" href=\"{{ 'assets/fonts/material-icons.css' | url }}\"> {% if config.extra.manifest %} <link rel=\"manifest\" href=\"{{ config.extra.manifest | url }}\" crossorigin=\"use-credentials\"> {% endif %} @@ -95,47 +77,50 @@ {% endblock %} {% block extrahead %}{% endblock %} </head> + {% set direction = config.theme.direction | default(lang.t('direction')) %} {% if palette.primary or palette.accent %} {% set primary = palette.primary | replace(\" \", \"-\") | lower %} {% set accent = palette.accent | replace(\" \", \"-\") | lower %} - <body dir=\"{{ lang.t('direction') }}\" data-md-color-primary=\"{{ primary }}\" data-md-color-accent=\"{{ accent }}\"> + <body dir=\"{{ direction }}\" data-md-color-primary=\"{{ primary }}\" data-md-color-accent=\"{{ accent }}\"> {% else %} - <body dir=\"{{ lang.t('direction') }}\"> + <body dir=\"{{ direction }}\"> {% endif %} - <svg class=\"md-svg\"> - <defs> - {% set platform = config.extra.repo_icon or config.repo_url %} - {% if \"github\" in platform %} - {% include \"assets/images/icons/github.f0b8504a.svg\" %} - {% elif \"gitlab\" in platform %} - {% include \"assets/images/icons/gitlab.6dd19c00.svg\" %} - {% elif \"bitbucket\" in platform %} - {% include \"assets/images/icons/bitbucket.1b09e088.svg\" %} - {% endif %} - </defs> - </svg> <input class=\"md-toggle\" data-md-toggle=\"drawer\" type=\"checkbox\" id=\"__drawer\" autocomplete=\"off\"> <input class=\"md-toggle\" data-md-toggle=\"search\" type=\"checkbox\" id=\"__search\" autocomplete=\"off\"> - <label class=\"md-overlay\" data-md-component=\"overlay\" for=\"__drawer\"></label> + <label class=\"md-overlay\" for=\"__drawer\"></label> + <div data-md-component=\"skip\"> + {% if page.toc | first is defined %} + {% set skip = page.toc | first %} + <a href=\"{{ skip.url | url }}\" class=\"md-skip\"> + {{ lang.t('skip.link.title') }} + </a> + {% endif %} + </div> + <div data-md-component=\"announce\"> + {% if self.announce() %} + <aside class=\"md-announce\"> + <div class=\"md-announce__inner md-grid md-typeset\"> + {% block announce %}{% endblock %} + </div> + </aside> + {% endif %} + </div> {% block header %} {% include \"partials/header.html\" %} {% endblock %} - <div class=\"md-container\"> + <div class=\"md-container\" data-md-component=\"container\"> {% block hero %} {% if page and page.meta and page.meta.hero %} {% include \"partials/hero.html\" with context %} {% endif %} {% endblock %} - {% if feature.tabs %} - {% include \"partials/tabs.html\" %} - {% endif %} + {% block tabs %} + {% if \"tabs\" in config.theme.features %} + {% include \"partials/tabs.html\" %} + {% endif %} + {% endblock %} - <main class=\"md-main\" role=\"main\"> - <div class=\"md-main__inner md-grid\" data-md-component=\"container\"> + <main class=\"md-main\" data-md-component=\"main\"> + <div class=\"md-main__inner md-grid\"> {% block site_nav %} {% if nav %} <div class=\"md-sidebar md-sidebar--primary\" data-md-component=\"navigation\"> @@ -160,41 +141,25 @@ <article class=\"md-content__inner md-typeset\"> {% block content %} {% if page.edit_url %} - <a href=\"{{ page.edit_url }}\" title=\"{{ lang.t('edit.link.title') }}\" class=\"md-icon md-content__icon\">&#xE3C9;</a> + <a href=\"{{ page.edit_url }}\" title=\"{{ lang.t('edit.link.title') }}\" class=\"md-content__button md-icon\"> + {% include \".icons/material/pencil.svg\" %} + </a> {% endif %} + {% block source %} + {% if page and page.meta and page.meta.source %} + {% include \"partials/source-link.html\" %} + {% endif %} + {% endblock %} {% if not \"\\x3ch1\" in page.content %} <h1>{{ page.title | default(config.site_name, true)}}</h1> {% endif %} {{ page.content }} - {% block source %} - {% if page and page.meta and page.meta.source %} - <h2 id=\"__source\">{{ lang.t(\"meta.source\") }}</h2> - {% set repo = config.repo_url %} - {% if repo | last == \"/\" %} - {% set repo = repo[:-1] %} - {% endif %} - {% set path = page.meta.path | default([\"\"]) %} - {% set file = page.meta.source %} - <a href=\"{{ [repo, path, file] | join('/') }}\" title=\"{{ file }}\" class=\"md-source-file\"> - {{ file }} - </a> - {% endif %} - {% endblock %} + {% if page and page.meta %} + {% if page.meta.git_revision_date_localized or + page.meta.revision_date + %} + {% include \"partials/source-date.html\" %} - {% if page and page.meta and ( - page.meta.git_revision_date_localized or - page.meta.revision_date - ) %} - {% set label = lang.t(\"source.revision.date\") %} - <hr> - <div class=\"md-source-date\"> - <small> - {% if page.meta.git_revision_date_localized %} - {{ label }}: {{ page.meta.git_revision_date_localized }} - {% elif page.meta.revision_date %} - {{ label }}: {{ page.meta.revision_date }} - {% endif %} - </small> - </div> {% endif %} {% endblock %} {% block disqus %} @@ -208,29 +174,35 @@ {% include \"partials/footer.html\" %} {% endblock %} </div> {% block scripts %} - <script src=\"{{ 'assets/javascripts/application.********.js' | url }}\"></script> - {% if lang.t(\"search.language\") != \"en\" %} - {% set languages = lang.t(\"search.language\").split(\",\") %} - {% if languages | length and languages[0] != \"\" %} - {% set path = \"assets/javascripts/lunr/\" %} - <script src=\"{{ (path ~ 'lunr.stemmer.support.js') | url }}\"></script> - {% for language in languages | map(\"trim\") %} - {% if language != \"en\" %} - {% if language == \"ja\" %} - <script src=\"{{ (path ~ 'tinyseg.js') | url }}\"></script> - {% endif %} - {% if language in (\"ar\", \"da\", \"de\", \"es\", \"fi\", \"fr\", \"hu\", \"it\", \"ja\", \"nl\", \"no\", \"pt\", \"ro\", \"ru\", \"sv\", \"th\", \"tr\", \"vi\") %} - <script src=\"{{ (path ~ 'lunr.' ~ language ~ '.js') | url }}\"></script> - {% endif %} - {% endif %} - {% endfor %} - {% if languages | length > 1 %} - <script src=\"{{ (path ~ 'lunr.multi.js') | url }}\"></script> - {% endif %} - {% endif %} - {% endif %} - <script>app.initialize({version:\"{{ mkdocs_version }}\",url:{base:\"{{ base_url }}\"}})</script> + <script src=\"{{ 'assets/javascripts/vendor.********.min.js' | url }}\"></script> + <script src=\"{{ 'assets/javascripts/bundle.********.min.js' | url }}\"></script> + {%- set translations = {} -%} + {%- for key in [ + \"clipboard.copy\", + \"clipboard.copied\", + \"search.config.lang\", + \"search.config.pipeline\", + \"search.config.separator\", + \"search.result.placeholder\", + \"search.result.none\", + \"search.result.one\", + \"search.result.other\" + ] -%} + {%- set _ = translations.update({ key: lang.t(key) }) -%} + {%- endfor -%} + <script id=\"__lang\" type=\"application/json\"> + {{- translations | tojson -}} + </script> + {% block config %}{% endblock %} + <script> + app = initialize({ + base: \"{{ base_url }}\", + features: {{ config.theme.features | tojson }}, + search: Object.assign({ + worker: \"{{ 'assets/javascripts/worker/search.********.min.js' | url }}\" + }, typeof search !== \"undefined\" && search) + }) + </script> {% for path in config[\"extra_javascript\"] %} <script src=\"{{ path | url }}\"></script> {% endfor %} partials/footer.html @@ -5,34 +5,34 @@ <div class=\"md-footer-nav\"> - <nav class=\"md-footer-nav__inner md-grid\"> + <nav class=\"md-footer-nav__inner md-grid\" aria-label=\"{{ lang.t('footer.title') }}\"> {% if page.previous_page %} - <a href=\"{{ page.previous_page.url | url }}\" title=\"{{ page.previous_page.title | striptags }}\" class=\"md-flex md-footer-nav__link md-footer-nav__link--prev\" rel=\"prev\"> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <i class=\"md-icon md-icon--arrow-back md-footer-nav__button\"></i> + <a href=\"{{ page.previous_page.url | url }}\" title=\"{{ page.previous_page.title | striptags }}\" class=\"md-footer-nav__link md-footer-nav__link--prev\" rel=\"prev\"> + <div class=\"md-footer-nav__button md-icon\"> + {% include \".icons/material/arrow-left.svg\" %} </div> - <div class=\"md-flex__cell md-flex__cell--stretch md-footer-nav__title\"> - <span class=\"md-flex__ellipsis\"> + <div class=\"md-footer-nav__title\"> + <div class=\"md-ellipsis\"> <span class=\"md-footer-nav__direction\"> {{ lang.t(\"footer.previous\") }} </span> {{ page.previous_page.title }} - </span> + </div> </div> </a> {% endif %} {% if page.next_page %} - <a href=\"{{ page.next_page.url | url }}\" title=\"{{ page.next_page.title | striptags }}\" class=\"md-flex md-footer-nav__link md-footer-nav__link--next\" rel=\"next\"> - <div class=\"md-flex__cell md-flex__cell--stretch md-footer-nav__title\"> - <span class=\"md-flex__ellipsis\"> + <a href=\"{{ page.next_page.url | url }}\" title=\"{{ page.next_page.title | striptags }}\" class=\"md-footer-nav__link md-footer-nav__link--next\" rel=\"next\"> + <div class=\"md-footer-nav__title\"> + <div class=\"md-ellipsis\"> <span class=\"md-footer-nav__direction\"> {{ lang.t(\"footer.next\") }} </span> {{ page.next_page.title }} - </span> + </div> </div> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <i class=\"md-icon md-icon--arrow-forward md-footer-nav__button\"></i> + <div class=\"md-footer-nav__button md-icon\"> + {% include \".icons/material/arrow-right.svg\" %} </div> </a> {% endif %} partials/header.html @@ -2,51 +2,43 @@ This file was automatically generated - do not edit -#} <header class=\"md-header\" data-md-component=\"header\"> - <nav class=\"md-header-nav md-grid\"> - <div class=\"md-flex\"> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" aria-label=\"{{ config.site_name }}\" class=\"md-header-nav__button md-logo\"> - {% if config.theme.logo.icon %} - <i class=\"md-icon\">{{ config.theme.logo.icon }}</i> - {% else %} - <img alt=\"logo\" src=\"{{ config.theme.logo | url }}\" width=\"24\" height=\"24\"> - {% endif %} - </a> - </div> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <label class=\"md-icon md-icon--menu md-header-nav__button\" for=\"__drawer\"></label> - </div> - <div class=\"md-flex__cell md-flex__cell--stretch\"> - <div class=\"md-flex__ellipsis md-header-nav__title\" data-md-component=\"title\"> - {% if config.site_name == page.title %} - {{ config.site_name }} - {% else %} - <span class=\"md-header-nav__topic\"> - {{ config.site_name }} - </span> - <span class=\"md-header-nav__topic\"> - {% if page and page.meta and page.meta.title %} - {{ page.meta.title }} - {% else %} - {{ page.title }} - {% endif %} - </span> - {% endif %} + <nav class=\"md-header-nav md-grid\" aria-label=\"{{ lang.t('header.title') }}\"> + <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-header-nav__button md-logo\" aria-label=\"{{ config.site_name }}\"> + {% include \"partials/logo.html\" %} + </a> + <label class=\"md-header-nav__button md-icon\" for=\"__drawer\"> + {% include \".icons/material/menu\" ~ \".svg\" %} + </label> + <div class=\"md-header-nav__title\" data-md-component=\"header-title\"> + {% if config.site_name == page.title %} + <div class=\"md-header-nav__ellipsis md-ellipsis\"> + {{ config.site_name }} </div> - </div> - <div class=\"md-flex__cell md-flex__cell--shrink\"> - {% if \"search\" in config[\"plugins\"] %} - <label class=\"md-icon md-icon--search md-header-nav__button\" for=\"__search\"></label> - {% include \"partials/search.html\" %} - {% endif %} - </div> - {% if config.repo_url %} - <div class=\"md-flex__cell md-flex__cell--shrink\"> - <div class=\"md-header-nav__source\"> - {% include \"partials/source.html\" %} - </div> + {% else %} + <div class=\"md-header-nav__ellipsis\"> + <span class=\"md-header-nav__topic md-ellipsis\"> + {{ config.site_name }} + </span> + <span class=\"md-header-nav__topic md-ellipsis\"> + {% if page and page.meta and page.meta.title %} + {{ page.meta.title }} + {% else %} + {{ page.title }} + {% endif %} + </span> </div> {% endif %} </div> + {% if \"search\" in config[\"plugins\"] %} + <label class=\"md-header-nav__button md-icon\" for=\"__search\"> + {% include \".icons/material/magnify.svg\" %} + </label> + {% include \"partials/search.html\" %} + {% endif %} + {% if config.repo_url %} + <div class=\"md-header-nav__source\"> + {% include \"partials/source.html\" %} + </div> + {% endif %} </nav> </header> partials/hero.html @@ -1,9 +1,8 @@ {#- This file was automatically generated - do not edit -#} -{% set feature = config.theme.feature %} {% set class = \"md-hero\" %} -{% if not feature.tabs %} +{% if \"tabs\" not in config.theme.features %} {% set class = \"md-hero md-hero--expand\" %} {% endif %} <div class=\"{{ class }}\" data-md-component=\"hero\"> partials/language.html @@ -3,12 +3,4 @@ -#} {% import \"partials/language/\" + config.theme.language + \".html\" as lang %} {% import \"partials/language/en.html\" as fallback %} -{% macro t(key) %}{{ { - \"direction\": config.theme.direction, - \"search.language\": ( - config.extra.search | default({}) - ).language, - \"search.tokenizer\": ( - config.extra.search | default({}) - ).tokenizer | default(\"\", true), -}[key] or lang.t(key) or fallback.t(key) }}{% endmacro %} +{% macro t(key) %}{{ lang.t(key) | default(fallback.t(key)) }}{% endmacro %} partials/logo.html @@ -0,0 +1,9 @@ +{#- + This file was automatically generated - do not edit +-#} +{% if config.theme.logo %} + <img src=\"{{ config.theme.logo | url }}\" alt=\"logo\"> +{% else %} + {% set icon = config.theme.icon.logo or \"material/library\" %} + {% include \".icons/\" ~ icon ~ \".svg\" %} +{% endif %} partials/nav-item.html @@ -14,9 +14,15 @@ {% endif %} <label class=\"md-nav__link\" for=\"{{ path }}\"> {{ nav_item.title }} + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/chevron-right.svg\" %} + </span> </label> - <nav class=\"md-nav\" data-md-component=\"collapsible\" data-md-level=\"{{ level }}\"> + <nav class=\"md-nav\" aria-label=\"{{ nav_item.title }}\" data-md-level=\"{{ level }}\"> <label class=\"md-nav__title\" for=\"{{ path }}\"> + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/arrow-left.svg\" %} + </span> {{ nav_item.title }} </label> <ul class=\"md-nav__list\" data-md-scrollfix> @@ -39,6 +45,9 @@ {% if toc | first is defined %} <label class=\"md-nav__link md-nav__link--active\" for=\"__toc\"> {{ nav_item.title }} + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/table-of-contents.svg\" %} + </span> </label> {% endif %} <a href=\"{{ nav_item.url | url }}\" title=\"{{ nav_item.title | striptags }}\" class=\"md-nav__link md-nav__link--active\"> partials/nav.html @@ -1,14 +1,10 @@ {#- This file was automatically generated - do not edit -#} -<nav class=\"md-nav md-nav--primary\" data-md-level=\"0\"> - <label class=\"md-nav__title md-nav__title--site\" for=\"__drawer\"> - <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-nav__button md-logo\"> - {% if config.theme.logo.icon %} - <i class=\"md-icon\">{{ config.theme.logo.icon }}</i> - {% else %} - <img alt=\"logo\" src=\"{{ config.theme.logo | url }}\" width=\"48\" height=\"48\"> - {% endif %} +<nav class=\"md-nav md-nav--primary\" aria-label=\"{{ lang.t('nav.title') }}\" data-md-level=\"0\"> + <label class=\"md-nav__title\" for=\"__drawer\"> + <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-nav__button md-logo\" aria-label=\"{{ config.site_name }}\"> + {% include \"partials/logo.html\" %} </a> {{ config.site_name }} </label> partials/search.html @@ -6,15 +6,18 @@ <label class=\"md-search__overlay\" for=\"__search\"></label> <div class=\"md-search__inner\" role=\"search\"> <form class=\"md-search__form\" name=\"search\"> - <input type=\"text\" class=\"md-search__input\" name=\"query\" aria-label=\"Search\" placeholder=\"{{ lang.t('search.placeholder') }}\" autocapitalize=\"off\" autocorrect=\"off\" autocomplete=\"off\" spellcheck=\"false\" data-md-component=\"query\" data-md-state=\"active\"> + <input type=\"text\" class=\"md-search__input\" name=\"query\" aria-label=\"{{ lang.t('search.placeholder') }}\" placeholder=\"{{ lang.t('search.placeholder') }}\" autocapitalize=\"off\" autocorrect=\"off\" autocomplete=\"off\" spellcheck=\"false\" data-md-component=\"search-query\" data-md-state=\"active\"> <label class=\"md-search__icon md-icon\" for=\"__search\"> + {% include \".icons/material/magnify.svg\" %} + {% include \".icons/material/arrow-left.svg\" %} </label> - <button type=\"reset\" class=\"md-icon md-search__icon\" data-md-component=\"reset\" tabindex=\"-1\"> - &#xE5CD; + <button type=\"reset\" class=\"md-search__icon md-icon\" aria-label=\"{{ lang.t('search.reset') }}\" data-md-component=\"search-reset\" tabindex=\"-1\"> + {% include \".icons/material/close.svg\" %} </button> </form> <div class=\"md-search__output\"> <div class=\"md-search__scrollwrap\" data-md-scrollfix> - <div class=\"md-search-result\" data-md-component=\"result\"> + <div class=\"md-search-result\" data-md-component=\"search-result\"> <div class=\"md-search-result__meta\"> {{ lang.t(\"search.result.placeholder\") }} </div> partials/social.html @@ -3,9 +3,12 @@ -#} {% if config.extra.social %} <div class=\"md-footer-social\"> - <link rel=\"stylesheet\" href=\"{{ 'assets/fonts/font-awesome.css' | url }}\"> {% for social in config.extra.social %} - <a href=\"{{ social.link }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ social.type }}\" class=\"md-footer-social__link fa fa-{{ social.type }}\"></a> + {% set _,rest = social.link.split(\"//\") %} + {% set domain = rest.split(\"/\")[0] %} + <a href=\"{{ social.link }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ domain }}\" class=\"md-footer-social__link\"> + {% include \".icons/\" ~ social.icon ~ \".svg\" %} + </a> {% endfor %} </div> {% endif %} partials/source-date.html @@ -0,0 +1,15 @@ +{#- + This file was automatically generated - do not edit +-#} +{% import \"partials/language.html\" as lang with context %} +{% set label = lang.t(\"source.revision.date\") %} +<hr> +<div class=\"md-source-date\"> + <small> + {% if page.meta.git_revision_date_localized %} + {{ label }}: {{ page.meta.git_revision_date_localized }} + {% elif page.meta.revision_date %} + {{ label }}: {{ page.meta.revision_date }} + {% endif %} + </small> +</div> partials/source-link.html @@ -0,0 +1,13 @@ +{#- + This file was automatically generated - do not edit +-#} +{% import \"partials/language.html\" as lang with context %} +{% set repo = config.repo_url %} +{% if repo | last == \"/\" %} + {% set repo = repo[:-1] %} +{% endif %} +{% set path = page.meta.path | default([\"\"]) %} +<a href=\"{{ [repo, path, page.meta.source] | join('/') }}\" title=\"{{ file }}\" class=\"md-content__button md-icon\"> + {{ lang.t(\"meta.source\") }} + {% include \".icons/\" ~ config.theme.icon.repo ~ \".svg\" %} +</a> partials/source.html @@ -2,24 +2,11 @@ This file was automatically generated - do not edit -#} {% import \"partials/language.html\" as lang with context %} -{% set platform = config.extra.repo_icon or config.repo_url %} -{% if \"github\" in platform %} - {% set repo_type = \"github\" %} -{% elif \"gitlab\" in platform %} - {% set repo_type = \"gitlab\" %} -{% elif \"bitbucket\" in platform %} - {% set repo_type = \"bitbucket\" %} -{% else %} - {% set repo_type = \"\" %} -{% endif %} -<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\" class=\"md-source\" data-md-source=\"{{ repo_type }}\"> - {% if repo_type %} - <div class=\"md-source__icon\"> - <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"> - <use xlink:href=\"#__{{ repo_type }}\" width=\"24\" height=\"24\"></use> - </svg> - </div> - {% endif %} +<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\" class=\"md-source\"> + <div class=\"md-source__icon md-icon\"> + {% set icon = config.theme.icon.repo or \"fontawesome/brands/git-alt\" %} + {% include \".icons/\" ~ icon ~ \".svg\" %} + </div> <div class=\"md-source__repository\"> {{ config.repo_name }} </div> partials/tabs-item.html @@ -1,7 +1,7 @@ {#- This file was automatically generated - do not edit -#} -{% if nav_item.is_homepage %} +{% if nav_item.is_homepage or nav_item.url == \"index.html\" %} <li class=\"md-tabs__item\"> {% if not page.ancestors | length and nav | selectattr(\"url\", page.url) %} <a href=\"{{ nav_item.url | url }}\" class=\"md-tabs__link md-tabs__link--active\"> partials/tabs.html @@ -5,7 +5,7 @@ {% if page.ancestors | length > 0 %} {% set class = \"md-tabs md-tabs--active\" %} {% endif %} -<nav class=\"{{ class }}\" data-md-component=\"tabs\"> +<nav class=\"{{ class }}\" aria-label=\"{{ lang.t('tabs.title') }}\" data-md-component=\"tabs\"> <div class=\"md-tabs__inner md-grid\"> <ul class=\"md-tabs__list\"> {% for nav_item in nav %} partials/toc-item.html @@ -6,7 +6,7 @@ {{ toc_item.title }} </a> {% if toc_item.children %} - <nav class=\"md-nav\"> + <nav class=\"md-nav\" aria-label=\"{{ toc_item.title }}\"> <ul class=\"md-nav__list\"> {% for toc_item in toc_item.children %} {% include \"partials/toc-item.html\" %} partials/toc.html @@ -2,35 +2,22 @@ This file was automatically generated - do not edit -#} {% import \"partials/language.html\" as lang with context %} -<nav class=\"md-nav md-nav--secondary\"> +<nav class=\"md-nav md-nav--secondary\" aria-label=\"{{ lang.t('toc.title') }}\"> {% endif %} {% if toc | first is defined %} <label class=\"md-nav__title\" for=\"__toc\"> + <span class=\"md-nav__icon md-icon\"> + {% include \".icons/material/arrow-left.svg\" %} + </span> {{ lang.t(\"toc.title\") }} </label> <ul class=\"md-nav__list\" data-md-scrollfix> {% for toc_item in toc %} {% include \"partials/toc-item.html\" %} {% endfor %} - {% if page.meta.source and page.meta.source | length > 0 %} - <li class=\"md-nav__item\"> - <a href=\"#__source\" class=\"md-nav__link md-nav__link--active\"> - {{ lang.t(\"meta.source\") }} - </a> - </li> - {% endif %} - {% set disqus = config.extra.disqus %} - {% if page and page.meta and page.meta.disqus is string %} - {% set disqus = page.meta.disqus %} - {% endif %} - {% if not page.is_homepage and disqus %} - <li class=\"md-nav__item\"> - <a href=\"#__comments\" class=\"md-nav__link md-nav__link--active\"> - {{ lang.t(\"meta.comments\") }} - </a> - </li> - {% endif %} </ul> {% endif %} </nav>","title":"Changes to *.html files"},{"location":"upgrading/#upgrading-from-3x-to-4x","text":"","title":"Upgrading from 3.x to 4.x"},{"location":"upgrading/#whats-new_3","text":"Material for MkDocs 4 fixes incorrect layout on Chinese systems. The fix includes a mandatory change of the base font-size from 10px to 20px which means all rem values needed to be updated. Within the theme, px to rem calculation is now encapsulated in a new function called px2rem which is part of the SASS code base. If you use Material for MkDocs with custom CSS that is based on rem values, note that those values must now be divided by 2. Now, 1.0rem doesn't map to 10px , but 20px . To learn more about the problem and implications, please refer to #911 in which the problem was discovered and fixed.","title":"What's new?"},{"location":"upgrading/#changes-to-mkdocsyml_3","text":"None.","title":"Changes to mkdocs.yml"},{"location":"upgrading/#changes-to-html-files_3","text":"None.","title":"Changes to *.html files"},{"location":"insiders/","text":"Profil \u00b6 Nama saya Rizki Abdil Fadila, umur saya 20 tahun, saya seorang mahasiswa di Universitas Trunojoyo Madura. Tidak banyak yang bisa saya ceritakan tentang saya, namun saya akan menceritakannya sebisa saya. Hobi saya membaca dan bermain musik, saya lahir di kabupaten probolinggo.","title":"Profil"},{"location":"insiders/#profil","text":"Nama saya Rizki Abdil Fadila, umur saya 20 tahun, saya seorang mahasiswa di Universitas Trunojoyo Madura. Tidak banyak yang bisa saya ceritakan tentang saya, namun saya akan menceritakannya sebisa saya. Hobi saya membaca dan bermain musik, saya lahir di kabupaten probolinggo.","title":"Profil"},{"location":"insiders/changelog/","text":"Changelog \u00b6 Material for MkDocs Insiders \u00b6 2.9.2 _ May 30, 2021 \u00b6 Moved tags to partial for easier customization Added support for hiding tags on any page 2.9.1 _ May 24, 2021 \u00b6 Added missing guard for linking of content tabs 2.9.0 _ May 23, 2021 \u00b6 Added support for linking of content tabs 2.8.0 _ May 12, 2021 \u00b6 Added support for boosting pages in search 2.7.2 _ May 8, 2021 \u00b6 Fixed #2638 : Warnings shown when using tags plugin without directory URLs 2.7.1 _ May 3, 2021 \u00b6 Fixed git-revision-date-localized plugin integration (2.7.0 regression) 2.7.0 _ May 1, 2021 \u00b6 Added support for tags (with search integration) 2.6.0 _ April 11, 2021 \u00b6 Stay on page when switching versions 2.5.0 _ March 28, 2021 \u00b6 Added support for version warning 2.4.0 _ March 20, 2021 \u00b6 Added support for custom admonition icons Fixed #2444 : Code block annotations with extra comments have wrong index 2.3.1 _ March 14, 2021 \u00b6 Fixed anchor offset for permalinks when using sticky navigation tabs 2.3.0 _ March 13, 2021 \u00b6 Added support for back-to-top button 2.2.1 _ March 4, 2021 \u00b6 Fixed #2382 : Repository stats failing when no release tag is present 2.2.0 _ February 28, 2021 \u00b6 Added support for code block annotations 2.1.0 _ February 26, 2021 \u00b6 Added support for anchor tracking 2.0.0 _ February 24, 2021 \u00b6 Migrated Insiders to the new architecture Swapped color palette toggle configuration 1.17.0 _ January 31, 2021 \u00b6 Added support for section index pages 1.16.1 _ January 26, 2021 \u00b6 Fixed #2249 : Instant loading + sticky tabs result in invalid links Fixed #2248 : Search highlighting URL parameter always added Fixed #2235 : Version selector doesn't select current version for aliases 1.16.0 _ January 7, 2021 \u00b6 Added latest release to repository info (GitHub) Slight facelift of repository info (lighter fonts, spacing and icons) 1.15.0 _ January 2, 2021 \u00b6 Added support for native Mermaid.js integration 1.14.0 _ December 30, 2020 \u00b6 Added support for sharing searches 1.13.2 _ December 22, 2020 \u00b6 Fixed version selector + sticky tabs navigation rendering issues Fixed version selector wrapping 1.13.1 _ December 20, 2020 \u00b6 Removed horizontal scrollbars on language and version selector Fixed type conversion in JavaScript config 1.13.0 _ December 13, 2020 \u00b6 Refactored navigation tabs to simplify grouping behavior Added support for sticky navigation tabs Added support for arbitrary links in navigation tabs Fixed #2098 : Subsequent active subsection not highlighted correctly 1.12.1 _ December 8, 2020 \u00b6 Fixed empty language selector being shown 1.12.0 _ December 6, 2020 \u00b6 Added support for adding a language selector 1.11.2 _ November 29, 2020 \u00b6 Fixed #2068 : Search highlight interprets code blocks as JavaScript 1.11.1 _ November 29, 2020 \u00b6 Refactored styling to be more stable and easier to adjust Fixed some styling regressions from latest features 1.11.0 _ November 22, 2020 \u00b6 Added support for rendering admonitions as inline blocks 1.10.0 _ November 15, 2020 \u00b6 Added support for integrating table of contents into navigation 1.9.0 _ November 7, 2020 \u00b6 Added support for hiding navigation and table of contents on any page Removed autohiding table of contents when empty 1.8.0 _ November 1, 2020 \u00b6 Added support for navigation sections Fixed appearance of inactive search suggestions 1.7.0 _ October 25, 2020 \u00b6 Added support for deploying multiple versions Fixed alignment of sidebar when content area is too small 1.6.0 _ October 11, 2020 \u00b6 Added support for search suggestions to save keystrokes Added support for removing Made with Material for MkDocs from footer Fixed #1915 : search should go to first result by pressing Enter 1.5.1 _ September 21, 2020 \u00b6 Fixed content area stretching to whole width for long code blocks 1.5.0 _ September 19, 2020 \u00b6 Added support for autohiding table of contents when empty 1.4.1 _ September 6, 2020 \u00b6 Improved typeahead and search result relevance and scoring 1.4.0 _ August 30, 2020 \u00b6 Added support for autohiding header on scroll 1.3.0 _ August 26, 2020 \u00b6 Added support for user-selectable color palettes 1.2.0 _ August 11, 2020 \u00b6 Added feature to expand navigation by default 1.1.0 _ August 3, 2020 \u00b6 Added highlighting of search results 1.0.0 _ July 14, 2020 \u00b6 Added grouping of search results Added missing query terms to search result Improved search result relevance and scoring","title":"Changelog"},{"location":"insiders/changelog/#changelog","text":"","title":"Changelog"},{"location":"insiders/changelog/#material-for-mkdocs-insiders","text":"","title":"Material for MkDocs Insiders"},{"location":"insiders/changelog/#292-_-may-30-2021","text":"Moved tags to partial for easier customization Added support for hiding tags on any page","title":"2.9.2 _ May 30, 2021"},{"location":"insiders/changelog/#291-_-may-24-2021","text":"Added missing guard for linking of content tabs","title":"2.9.1 _ May 24, 2021"},{"location":"insiders/changelog/#290-_-may-23-2021","text":"Added support for linking of content tabs","title":"2.9.0 _ May 23, 2021"},{"location":"insiders/changelog/#280-_-may-12-2021","text":"Added support for boosting pages in search","title":"2.8.0 _ May 12, 2021"},{"location":"insiders/changelog/#272-_-may-8-2021","text":"Fixed #2638 : Warnings shown when using tags plugin without directory URLs","title":"2.7.2 _ May 8, 2021"},{"location":"insiders/changelog/#271-_-may-3-2021","text":"Fixed git-revision-date-localized plugin integration (2.7.0 regression)","title":"2.7.1 _ May 3, 2021"},{"location":"insiders/changelog/#270-_-may-1-2021","text":"Added support for tags (with search integration)","title":"2.7.0 _ May 1, 2021"},{"location":"insiders/changelog/#260-_-april-11-2021","text":"Stay on page when switching versions","title":"2.6.0 _ April 11, 2021"},{"location":"insiders/changelog/#250-_-march-28-2021","text":"Added support for version warning","title":"2.5.0 _ March 28, 2021"},{"location":"insiders/changelog/#240-_-march-20-2021","text":"Added support for custom admonition icons Fixed #2444 : Code block annotations with extra comments have wrong index","title":"2.4.0 _ March 20, 2021"},{"location":"insiders/changelog/#231-_-march-14-2021","text":"Fixed anchor offset for permalinks when using sticky navigation tabs","title":"2.3.1 _ March 14, 2021"},{"location":"insiders/changelog/#230-_-march-13-2021","text":"Added support for back-to-top button","title":"2.3.0 _ March 13, 2021"},{"location":"insiders/changelog/#221-_-march-4-2021","text":"Fixed #2382 : Repository stats failing when no release tag is present","title":"2.2.1 _ March 4, 2021"},{"location":"insiders/changelog/#220-_-february-28-2021","text":"Added support for code block annotations","title":"2.2.0 _ February 28, 2021"},{"location":"insiders/changelog/#210-_-february-26-2021","text":"Added support for anchor tracking","title":"2.1.0 _ February 26, 2021"},{"location":"insiders/changelog/#200-_-february-24-2021","text":"Migrated Insiders to the new architecture Swapped color palette toggle configuration","title":"2.0.0 _ February 24, 2021"},{"location":"insiders/changelog/#1170-_-january-31-2021","text":"Added support for section index pages","title":"1.17.0 _ January 31, 2021"},{"location":"insiders/changelog/#1161-_-january-26-2021","text":"Fixed #2249 : Instant loading + sticky tabs result in invalid links Fixed #2248 : Search highlighting URL parameter always added Fixed #2235 : Version selector doesn't select current version for aliases","title":"1.16.1 _ January 26, 2021"},{"location":"insiders/changelog/#1160-_-january-7-2021","text":"Added latest release to repository info (GitHub) Slight facelift of repository info (lighter fonts, spacing and icons)","title":"1.16.0 _ January 7, 2021"},{"location":"insiders/changelog/#1150-_-january-2-2021","text":"Added support for native Mermaid.js integration","title":"1.15.0 _ January 2, 2021"},{"location":"insiders/changelog/#1140-_-december-30-2020","text":"Added support for sharing searches","title":"1.14.0 _ December 30, 2020"},{"location":"insiders/changelog/#1132-_-december-22-2020","text":"Fixed version selector + sticky tabs navigation rendering issues Fixed version selector wrapping","title":"1.13.2 _ December 22, 2020"},{"location":"insiders/changelog/#1131-_-december-20-2020","text":"Removed horizontal scrollbars on language and version selector Fixed type conversion in JavaScript config","title":"1.13.1 _ December 20, 2020"},{"location":"insiders/changelog/#1130-_-december-13-2020","text":"Refactored navigation tabs to simplify grouping behavior Added support for sticky navigation tabs Added support for arbitrary links in navigation tabs Fixed #2098 : Subsequent active subsection not highlighted correctly","title":"1.13.0 _ December 13, 2020"},{"location":"insiders/changelog/#1121-_-december-8-2020","text":"Fixed empty language selector being shown","title":"1.12.1 _ December 8, 2020"},{"location":"insiders/changelog/#1120-_-december-6-2020","text":"Added support for adding a language selector","title":"1.12.0 _ December 6, 2020"},{"location":"insiders/changelog/#1112-_-november-29-2020","text":"Fixed #2068 : Search highlight interprets code blocks as JavaScript","title":"1.11.2 _ November 29, 2020"},{"location":"insiders/changelog/#1111-_-november-29-2020","text":"Refactored styling to be more stable and easier to adjust Fixed some styling regressions from latest features","title":"1.11.1 _ November 29, 2020"},{"location":"insiders/changelog/#1110-_-november-22-2020","text":"Added support for rendering admonitions as inline blocks","title":"1.11.0 _ November 22, 2020"},{"location":"insiders/changelog/#1100-_-november-15-2020","text":"Added support for integrating table of contents into navigation","title":"1.10.0 _ November 15, 2020"},{"location":"insiders/changelog/#190-_-november-7-2020","text":"Added support for hiding navigation and table of contents on any page Removed autohiding table of contents when empty","title":"1.9.0 _ November 7, 2020"},{"location":"insiders/changelog/#180-_-november-1-2020","text":"Added support for navigation sections Fixed appearance of inactive search suggestions","title":"1.8.0 _ November 1, 2020"},{"location":"insiders/changelog/#170-_-october-25-2020","text":"Added support for deploying multiple versions Fixed alignment of sidebar when content area is too small","title":"1.7.0 _ October 25, 2020"},{"location":"insiders/changelog/#160-_-october-11-2020","text":"Added support for search suggestions to save keystrokes Added support for removing Made with Material for MkDocs from footer Fixed #1915 : search should go to first result by pressing Enter","title":"1.6.0 _ October 11, 2020"},{"location":"insiders/changelog/#151-_-september-21-2020","text":"Fixed content area stretching to whole width for long code blocks","title":"1.5.1 _ September 21, 2020"},{"location":"insiders/changelog/#150-_-september-19-2020","text":"Added support for autohiding table of contents when empty","title":"1.5.0 _ September 19, 2020"},{"location":"insiders/changelog/#141-_-september-6-2020","text":"Improved typeahead and search result relevance and scoring","title":"1.4.1 _ September 6, 2020"},{"location":"insiders/changelog/#140-_-august-30-2020","text":"Added support for autohiding header on scroll","title":"1.4.0 _ August 30, 2020"},{"location":"insiders/changelog/#130-_-august-26-2020","text":"Added support for user-selectable color palettes","title":"1.3.0 _ August 26, 2020"},{"location":"insiders/changelog/#120-_-august-11-2020","text":"Added feature to expand navigation by default","title":"1.2.0 _ August 11, 2020"},{"location":"insiders/changelog/#110-_-august-3-2020","text":"Added highlighting of search results","title":"1.1.0 _ August 3, 2020"},{"location":"insiders/changelog/#100-_-july-14-2020","text":"Added grouping of search results Added missing query terms to search result Improved search result relevance and scoring","title":"1.0.0 _ July 14, 2020"},{"location":"insiders/getting-started/","text":"Switching to Insiders \u00b6 Material for MkDocs Insiders is a fully compatible drop-in replacement for Material for MkDocs, and can be installed similar to the public version using pip , docker or git . When you sponsor @squidfunk , your account is added to the list of collaborators of the private Insiders repository. Requirements \u00b6 In order to access the Insiders repository programmatically (from the command line or GitHub Actions workflows), you need to create a personal access token : Go to https://github.com/settings/tokens Click on Generate a new token Enter a name and select the repo scope Generate the token and store it in a safe place Installation \u00b6 with pip \u00b6 Material for MkDocs Insiders can be installed with pip : pip install git+https:// ${ GH_TOKEN } @github.com/squidfunk/mkdocs-material-insiders.git The GH_TOKEN environment variable must be set to the value of the personal access token you generated in the previous step. Note that the personal access token must be kept secret at all times, as it allows the owner to access your private repositories. with docker \u00b6 In case you want to use Material for MkDocs Insiders from within Docker, some additional steps are necessary. While we cannot provide a hosted Docker image for Insiders 1 , GitHub Container Registry allows for simple and comfortable self-hosting: Fork the Insiders repository Enable GitHub Actions on your fork 2 Create a new personal access token 3 Go to https://github.com/settings/tokens Click on Generate a new token Enter a name and select the write:packages scope Generate the token and store it in a safe place Add a GitHub Actions secret on your fork Set the name to GHCR_TOKEN Set the value to the personal access token created in the previous step Create a new release to build and publish the Docker image Install Pull App on your fork to stay in-sync with upstream The publish workflow 4 is automatically run when a new tag (release) is created. When a new Insiders version is released on the upstream repository, the Pull App will create a pull request with the changes and pull in the new tag, which is picked up by the publish workflow that builds and publishes the Docker image automatically to your private registry. Now, you should be able to pull the Docker image from your private registry: docker login -u ${GH_USERNAME} -p ${GHCR_TOKEN} ghcr.io docker pull ghcr.io/${GH_USERNAME}/mkdocs-material-insiders with git \u00b6 Of course, you can use Material for MkDocs Insiders directly from git : git clone git@github.com:squidfunk/mkdocs-material-insiders.git mkdocs-material The theme will reside in the folder mkdocs-material/material . When cloning from git , the theme must be installed, so MkDocs can find the built-in plugins: pip install -e mkdocs-material Earlier, Insiders provided a dedicated Docker image which was available to all sponsors. On March 21, 2021, the image was deprecated for the reasons outlined and discussed in #2442 . It was removed on June 1, 2021. \u21a9 When forking a repository, GitHub will disables all workflows. While this is a reasonable default setting, you need to enable GitHub Actions to be able to automatically build and publish a Docker image on GitHub Container Registry . \u21a9 While you could just add the write:packages scope to the personal access token created to access the Insiders repository, it's safer to create a dedicated token which you'll only use for publishing the Docker image. \u21a9 The Insiders repository contains three GitHub Actions workflows: build.yml \u2013 Build and lint the project (disabled on forks) documentation.yml \u2013 Build and deploy the documentation (disabled on forks) publish.yml \u2013 Build and publish the Docker image \u21a9","title":"Switching to Insiders"},{"location":"insiders/getting-started/#switching-to-insiders","text":"Material for MkDocs Insiders is a fully compatible drop-in replacement for Material for MkDocs, and can be installed similar to the public version using pip , docker or git . When you sponsor @squidfunk , your account is added to the list of collaborators of the private Insiders repository.","title":"Switching to Insiders"},{"location":"insiders/getting-started/#requirements","text":"In order to access the Insiders repository programmatically (from the command line or GitHub Actions workflows), you need to create a personal access token : Go to https://github.com/settings/tokens Click on Generate a new token Enter a name and select the repo scope Generate the token and store it in a safe place","title":"Requirements"},{"location":"insiders/getting-started/#installation","text":"","title":"Installation"},{"location":"insiders/getting-started/#with-pip","text":"Material for MkDocs Insiders can be installed with pip : pip install git+https:// ${ GH_TOKEN } @github.com/squidfunk/mkdocs-material-insiders.git The GH_TOKEN environment variable must be set to the value of the personal access token you generated in the previous step. Note that the personal access token must be kept secret at all times, as it allows the owner to access your private repositories.","title":"with pip"},{"location":"insiders/getting-started/#with-docker","text":"In case you want to use Material for MkDocs Insiders from within Docker, some additional steps are necessary. While we cannot provide a hosted Docker image for Insiders 1 , GitHub Container Registry allows for simple and comfortable self-hosting: Fork the Insiders repository Enable GitHub Actions on your fork 2 Create a new personal access token 3 Go to https://github.com/settings/tokens Click on Generate a new token Enter a name and select the write:packages scope Generate the token and store it in a safe place Add a GitHub Actions secret on your fork Set the name to GHCR_TOKEN Set the value to the personal access token created in the previous step Create a new release to build and publish the Docker image Install Pull App on your fork to stay in-sync with upstream The publish workflow 4 is automatically run when a new tag (release) is created. When a new Insiders version is released on the upstream repository, the Pull App will create a pull request with the changes and pull in the new tag, which is picked up by the publish workflow that builds and publishes the Docker image automatically to your private registry. Now, you should be able to pull the Docker image from your private registry: docker login -u ${GH_USERNAME} -p ${GHCR_TOKEN} ghcr.io docker pull ghcr.io/${GH_USERNAME}/mkdocs-material-insiders","title":"with docker"},{"location":"insiders/getting-started/#with-git","text":"Of course, you can use Material for MkDocs Insiders directly from git : git clone git@github.com:squidfunk/mkdocs-material-insiders.git mkdocs-material The theme will reside in the folder mkdocs-material/material . When cloning from git , the theme must be installed, so MkDocs can find the built-in plugins: pip install -e mkdocs-material Earlier, Insiders provided a dedicated Docker image which was available to all sponsors. On March 21, 2021, the image was deprecated for the reasons outlined and discussed in #2442 . It was removed on June 1, 2021. \u21a9 When forking a repository, GitHub will disables all workflows. While this is a reasonable default setting, you need to enable GitHub Actions to be able to automatically build and publish a Docker image on GitHub Container Registry . \u21a9 While you could just add the write:packages scope to the personal access token created to access the Insiders repository, it's safer to create a dedicated token which you'll only use for publishing the Docker image. \u21a9 The Insiders repository contains three GitHub Actions workflows: build.yml \u2013 Build and lint the project (disabled on forks) documentation.yml \u2013 Build and deploy the documentation (disabled on forks) publish.yml \u2013 Build and publish the Docker image \u21a9","title":"with git"},{"location":"reference/abbreviations/","text":"Abbreviations \u00b6 Technical documentation often incurs the usage of a lot of acronyms, which may need additional explanation, especially for new user of your project. For these matters, Material for MkDocs uses a combination of Markdown extensions to enable site-wide glossaries. Configuration \u00b6 Abbreviations \u00b6 Source \u00b7 Extension The Abbreviations extension, which is part of the standard Markdown library, allows to add additional content to parts of the text which are then shown on hover , e.g. for glossaries: markdown_extensions : - abbr Snippets \u00b6 The Snippets extension, which is part of Python Markdown Extensions , allows to insert content from other files or other, regular content, and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.snippets Usage \u00b6 Adding abbreviations \u00b6 When the Abbreviations extension is enabled, abbreviations can be defined with a special syntax similar to URLs and footnotes at any point in the Markdown document. Example : The HTML specification is maintained by the W3C. *[HTML]: Hyper Text Markup Language *[W3C]: World Wide Web Consortium Result : The HTML specification is maintained by the W3C . Adding a glossary \u00b6 When Snippets is enabled, content from other files can be embedded, which is especially useful to include abbreviations from a central file \u2013 a glossary \u2013 and embed them into any other file. Example : docs/page.md The HTML specification is maintained by the W3C. --8<-- \"includes/abbreviations.md\" includes/abbreviations.md *[HTML]: Hyper Text Markup Language *[W3C]: World Wide Web Consortium Result : The HTML specification is maintained by the W3C . Remember to locate the Markdown file containing the definitions outside of the docs folder (here includes is used), or MkDocs may complain about an unreferenced file.","title":"Abbreviations"},{"location":"reference/abbreviations/#abbreviations","text":"Technical documentation often incurs the usage of a lot of acronyms, which may need additional explanation, especially for new user of your project. For these matters, Material for MkDocs uses a combination of Markdown extensions to enable site-wide glossaries.","title":"Abbreviations"},{"location":"reference/abbreviations/#configuration","text":"","title":"Configuration"},{"location":"reference/abbreviations/#abbreviations_1","text":"Source \u00b7 Extension The Abbreviations extension, which is part of the standard Markdown library, allows to add additional content to parts of the text which are then shown on hover , e.g. for glossaries: markdown_extensions : - abbr","title":"Abbreviations"},{"location":"reference/abbreviations/#snippets","text":"The Snippets extension, which is part of Python Markdown Extensions , allows to insert content from other files or other, regular content, and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.snippets","title":"Snippets"},{"location":"reference/abbreviations/#usage","text":"","title":"Usage"},{"location":"reference/abbreviations/#adding-abbreviations","text":"When the Abbreviations extension is enabled, abbreviations can be defined with a special syntax similar to URLs and footnotes at any point in the Markdown document. Example : The HTML specification is maintained by the W3C. *[HTML]: Hyper Text Markup Language *[W3C]: World Wide Web Consortium Result : The HTML specification is maintained by the W3C .","title":"Adding abbreviations"},{"location":"reference/abbreviations/#adding-a-glossary","text":"When Snippets is enabled, content from other files can be embedded, which is especially useful to include abbreviations from a central file \u2013 a glossary \u2013 and embed them into any other file. Example : docs/page.md The HTML specification is maintained by the W3C. --8<-- \"includes/abbreviations.md\" includes/abbreviations.md *[HTML]: Hyper Text Markup Language *[W3C]: World Wide Web Consortium Result : The HTML specification is maintained by the W3C . Remember to locate the Markdown file containing the definitions outside of the docs folder (here includes is used), or MkDocs may complain about an unreferenced file.","title":"Adding a glossary"},{"location":"reference/admonitions/","text":"Admonitions \u00b6 Admonitions, also known as call-outs , are an excellent choice for including side content without significantly interrupting the document flow. Material for MkDocs provides several different types of admonitions and allows for the inclusion and nesting of arbitrary content. Configuration \u00b6 Admonition \u00b6 Source \u00b7 Extension The Admonition extension, which is part of the standard Markdown library, is integrated with Material for MkDocs and can be enabled via mkdocs.yml : markdown_extensions : - admonition Details \u00b6 Source \u00b7 Extension The Details extension, which is part of Python Markdown Extensions , adds the ability to make admonitions collapsible . It can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.details SuperFences \u00b6 The SuperFences extension, which is also part of Python Markdown Extensions , allows for the nesting of code and content blocks inside admonitions , and is therefore strongly recommended: markdown_extensions : - pymdownx.superfences Usage \u00b6 Admonitions follow a simple syntax: a block must start with !!! , followed by a single keyword which is used as the type qualifier of the block. The content of the block then follows on the next line, indented by four spaces. Example : !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result : Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Changing the title \u00b6 By default, the title will equal the type qualifier in titlecase. However, it can be changed by adding a quoted string containing valid Markdown (including links, formatting, ...) after the type qualifier. Example : !!! note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result : Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Removing the title \u00b6 Similar to changing the title , the icon and title can be omitted entirely by adding an empty string directly after the type qualifier. Note that this will not work for collapsible blocks . Example : !!! note \"\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result : Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Embedded content \u00b6 Admonitions can contain all kinds of text content, including headlines, lists, paragraphs and other blocks. While the parser from the standard Markdown library doesn't account for nested blocks, the SuperFences extension adds the ability to nest arbitrary content inside admonitions. Example : !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ``` python def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim. Result : Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim. Collapsible blocks \u00b6 The Details extension adds support for rendering collapsible admonition blocks. This is useful for FAQs or content that is of secondary nature. A details block follows the syntax and semantics of admonition blocks, but must start with ??? . Example : ??? note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result : Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Adding a + after ??? will render the block as open on page load: Example : ???+ note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result : Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Inline blocks \u00b6 Source \u00b7 Experimental Admonitions and Details can also be rendered as inline blocks (i.e. sidebars), placing them to the right using the inline + end modifiers, or to the left using only the inline modifier. Important : Admonitions that use the inline modifiers must be declared prior to the content block you want to place them beside. If there's insufficient space to render the admonition next to the block, the admonition will stretch to the full width of the viewport, e.g. on mobile viewports. inline end Example / Result : Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! info inline end Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Use inline end to align to the right (left for rtl languages). inline Example / Result : Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! info inline Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Use inline to align to the left (right for rtl languages). Supported types \u00b6 Following is a list of type qualifiers provided by Material for MkDocs, whereas the default type, and thus fallback for unknown type qualifiers, is note : note , seealso 1 Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. abstract , summary , tldr Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. info , todo Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. tip , hint , important Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. success , check , done Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. question , help , faq Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. warning , caution , attention Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. failure , fail , missing Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. danger , error Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. bug Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. example Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. quote , cite Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Changing the icons \u00b6 Source \u00b7 Insiders only Each of the supported admonition types has a distinct icon, which can be changed to any icon bundled with the theme. Just set the name of the admonition type to a valid icon in mkdocs.yml : Octicons Example : theme : icon : admonition : note : octicons/tag-16 abstract : octicons/checklist-16 info : octicons/info-16 tip : octicons/squirrel-16 success : octicons/check-16 question : octicons/question-16 warning : octicons/alert-16 failure : octicons/x-circle-16 danger : octicons/zap-16 bug : octicons/bug-16 example : octicons/beaker-16 quote : octicons/quote-16 Result : FontAwesome Example : theme : icon : admonition : note : fontawesome/solid/sticky-note abstract : fontawesome/solid/book info : fontawesome/solid/info-circle tip : fontawesome/solid/bullhorn success : fontawesome/solid/check question : fontawesome/solid/question-circle warning : fontawesome/solid/exclamation-triangle failure : fontawesome/solid/bomb danger : fontawesome/solid/skull bug : fontawesome/solid/robot example : fontawesome/solid/flask quote : fontawesome/solid/quote-left Result : Customization \u00b6 Custom admonitions \u00b6 If you want to add a custom admonition type, all you need is a color and an svg icon. Copy the icon's svg code from the .icons folder and add the following CSS to an additional stylesheet : : root { --md-admonition-icon--pied-piper : url ( 'data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M244 246c-3.2-2-6.3-2.9-10.1-2.9-6.6 0-12.6 3.2-19.3 3.7l1.7 4.9zm135.9 197.9c-19 0-64.1 9.5-79.9 19.8l6.9 45.1c35.7 6.1 70.1 3.6 106-9.8-4.8-10-23.5-55.1-33-55.1zM340.8 177c6.6 2.8 11.5 9.2 22.7 22.1 2-1.4 7.5-5.2 7.5-8.6 0-4.9-11.8-13.2-13.2-23 11.2-5.7 25.2-6 37.6-8.9 68.1-16.4 116.3-52.9 146.8-116.7C548.3 29.3 554 16.1 554.6 2l-2 2.6c-28.4 50-33 63.2-81.3 100-31.9 24.4-69.2 40.2-106.6 54.6l-6.3-.3v-21.8c-19.6 1.6-19.7-14.6-31.6-23-18.7 20.6-31.6 40.8-58.9 51.1-12.7 4.8-19.6 10-25.9 21.8 34.9-16.4 91.2-13.5 98.8-10zM555.5 0l-.6 1.1-.3.9.6-.6zm-59.2 382.1c-33.9-56.9-75.3-118.4-150-115.5l-.3-6c-1.1-13.5 32.8 3.2 35.1-31l-14.4 7.2c-19.8-45.7-8.6-54.3-65.5-54.3-14.7 0-26.7 1.7-41.4 4.6 2.9 18.6 2.2 36.7-10.9 50.3l19.5 5.5c-1.7 3.2-2.9 6.3-2.9 9.8 0 21 42.8 2.9 42.8 33.6 0 18.4-36.8 60.1-54.9 60.1-8 0-53.7-50-53.4-60.1l.3-4.6 52.3-11.5c13-2.6 12.3-22.7-2.9-22.7-3.7 0-43.1 9.2-49.4 10.6-2-5.2-7.5-14.1-13.8-14.1-3.2 0-6.3 3.2-9.5 4-9.2 2.6-31 2.9-21.5 20.1L15.9 298.5c-5.5 1.1-8.9 6.3-8.9 11.8 0 6 5.5 10.9 11.5 10.9 8 0 131.3-28.4 147.4-32.2 2.6 3.2 4.6 6.3 7.8 8.6 20.1 14.4 59.8 85.9 76.4 85.9 24.1 0 58-22.4 71.3-41.9 3.2-4.3 6.9-7.5 12.4-6.9.6 13.8-31.6 34.2-33 43.7-1.4 10.2-1 35.2-.3 41.1 26.7 8.1 52-3.6 77.9-2.9 4.3-21 10.6-41.9 9.8-63.5l-.3-9.5c-1.4-34.2-10.9-38.5-34.8-58.6-1.1-1.1-2.6-2.6-3.7-4 2.2-1.4 1.1-1 4.6-1.7 88.5 0 56.3 183.6 111.5 229.9 33.1-15 72.5-27.9 103.5-47.2-29-25.6-52.6-45.7-72.7-79.9zm-196.2 46.1v27.2l11.8-3.4-2.9-23.8zm-68.7-150.4l24.1 61.2 21-13.8-31.3-50.9zm84.4 154.9l2 12.4c9-1.5 58.4-6.6 58.4-14.1 0-1.4-.6-3.2-.9-4.6-26.8 0-36.9 3.8-59.5 6.3z\"/></svg>' ) } . md-typeset . admonition . pied-piper , . md-typeset details . pied-piper { border-color : rgb ( 43 , 155 , 70 ); } . md-typeset . pied-piper > . admonition-title , . md-typeset . pied-piper > summary { background-color : rgba ( 43 , 155 , 70 , 0.1 ); border-color : rgb ( 43 , 155 , 70 ); } . md-typeset . pied-piper > . admonition-title :: before , . md-typeset . pied-piper > summary :: before { background-color : rgb ( 43 , 155 , 70 ); -webkit- mask-image : var ( --md-admonition-icon--pied-piper ); mask-image : var ( --md-admonition-icon--pied-piper ); } You should now be able to create an admonition of the pied-piper type. Note that you can also use this technique to override existing admonition icons or colors. You can even add animations . :root { --md-admonition-icon--pied-piper: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M244 246c-3.2-2-6.3-2.9-10.1-2.9-6.6 0-12.6 3.2-19.3 3.7l1.7 4.9zm135.9 197.9c-19 0-64.1 9.5-79.9 19.8l6.9 45.1c35.7 6.1 70.1 3.6 106-9.8-4.8-10-23.5-55.1-33-55.1zM340.8 177c6.6 2.8 11.5 9.2 22.7 22.1 2-1.4 7.5-5.2 7.5-8.6 0-4.9-11.8-13.2-13.2-23 11.2-5.7 25.2-6 37.6-8.9 68.1-16.4 116.3-52.9 146.8-116.7C548.3 29.3 554 16.1 554.6 2l-2 2.6c-28.4 50-33 63.2-81.3 100-31.9 24.4-69.2 40.2-106.6 54.6l-6.3-.3v-21.8c-19.6 1.6-19.7-14.6-31.6-23-18.7 20.6-31.6 40.8-58.9 51.1-12.7 4.8-19.6 10-25.9 21.8 34.9-16.4 91.2-13.5 98.8-10zM555.5 0l-.6 1.1-.3.9.6-.6zm-59.2 382.1c-33.9-56.9-75.3-118.4-150-115.5l-.3-6c-1.1-13.5 32.8 3.2 35.1-31l-14.4 7.2c-19.8-45.7-8.6-54.3-65.5-54.3-14.7 0-26.7 1.7-41.4 4.6 2.9 18.6 2.2 36.7-10.9 50.3l19.5 5.5c-1.7 3.2-2.9 6.3-2.9 9.8 0 21 42.8 2.9 42.8 33.6 0 18.4-36.8 60.1-54.9 60.1-8 0-53.7-50-53.4-60.1l.3-4.6 52.3-11.5c13-2.6 12.3-22.7-2.9-22.7-3.7 0-43.1 9.2-49.4 10.6-2-5.2-7.5-14.1-13.8-14.1-3.2 0-6.3 3.2-9.5 4-9.2 2.6-31 2.9-21.5 20.1L15.9 298.5c-5.5 1.1-8.9 6.3-8.9 11.8 0 6 5.5 10.9 11.5 10.9 8 0 131.3-28.4 147.4-32.2 2.6 3.2 4.6 6.3 7.8 8.6 20.1 14.4 59.8 85.9 76.4 85.9 24.1 0 58-22.4 71.3-41.9 3.2-4.3 6.9-7.5 12.4-6.9.6 13.8-31.6 34.2-33 43.7-1.4 10.2-1 35.2-.3 41.1 26.7 8.1 52-3.6 77.9-2.9 4.3-21 10.6-41.9 9.8-63.5l-.3-9.5c-1.4-34.2-10.9-38.5-34.8-58.6-1.1-1.1-2.6-2.6-3.7-4 2.2-1.4 1.1-1 4.6-1.7 88.5 0 56.3 183.6 111.5 229.9 33.1-15 72.5-27.9 103.5-47.2-29-25.6-52.6-45.7-72.7-79.9zm-196.2 46.1v27.2l11.8-3.4-2.9-23.8zm-68.7-150.4l24.1 61.2 21-13.8-31.3-50.9zm84.4 154.9l2 12.4c9-1.5 58.4-6.6 58.4-14.1 0-1.4-.6-3.2-.9-4.6-26.8 0-36.9 3.8-59.5 6.3z\"/></svg>') } .md-typeset .admonition.pied-piper, .md-typeset details.pied-piper { border-color: rgb(43, 155, 70); } .md-typeset .pied-piper > .admonition-title, .md-typeset .pied-piper > summary { background-color: rgba(43, 155, 70, 0.1); border-color: rgb(43, 155, 70); } .md-typeset .pied-piper > .admonition-title::before, .md-typeset .pied-piper > summary::before { background-color: rgb(43, 155, 70); -webkit-mask-image: var(--md-admonition-icon--pied-piper); mask-image: var(--md-admonition-icon--pied-piper); } Example : !!! pied-piper \"Pied Piper\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result : Pied Piper Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. The seealso qualifier was originally adapted from the readthedocs theme, in order to make it easier for authors to migrate to Material for MkDocs. However, when the title is omitted, the admonition extension will render it as Seealso , which is incorrect English. For this reason, it was deprecated as of 7.1.5 and will be removed in 8.x. \u21a9","title":"Admonitions"},{"location":"reference/admonitions/#admonitions","text":"Admonitions, also known as call-outs , are an excellent choice for including side content without significantly interrupting the document flow. Material for MkDocs provides several different types of admonitions and allows for the inclusion and nesting of arbitrary content.","title":"Admonitions"},{"location":"reference/admonitions/#configuration","text":"","title":"Configuration"},{"location":"reference/admonitions/#admonition","text":"Source \u00b7 Extension The Admonition extension, which is part of the standard Markdown library, is integrated with Material for MkDocs and can be enabled via mkdocs.yml : markdown_extensions : - admonition","title":"Admonition"},{"location":"reference/admonitions/#details","text":"Source \u00b7 Extension The Details extension, which is part of Python Markdown Extensions , adds the ability to make admonitions collapsible . It can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.details","title":"Details"},{"location":"reference/admonitions/#superfences","text":"The SuperFences extension, which is also part of Python Markdown Extensions , allows for the nesting of code and content blocks inside admonitions , and is therefore strongly recommended: markdown_extensions : - pymdownx.superfences","title":"SuperFences"},{"location":"reference/admonitions/#usage","text":"Admonitions follow a simple syntax: a block must start with !!! , followed by a single keyword which is used as the type qualifier of the block. The content of the block then follows on the next line, indented by four spaces. Example : !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result : Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Usage"},{"location":"reference/admonitions/#changing-the-title","text":"By default, the title will equal the type qualifier in titlecase. However, it can be changed by adding a quoted string containing valid Markdown (including links, formatting, ...) after the type qualifier. Example : !!! note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result : Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Changing the title"},{"location":"reference/admonitions/#removing-the-title","text":"Similar to changing the title , the icon and title can be omitted entirely by adding an empty string directly after the type qualifier. Note that this will not work for collapsible blocks . Example : !!! note \"\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result : Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Removing the title"},{"location":"reference/admonitions/#embedded-content","text":"Admonitions can contain all kinds of text content, including headlines, lists, paragraphs and other blocks. While the parser from the standard Markdown library doesn't account for nested blocks, the SuperFences extension adds the ability to nest arbitrary content inside admonitions. Example : !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ``` python def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim. Result : Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.","title":"Embedded content"},{"location":"reference/admonitions/#collapsible-blocks","text":"The Details extension adds support for rendering collapsible admonition blocks. This is useful for FAQs or content that is of secondary nature. A details block follows the syntax and semantics of admonition blocks, but must start with ??? . Example : ??? note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result : Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Adding a + after ??? will render the block as open on page load: Example : ???+ note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result : Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Collapsible blocks"},{"location":"reference/admonitions/#inline-blocks","text":"Source \u00b7 Experimental Admonitions and Details can also be rendered as inline blocks (i.e. sidebars), placing them to the right using the inline + end modifiers, or to the left using only the inline modifier. Important : Admonitions that use the inline modifiers must be declared prior to the content block you want to place them beside. If there's insufficient space to render the admonition next to the block, the admonition will stretch to the full width of the viewport, e.g. on mobile viewports. inline end Example / Result : Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! info inline end Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Use inline end to align to the right (left for rtl languages). inline Example / Result : Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. !!! info inline Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Use inline to align to the left (right for rtl languages).","title":"Inline blocks"},{"location":"reference/admonitions/#supported-types","text":"Following is a list of type qualifiers provided by Material for MkDocs, whereas the default type, and thus fallback for unknown type qualifiers, is note : note , seealso 1 Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. abstract , summary , tldr Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. info , todo Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. tip , hint , important Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. success , check , done Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. question , help , faq Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. warning , caution , attention Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. failure , fail , missing Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. danger , error Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. bug Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. example Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. quote , cite Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Supported types"},{"location":"reference/admonitions/#changing-the-icons","text":"Source \u00b7 Insiders only Each of the supported admonition types has a distinct icon, which can be changed to any icon bundled with the theme. Just set the name of the admonition type to a valid icon in mkdocs.yml : Octicons Example : theme : icon : admonition : note : octicons/tag-16 abstract : octicons/checklist-16 info : octicons/info-16 tip : octicons/squirrel-16 success : octicons/check-16 question : octicons/question-16 warning : octicons/alert-16 failure : octicons/x-circle-16 danger : octicons/zap-16 bug : octicons/bug-16 example : octicons/beaker-16 quote : octicons/quote-16 Result : FontAwesome Example : theme : icon : admonition : note : fontawesome/solid/sticky-note abstract : fontawesome/solid/book info : fontawesome/solid/info-circle tip : fontawesome/solid/bullhorn success : fontawesome/solid/check question : fontawesome/solid/question-circle warning : fontawesome/solid/exclamation-triangle failure : fontawesome/solid/bomb danger : fontawesome/solid/skull bug : fontawesome/solid/robot example : fontawesome/solid/flask quote : fontawesome/solid/quote-left Result :","title":"Changing the icons"},{"location":"reference/admonitions/#customization","text":"","title":"Customization"},{"location":"reference/admonitions/#custom-admonitions","text":"If you want to add a custom admonition type, all you need is a color and an svg icon. Copy the icon's svg code from the .icons folder and add the following CSS to an additional stylesheet : : root { --md-admonition-icon--pied-piper : url ( 'data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M244 246c-3.2-2-6.3-2.9-10.1-2.9-6.6 0-12.6 3.2-19.3 3.7l1.7 4.9zm135.9 197.9c-19 0-64.1 9.5-79.9 19.8l6.9 45.1c35.7 6.1 70.1 3.6 106-9.8-4.8-10-23.5-55.1-33-55.1zM340.8 177c6.6 2.8 11.5 9.2 22.7 22.1 2-1.4 7.5-5.2 7.5-8.6 0-4.9-11.8-13.2-13.2-23 11.2-5.7 25.2-6 37.6-8.9 68.1-16.4 116.3-52.9 146.8-116.7C548.3 29.3 554 16.1 554.6 2l-2 2.6c-28.4 50-33 63.2-81.3 100-31.9 24.4-69.2 40.2-106.6 54.6l-6.3-.3v-21.8c-19.6 1.6-19.7-14.6-31.6-23-18.7 20.6-31.6 40.8-58.9 51.1-12.7 4.8-19.6 10-25.9 21.8 34.9-16.4 91.2-13.5 98.8-10zM555.5 0l-.6 1.1-.3.9.6-.6zm-59.2 382.1c-33.9-56.9-75.3-118.4-150-115.5l-.3-6c-1.1-13.5 32.8 3.2 35.1-31l-14.4 7.2c-19.8-45.7-8.6-54.3-65.5-54.3-14.7 0-26.7 1.7-41.4 4.6 2.9 18.6 2.2 36.7-10.9 50.3l19.5 5.5c-1.7 3.2-2.9 6.3-2.9 9.8 0 21 42.8 2.9 42.8 33.6 0 18.4-36.8 60.1-54.9 60.1-8 0-53.7-50-53.4-60.1l.3-4.6 52.3-11.5c13-2.6 12.3-22.7-2.9-22.7-3.7 0-43.1 9.2-49.4 10.6-2-5.2-7.5-14.1-13.8-14.1-3.2 0-6.3 3.2-9.5 4-9.2 2.6-31 2.9-21.5 20.1L15.9 298.5c-5.5 1.1-8.9 6.3-8.9 11.8 0 6 5.5 10.9 11.5 10.9 8 0 131.3-28.4 147.4-32.2 2.6 3.2 4.6 6.3 7.8 8.6 20.1 14.4 59.8 85.9 76.4 85.9 24.1 0 58-22.4 71.3-41.9 3.2-4.3 6.9-7.5 12.4-6.9.6 13.8-31.6 34.2-33 43.7-1.4 10.2-1 35.2-.3 41.1 26.7 8.1 52-3.6 77.9-2.9 4.3-21 10.6-41.9 9.8-63.5l-.3-9.5c-1.4-34.2-10.9-38.5-34.8-58.6-1.1-1.1-2.6-2.6-3.7-4 2.2-1.4 1.1-1 4.6-1.7 88.5 0 56.3 183.6 111.5 229.9 33.1-15 72.5-27.9 103.5-47.2-29-25.6-52.6-45.7-72.7-79.9zm-196.2 46.1v27.2l11.8-3.4-2.9-23.8zm-68.7-150.4l24.1 61.2 21-13.8-31.3-50.9zm84.4 154.9l2 12.4c9-1.5 58.4-6.6 58.4-14.1 0-1.4-.6-3.2-.9-4.6-26.8 0-36.9 3.8-59.5 6.3z\"/></svg>' ) } . md-typeset . admonition . pied-piper , . md-typeset details . pied-piper { border-color : rgb ( 43 , 155 , 70 ); } . md-typeset . pied-piper > . admonition-title , . md-typeset . pied-piper > summary { background-color : rgba ( 43 , 155 , 70 , 0.1 ); border-color : rgb ( 43 , 155 , 70 ); } . md-typeset . pied-piper > . admonition-title :: before , . md-typeset . pied-piper > summary :: before { background-color : rgb ( 43 , 155 , 70 ); -webkit- mask-image : var ( --md-admonition-icon--pied-piper ); mask-image : var ( --md-admonition-icon--pied-piper ); } You should now be able to create an admonition of the pied-piper type. Note that you can also use this technique to override existing admonition icons or colors. You can even add animations . :root { --md-admonition-icon--pied-piper: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M244 246c-3.2-2-6.3-2.9-10.1-2.9-6.6 0-12.6 3.2-19.3 3.7l1.7 4.9zm135.9 197.9c-19 0-64.1 9.5-79.9 19.8l6.9 45.1c35.7 6.1 70.1 3.6 106-9.8-4.8-10-23.5-55.1-33-55.1zM340.8 177c6.6 2.8 11.5 9.2 22.7 22.1 2-1.4 7.5-5.2 7.5-8.6 0-4.9-11.8-13.2-13.2-23 11.2-5.7 25.2-6 37.6-8.9 68.1-16.4 116.3-52.9 146.8-116.7C548.3 29.3 554 16.1 554.6 2l-2 2.6c-28.4 50-33 63.2-81.3 100-31.9 24.4-69.2 40.2-106.6 54.6l-6.3-.3v-21.8c-19.6 1.6-19.7-14.6-31.6-23-18.7 20.6-31.6 40.8-58.9 51.1-12.7 4.8-19.6 10-25.9 21.8 34.9-16.4 91.2-13.5 98.8-10zM555.5 0l-.6 1.1-.3.9.6-.6zm-59.2 382.1c-33.9-56.9-75.3-118.4-150-115.5l-.3-6c-1.1-13.5 32.8 3.2 35.1-31l-14.4 7.2c-19.8-45.7-8.6-54.3-65.5-54.3-14.7 0-26.7 1.7-41.4 4.6 2.9 18.6 2.2 36.7-10.9 50.3l19.5 5.5c-1.7 3.2-2.9 6.3-2.9 9.8 0 21 42.8 2.9 42.8 33.6 0 18.4-36.8 60.1-54.9 60.1-8 0-53.7-50-53.4-60.1l.3-4.6 52.3-11.5c13-2.6 12.3-22.7-2.9-22.7-3.7 0-43.1 9.2-49.4 10.6-2-5.2-7.5-14.1-13.8-14.1-3.2 0-6.3 3.2-9.5 4-9.2 2.6-31 2.9-21.5 20.1L15.9 298.5c-5.5 1.1-8.9 6.3-8.9 11.8 0 6 5.5 10.9 11.5 10.9 8 0 131.3-28.4 147.4-32.2 2.6 3.2 4.6 6.3 7.8 8.6 20.1 14.4 59.8 85.9 76.4 85.9 24.1 0 58-22.4 71.3-41.9 3.2-4.3 6.9-7.5 12.4-6.9.6 13.8-31.6 34.2-33 43.7-1.4 10.2-1 35.2-.3 41.1 26.7 8.1 52-3.6 77.9-2.9 4.3-21 10.6-41.9 9.8-63.5l-.3-9.5c-1.4-34.2-10.9-38.5-34.8-58.6-1.1-1.1-2.6-2.6-3.7-4 2.2-1.4 1.1-1 4.6-1.7 88.5 0 56.3 183.6 111.5 229.9 33.1-15 72.5-27.9 103.5-47.2-29-25.6-52.6-45.7-72.7-79.9zm-196.2 46.1v27.2l11.8-3.4-2.9-23.8zm-68.7-150.4l24.1 61.2 21-13.8-31.3-50.9zm84.4 154.9l2 12.4c9-1.5 58.4-6.6 58.4-14.1 0-1.4-.6-3.2-.9-4.6-26.8 0-36.9 3.8-59.5 6.3z\"/></svg>') } .md-typeset .admonition.pied-piper, .md-typeset details.pied-piper { border-color: rgb(43, 155, 70); } .md-typeset .pied-piper > .admonition-title, .md-typeset .pied-piper > summary { background-color: rgba(43, 155, 70, 0.1); border-color: rgb(43, 155, 70); } .md-typeset .pied-piper > .admonition-title::before, .md-typeset .pied-piper > summary::before { background-color: rgb(43, 155, 70); -webkit-mask-image: var(--md-admonition-icon--pied-piper); mask-image: var(--md-admonition-icon--pied-piper); } Example : !!! pied-piper \"Pied Piper\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result : Pied Piper Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. The seealso qualifier was originally adapted from the readthedocs theme, in order to make it easier for authors to migrate to Material for MkDocs. However, when the title is omitted, the admonition extension will render it as Seealso , which is incorrect English. For this reason, it was deprecated as of 7.1.5 and will be removed in 8.x. \u21a9","title":"Custom admonitions"},{"location":"reference/buttons/","text":"Buttons \u00b6 Material for MkDocs provides dedicated styles for primary and secondary buttons that can be added to any link, label or button element. This is especially useful for documents or landing pages with dedicated call-to-actions . Configuration \u00b6 Attribute List \u00b6 The Attribute List extension, which is part of the standard Markdown library, allows to add HTML attributes and CSS classes to Markdown elements , and can be enabled via mkdocs.yml markdown_extensions : - attr_list Usage \u00b6 Adding buttons \u00b6 When the Attribute List extension is enabled, any clickable element can be converted into a button by adding the .md-button CSS class, which will receive the selected primary color . Example : [ Subscribe to our mailing list ]( # ){ .md-button } Result : Subscribe to our mailing list Adding primary buttons \u00b6 If you want to display a filled, primary button (like on the landing page of Material for MkDocs), add both the .md-button and .md-button--primary CSS classes. Example : [ Subscribe to our mailing list ]( # ){ .md-button .md-button--primary } Result : Subscribe to our mailing list Adding icon buttons \u00b6 Of course, icons can be added to both types of buttons by using the regular icon syntax and referencing a valid path to any icon bundled with the theme . Example : [ Submit :fontawesome-solid-paper-plane: ]( # ){ .md-button .md-button--primary } Result : Submit","title":"Buttons"},{"location":"reference/buttons/#buttons","text":"Material for MkDocs provides dedicated styles for primary and secondary buttons that can be added to any link, label or button element. This is especially useful for documents or landing pages with dedicated call-to-actions .","title":"Buttons"},{"location":"reference/buttons/#configuration","text":"","title":"Configuration"},{"location":"reference/buttons/#attribute-list","text":"The Attribute List extension, which is part of the standard Markdown library, allows to add HTML attributes and CSS classes to Markdown elements , and can be enabled via mkdocs.yml markdown_extensions : - attr_list","title":"Attribute List"},{"location":"reference/buttons/#usage","text":"","title":"Usage"},{"location":"reference/buttons/#adding-buttons","text":"When the Attribute List extension is enabled, any clickable element can be converted into a button by adding the .md-button CSS class, which will receive the selected primary color . Example : [ Subscribe to our mailing list ]( # ){ .md-button } Result : Subscribe to our mailing list","title":"Adding buttons"},{"location":"reference/buttons/#adding-primary-buttons","text":"If you want to display a filled, primary button (like on the landing page of Material for MkDocs), add both the .md-button and .md-button--primary CSS classes. Example : [ Subscribe to our mailing list ]( # ){ .md-button .md-button--primary } Result : Subscribe to our mailing list","title":"Adding primary buttons"},{"location":"reference/buttons/#adding-icon-buttons","text":"Of course, icons can be added to both types of buttons by using the regular icon syntax and referencing a valid path to any icon bundled with the theme . Example : [ Submit :fontawesome-solid-paper-plane: ]( # ){ .md-button .md-button--primary } Result : Submit","title":"Adding icon buttons"},{"location":"reference/code-blocks/","text":"Code blocks \u00b6 Code blocks and examples are an essential part of technical project documentation. Material for MkDocs provides different ways to set up syntax highlighting for code blocks, either during build time using Pygments or during runtime using a JavaScript syntax highlighter. Configuration \u00b6 Highlight \u00b6 Source \u00b7 Extension \u00b7 Supersedes: CodeHilite The Highlight extension, which is part of Python Markdown Extensions , integrates with Material for MkDocs and provides several options for configuring syntax highlighting of code blocks: use_pygments Default: true \u2013 This option allows to control whether highlighting should be carried out during build time by Pygments or runtime with a JavaScript highlighter. Remember to add the necessary additional stylesheets and JavaScript if you want to use the latter: Pygments markdown_extensions : - pymdownx.highlight - pymdownx.superfences JavaScript markdown_extensions : - pymdownx.highlight : use_pygments : false Syntax highlighting with Highlight.js Highlight.js can be integrated by creating an additional JavaScript file initializing the highlighter and including the respective stylesheet and JavaScript from a CDN serving Highlight.js in mkdocs.yml : docs/javascripts/config.js document $ . subscribe (() => { hljs . highlightAll () }) mkdocs.yml extra_javascript : - https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/highlight.min.js - javascripts/config.js extra_css : - https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/styles/default.min.css Note that Highlight.js has no affiliation with the Highlight extension. linenums Default: false \u2013 This option will add line numbers to all code blocks. If you wish to add line numbers to some , but not all code blocks, consult the section on adding line numbers later in this document, which also contains some tips on working with line numbers: markdown_extensions : - pymdownx.highlight : linenums : true linenums_style Default: table \u2013 The Highlight extension provides three ways to add line numbers, all of which are supported by Material for MkDocs. While table wraps a code block in a table, inline and pymdownx-inline render line numbers as part of the line itself: markdown_extensions : - pymdownx.highlight : linenums_style : pymdownx-inline Note that inline will put line numbers next to the actual code, which means that they will be included when selecting text with the cursor or copying a code block to the clipboard. Thus, the usage of table or pymdownx-inline is recommended. Material for MkDocs doesn't provide official support for the other options of this extension, so they may be supported but might yield unexpected results. Use them at your own risk. InlineHilite \u00b6 Source \u00b7 Extension The InlineHilite extension, which is part of Python Markdown Extensions also integrates with Material for MkDocs and adds support for syntax highlighting of inline code blocks . It's built on top of the Highlight extension and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.inlinehilite See the section on inline code blocks for usage information. Keys \u00b6 Source \u00b7 Extension The Keys extension, which is part of Python Markdown Extensions , allows for inserting keyboard keys , e.g. Ctrl + Alt + Del , and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.keys SuperFences \u00b6 The SuperFences extension, which is also part of Python Markdown Extensions , allows for the nesting of code blocks inside other blocks , and is therefore strongly recommended: markdown_extensions : - pymdownx.superfences Snippets \u00b6 The Snippets extension, which is also part of Python Markdown Extensions , allows to insert content from other files or other, regular content, and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.snippets Usage \u00b6 This section discusses how to use different syntax highlighting features with Pygments \u2013 the default highlighter \u2013 so they don't apply when using a JavaScript syntax highlighter. Specifying the language \u00b6 Code blocks must be enclosed with two separate lines containing three backticks. To add code highlighting to those blocks, add the language short name directly after the opening block. See the list of available lexers to find the short name for a given language. Example : ``` python import tensorflow as tf ``` Result : import tensorflow as tf Adding annotations \u00b6 Source \u00b7 Experimental \u00b7 Insiders only Annotations offer a comfortable and friendly way to attach explanations to arbitrary sections of code blocks by adding simple markers within block/inline comments that refer to items of a list following the code block, i.e. (1) , (2) , etc. Material for MkDocs detaches the list from the flow of the document, injects the content of each list item into a tooltip, and links each list marker to the corresponding tooltip. In order to opt-in to annotation support, a slightly different syntax is required \u2013 just add the respective language short code and the .annotate class, after the three backticks. Note that annotations can be placed anywhere in a code block where a comment for the language can be placed, which for JavaScript is // (1) and /* (2) */ , for Yaml # (3) , etc. Example : ``` { .js .annotate } document$.subscribe(function() { // (1) var tables = document.querySelectorAll(/* (2) */ \"article table\") tables.forEach(function(table) { new Tablesort(table) }) }) ``` 1. ... 2. ... Result : A demo is worth a thousand words \u2014 check it out at squidfunk.github.io/mkdocs-material-insiders Annotations require syntax highlighting with Pygments \u2013 they're currently not compatible with other JavaScript-based syntax highlighters. Support may be added later on. Adding line numbers \u00b6 Line numbers can be added to a code block by using the linenums=\"<start>\" option directly after the short name, whereas <start> represents the starting line number. A code block can start from a line number other than 1 , which allows splitting large code blocks for readability. Example : ``` python linenums=\"1\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result : 1 2 3 4 5 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Highlighting specific lines \u00b6 Specific lines can be highlighted by passing the line numbers to the hl_lines argument placed right after the language short name. Note that line counts start at 1 , regardless of the starting line number specified as part of linenums . Example : ``` python hl_lines=\"2 3\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result : def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Highlighting inline code blocks \u00b6 When InlineHilite is enabled, inline code blocks can be highlighted by prefixing them with a shebang-like sequence, i.e. #! , directly followed by the language short name . Example : The `#!python range()` function is used to generate a sequence of numbers. Result : The range () function is used to generate a sequence of numbers. Adding keyboard keys \u00b6 When Keys is enabled, keyboard keys can be rendered with a simple syntax. Consult the Python Markdown Extensions documentation to learn about all available key codes. Example : ++ctrl+alt+del++ Result : Ctrl + Alt + Del Embedding external files \u00b6 Also known as transcludes or file transclusion in MultiMarkdown . When Snippets is enabled, content from other files can be embedded, which is especially useful to reference and embed the contents of source files directly into your project documentation. Example : ``` --8<--\u200b \".browserslistrc\" ``` Result : last 4 years Note that Snippets is not limited to code blocks, but can be used anywhere from a document to move repeating content to separate files, which is also explained in the official documentation . Customization \u00b6 Custom syntax theme \u00b6 Source \u00b7 Difficulty: easy If Pygments is used, Material for MkDocs provides the styles for code blocks , which are built with a custom and well-balanced palette that works equally well for both color schemes : --md-code-hl-number-color --md-code-hl-special-color --md-code-hl-function-color --md-code-hl-constant-color --md-code-hl-keyword-color --md-code-hl-string-color --md-code-hl-name-color --md-code-hl-operator-color --md-code-hl-punctuation-color --md-code-hl-comment-color --md-code-hl-generic-color --md-code-hl-variable-color Code block foreground, background and line highlight colors are defined via: --md-code-fg-color --md-code-bg-color --md-code-hl-color Let's say you want to change the color of \"strings\" . While there are several types of string tokens , Material for MkDocs assigns a single color to most of them. Create an additional stylesheet , and add: : root > * { --md-code-hl-string-color : #0FF1CE ; } If you want to tweak a specific type of string, i.e. `backticks` , you can lookup the specific class name in the syntax theme definition , and override it as part of your additional stylesheet: . highlight . sb { color : #0FF1CE ; }","title":"Code blocks"},{"location":"reference/code-blocks/#code-blocks","text":"Code blocks and examples are an essential part of technical project documentation. Material for MkDocs provides different ways to set up syntax highlighting for code blocks, either during build time using Pygments or during runtime using a JavaScript syntax highlighter.","title":"Code blocks"},{"location":"reference/code-blocks/#configuration","text":"","title":"Configuration"},{"location":"reference/code-blocks/#highlight","text":"Source \u00b7 Extension \u00b7 Supersedes: CodeHilite The Highlight extension, which is part of Python Markdown Extensions , integrates with Material for MkDocs and provides several options for configuring syntax highlighting of code blocks: use_pygments Default: true \u2013 This option allows to control whether highlighting should be carried out during build time by Pygments or runtime with a JavaScript highlighter. Remember to add the necessary additional stylesheets and JavaScript if you want to use the latter: Pygments markdown_extensions : - pymdownx.highlight - pymdownx.superfences JavaScript markdown_extensions : - pymdownx.highlight : use_pygments : false Syntax highlighting with Highlight.js Highlight.js can be integrated by creating an additional JavaScript file initializing the highlighter and including the respective stylesheet and JavaScript from a CDN serving Highlight.js in mkdocs.yml : docs/javascripts/config.js document $ . subscribe (() => { hljs . highlightAll () }) mkdocs.yml extra_javascript : - https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/highlight.min.js - javascripts/config.js extra_css : - https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.2/styles/default.min.css Note that Highlight.js has no affiliation with the Highlight extension. linenums Default: false \u2013 This option will add line numbers to all code blocks. If you wish to add line numbers to some , but not all code blocks, consult the section on adding line numbers later in this document, which also contains some tips on working with line numbers: markdown_extensions : - pymdownx.highlight : linenums : true linenums_style Default: table \u2013 The Highlight extension provides three ways to add line numbers, all of which are supported by Material for MkDocs. While table wraps a code block in a table, inline and pymdownx-inline render line numbers as part of the line itself: markdown_extensions : - pymdownx.highlight : linenums_style : pymdownx-inline Note that inline will put line numbers next to the actual code, which means that they will be included when selecting text with the cursor or copying a code block to the clipboard. Thus, the usage of table or pymdownx-inline is recommended. Material for MkDocs doesn't provide official support for the other options of this extension, so they may be supported but might yield unexpected results. Use them at your own risk.","title":"Highlight"},{"location":"reference/code-blocks/#inlinehilite","text":"Source \u00b7 Extension The InlineHilite extension, which is part of Python Markdown Extensions also integrates with Material for MkDocs and adds support for syntax highlighting of inline code blocks . It's built on top of the Highlight extension and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.inlinehilite See the section on inline code blocks for usage information.","title":"InlineHilite"},{"location":"reference/code-blocks/#keys","text":"Source \u00b7 Extension The Keys extension, which is part of Python Markdown Extensions , allows for inserting keyboard keys , e.g. Ctrl + Alt + Del , and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.keys","title":"Keys"},{"location":"reference/code-blocks/#superfences","text":"The SuperFences extension, which is also part of Python Markdown Extensions , allows for the nesting of code blocks inside other blocks , and is therefore strongly recommended: markdown_extensions : - pymdownx.superfences","title":"SuperFences"},{"location":"reference/code-blocks/#snippets","text":"The Snippets extension, which is also part of Python Markdown Extensions , allows to insert content from other files or other, regular content, and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.snippets","title":"Snippets"},{"location":"reference/code-blocks/#usage","text":"This section discusses how to use different syntax highlighting features with Pygments \u2013 the default highlighter \u2013 so they don't apply when using a JavaScript syntax highlighter.","title":"Usage"},{"location":"reference/code-blocks/#specifying-the-language","text":"Code blocks must be enclosed with two separate lines containing three backticks. To add code highlighting to those blocks, add the language short name directly after the opening block. See the list of available lexers to find the short name for a given language. Example : ``` python import tensorflow as tf ``` Result : import tensorflow as tf","title":"Specifying the language"},{"location":"reference/code-blocks/#adding-annotations","text":"Source \u00b7 Experimental \u00b7 Insiders only Annotations offer a comfortable and friendly way to attach explanations to arbitrary sections of code blocks by adding simple markers within block/inline comments that refer to items of a list following the code block, i.e. (1) , (2) , etc. Material for MkDocs detaches the list from the flow of the document, injects the content of each list item into a tooltip, and links each list marker to the corresponding tooltip. In order to opt-in to annotation support, a slightly different syntax is required \u2013 just add the respective language short code and the .annotate class, after the three backticks. Note that annotations can be placed anywhere in a code block where a comment for the language can be placed, which for JavaScript is // (1) and /* (2) */ , for Yaml # (3) , etc. Example : ``` { .js .annotate } document$.subscribe(function() { // (1) var tables = document.querySelectorAll(/* (2) */ \"article table\") tables.forEach(function(table) { new Tablesort(table) }) }) ``` 1. ... 2. ... Result : A demo is worth a thousand words \u2014 check it out at squidfunk.github.io/mkdocs-material-insiders Annotations require syntax highlighting with Pygments \u2013 they're currently not compatible with other JavaScript-based syntax highlighters. Support may be added later on.","title":"Adding annotations"},{"location":"reference/code-blocks/#adding-line-numbers","text":"Line numbers can be added to a code block by using the linenums=\"<start>\" option directly after the short name, whereas <start> represents the starting line number. A code block can start from a line number other than 1 , which allows splitting large code blocks for readability. Example : ``` python linenums=\"1\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result : 1 2 3 4 5 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Adding line numbers"},{"location":"reference/code-blocks/#highlighting-specific-lines","text":"Specific lines can be highlighted by passing the line numbers to the hl_lines argument placed right after the language short name. Note that line counts start at 1 , regardless of the starting line number specified as part of linenums . Example : ``` python hl_lines=\"2 3\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result : def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Highlighting specific lines"},{"location":"reference/code-blocks/#highlighting-inline-code-blocks","text":"When InlineHilite is enabled, inline code blocks can be highlighted by prefixing them with a shebang-like sequence, i.e. #! , directly followed by the language short name . Example : The `#!python range()` function is used to generate a sequence of numbers. Result : The range () function is used to generate a sequence of numbers.","title":"Highlighting inline code blocks"},{"location":"reference/code-blocks/#adding-keyboard-keys","text":"When Keys is enabled, keyboard keys can be rendered with a simple syntax. Consult the Python Markdown Extensions documentation to learn about all available key codes. Example : ++ctrl+alt+del++ Result : Ctrl + Alt + Del","title":"Adding keyboard keys"},{"location":"reference/code-blocks/#embedding-external-files","text":"Also known as transcludes or file transclusion in MultiMarkdown . When Snippets is enabled, content from other files can be embedded, which is especially useful to reference and embed the contents of source files directly into your project documentation. Example : ``` --8<--\u200b \".browserslistrc\" ``` Result : last 4 years Note that Snippets is not limited to code blocks, but can be used anywhere from a document to move repeating content to separate files, which is also explained in the official documentation .","title":"Embedding external files"},{"location":"reference/code-blocks/#customization","text":"","title":"Customization"},{"location":"reference/code-blocks/#custom-syntax-theme","text":"Source \u00b7 Difficulty: easy If Pygments is used, Material for MkDocs provides the styles for code blocks , which are built with a custom and well-balanced palette that works equally well for both color schemes : --md-code-hl-number-color --md-code-hl-special-color --md-code-hl-function-color --md-code-hl-constant-color --md-code-hl-keyword-color --md-code-hl-string-color --md-code-hl-name-color --md-code-hl-operator-color --md-code-hl-punctuation-color --md-code-hl-comment-color --md-code-hl-generic-color --md-code-hl-variable-color Code block foreground, background and line highlight colors are defined via: --md-code-fg-color --md-code-bg-color --md-code-hl-color Let's say you want to change the color of \"strings\" . While there are several types of string tokens , Material for MkDocs assigns a single color to most of them. Create an additional stylesheet , and add: : root > * { --md-code-hl-string-color : #0FF1CE ; } If you want to tweak a specific type of string, i.e. `backticks` , you can lookup the specific class name in the syntax theme definition , and override it as part of your additional stylesheet: . highlight . sb { color : #0FF1CE ; }","title":"Custom syntax theme"},{"location":"reference/content-tabs/","text":"Content tabs \u00b6 Sometimes, it's desirable to group alternative content under different tabs, e.g. when describing how to access an API from different languages or environments. Material for MkDocs allows for beautiful and functional tabs, grouping code blocks and other content. Configuration \u00b6 Tabbed \u00b6 Source \u00b7 Extension The Tabbed extension, which is part of Python Markdown Extensions , integrates with Material for MkDocs and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.tabbed SuperFences \u00b6 The SuperFences extension, which is also part of Python Markdown Extensions , allows for the nesting of code and content blocks inside tabs , and is therefore strongly recommended: markdown_extensions : - pymdownx.superfences Usage \u00b6 Grouping code blocks \u00b6 Code blocks are one of the primary targets to be grouped, and can be considered a special case of content tabs, as tabs with a single code block are always rendered without horizontal spacing. Example : === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` Result : C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Grouping other content \u00b6 When a content tab contains more than one code block, it is rendered with horizontal spacing. Vertical spacing is never added, but can be achieved by nesting tabs in other blocks. Example : === \"Unordered list\" * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci === \"Ordered list\" 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Result : Unordered list Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Ordered list Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Linking content tabs \u00b6 Source \u00b7 Experimental \u00b7 Insiders only When linking is enabled, all content tabs on a page will be linked and show the same active tab when the user clicks on a label. Add the following lines to mkdocs.yml : theme : features : - content.tabs.link Content tabs are linked based on their label, not offset. This means that all tabs with the same label will be activated when a user clicks a content tab regardless of order inside a container. Furthermore, this feature is fully integrated with instant loading and persisted across page loads. With linking Without linking Embedded content \u00b6 When SuperFences is enabled, content tabs can contain arbitrary nested content, including further content tabs, and can be nested in other blocks like admonitions , details or blockquotes: Example : !!! example === \"Unordered List\" _Example_ : ``` markdown * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci ``` _Result_: * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci === \"Ordered List\" _Example_: ``` markdown 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci ``` _Result_ : 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Result : Example Unordered List Example : * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci Result : Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Ordered List Example : 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Result : Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci","title":"Content tabs"},{"location":"reference/content-tabs/#content-tabs","text":"Sometimes, it's desirable to group alternative content under different tabs, e.g. when describing how to access an API from different languages or environments. Material for MkDocs allows for beautiful and functional tabs, grouping code blocks and other content.","title":"Content tabs"},{"location":"reference/content-tabs/#configuration","text":"","title":"Configuration"},{"location":"reference/content-tabs/#tabbed","text":"Source \u00b7 Extension The Tabbed extension, which is part of Python Markdown Extensions , integrates with Material for MkDocs and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.tabbed","title":"Tabbed"},{"location":"reference/content-tabs/#superfences","text":"The SuperFences extension, which is also part of Python Markdown Extensions , allows for the nesting of code and content blocks inside tabs , and is therefore strongly recommended: markdown_extensions : - pymdownx.superfences","title":"SuperFences"},{"location":"reference/content-tabs/#usage","text":"","title":"Usage"},{"location":"reference/content-tabs/#grouping-code-blocks","text":"Code blocks are one of the primary targets to be grouped, and can be considered a special case of content tabs, as tabs with a single code block are always rendered without horizontal spacing. Example : === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` Result : C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"Grouping code blocks"},{"location":"reference/content-tabs/#grouping-other-content","text":"When a content tab contains more than one code block, it is rendered with horizontal spacing. Vertical spacing is never added, but can be achieved by nesting tabs in other blocks. Example : === \"Unordered list\" * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci === \"Ordered list\" 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Result : Unordered list Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Ordered list Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci","title":"Grouping other content"},{"location":"reference/content-tabs/#linking-content-tabs","text":"Source \u00b7 Experimental \u00b7 Insiders only When linking is enabled, all content tabs on a page will be linked and show the same active tab when the user clicks on a label. Add the following lines to mkdocs.yml : theme : features : - content.tabs.link Content tabs are linked based on their label, not offset. This means that all tabs with the same label will be activated when a user clicks a content tab regardless of order inside a container. Furthermore, this feature is fully integrated with instant loading and persisted across page loads. With linking Without linking","title":"Linking content tabs"},{"location":"reference/content-tabs/#embedded-content","text":"When SuperFences is enabled, content tabs can contain arbitrary nested content, including further content tabs, and can be nested in other blocks like admonitions , details or blockquotes: Example : !!! example === \"Unordered List\" _Example_ : ``` markdown * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci ``` _Result_: * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci === \"Ordered List\" _Example_: ``` markdown 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci ``` _Result_ : 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Result : Example Unordered List Example : * Sed sagittis eleifend rutrum * Donec vitae suscipit est * Nulla tempor lobortis orci Result : Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci Ordered List Example : 1. Sed sagittis eleifend rutrum 2. Donec vitae suscipit est 3. Nulla tempor lobortis orci Result : Sed sagittis eleifend rutrum Donec vitae suscipit est Nulla tempor lobortis orci","title":"Embedded content"},{"location":"reference/data-tables/","text":"Data tables \u00b6 Material for MkDocs defines default styles for data tables \u2013 an excellent way of rendering tabular data in project documentation. Furthermore, customizations like sortable tables can be achieved with a third-party library and some additional JavaScript . Configuration \u00b6 None. Usage \u00b6 Using data tables \u00b6 Data tables can be used at any position in your project documentation and can contain arbitrary Markdown, including inline code blocks, as well as icons and emojis . Example : | Method | Description | | ----------- | ------------------------------------ | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Result : Method Description GET Fetch resource PUT Update resource DELETE Delete resource Column alignment \u00b6 If you want to align a specific column to the left , center or right , you can use the regular Markdown syntax placing : characters at the beginning and/or end of the divider. Left Example : | Method | Description | | :---------- | :----------------------------------- | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Result : Method Description GET Fetch resource PUT Update resource DELETE Delete resource Center Example : | Method | Description | | :---------: | :----------------------------------: | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Result : Method Description GET Fetch resource PUT Update resource DELETE Delete resource Right Example : | Method | Description | | ----------: | -----------------------------------: | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Result : Method Description GET Fetch resource PUT Update resource DELETE Delete resource Customization \u00b6 Sortable tables \u00b6 If you want to make data tables sortable, you can add tablesort , which is natively integrated with Material for MkDocs and will also work with instant loading via additional JavaScript : docs/javascripts/tables.js document $ . subscribe ( function () { var tables = document . querySelectorAll ( \"article table\" ) tables . forEach ( function ( table ) { new Tablesort ( table ) }) }) mkdocs.yml extra_javascript : - https://cdnjs.cloudflare.com/ajax/libs/tablesort/5.2.1/tablesort.min.js - javascripts/tables.js Note that tablesort provides alternative comparison implementations like numbers, dates, filesizes and month names. See the official documentation for more information. Example : | Method | Description | | ----------- | ------------------------------------ | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Result : Method Description GET Fetch resource PUT Update resource DELETE Delete resource var tables = document.querySelectorAll(\"article table\") new Tablesort(tables.item(tables.length - 1));","title":"Data tables"},{"location":"reference/data-tables/#data-tables","text":"Material for MkDocs defines default styles for data tables \u2013 an excellent way of rendering tabular data in project documentation. Furthermore, customizations like sortable tables can be achieved with a third-party library and some additional JavaScript .","title":"Data tables"},{"location":"reference/data-tables/#configuration","text":"None.","title":"Configuration"},{"location":"reference/data-tables/#usage","text":"","title":"Usage"},{"location":"reference/data-tables/#using-data-tables","text":"Data tables can be used at any position in your project documentation and can contain arbitrary Markdown, including inline code blocks, as well as icons and emojis . Example : | Method | Description | | ----------- | ------------------------------------ | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Result : Method Description GET Fetch resource PUT Update resource DELETE Delete resource","title":"Using data tables"},{"location":"reference/data-tables/#column-alignment","text":"If you want to align a specific column to the left , center or right , you can use the regular Markdown syntax placing : characters at the beginning and/or end of the divider. Left Example : | Method | Description | | :---------- | :----------------------------------- | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Result : Method Description GET Fetch resource PUT Update resource DELETE Delete resource Center Example : | Method | Description | | :---------: | :----------------------------------: | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Result : Method Description GET Fetch resource PUT Update resource DELETE Delete resource Right Example : | Method | Description | | ----------: | -----------------------------------: | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Result : Method Description GET Fetch resource PUT Update resource DELETE Delete resource","title":"Column alignment"},{"location":"reference/data-tables/#customization","text":"","title":"Customization"},{"location":"reference/data-tables/#sortable-tables","text":"If you want to make data tables sortable, you can add tablesort , which is natively integrated with Material for MkDocs and will also work with instant loading via additional JavaScript : docs/javascripts/tables.js document $ . subscribe ( function () { var tables = document . querySelectorAll ( \"article table\" ) tables . forEach ( function ( table ) { new Tablesort ( table ) }) }) mkdocs.yml extra_javascript : - https://cdnjs.cloudflare.com/ajax/libs/tablesort/5.2.1/tablesort.min.js - javascripts/tables.js Note that tablesort provides alternative comparison implementations like numbers, dates, filesizes and month names. See the official documentation for more information. Example : | Method | Description | | ----------- | ------------------------------------ | | `GET` | :material-check: Fetch resource | | `PUT` | :material-check-all: Update resource | | `DELETE` | :material-close: Delete resource | Result : Method Description GET Fetch resource PUT Update resource DELETE Delete resource var tables = document.querySelectorAll(\"article table\") new Tablesort(tables.item(tables.length - 1));","title":"Sortable tables"},{"location":"reference/diagrams/","text":"Diagrams \u00b6 Diagrams help to communicate complex relationships and interconnections between different technical components, and are a great addition to project documentation. Material for MkDocs integrates with Mermaid.js , a very popular and flexible solution for drawing diagrams. Configuration \u00b6 SuperFences \u00b6 Source \u00b7 Experimental \u00b7 Insiders only The SuperFences extension, which is part of Python Markdown Extensions , allows for adding custom fences , which can be used to render Mermaid.js diagrams with zero effort: markdown_extensions : - pymdownx.superfences : custom_fences : - name : mermaid class : mermaid-experimental format : !!python/name:pymdownx.superfences.fence_code_format No further configuration is necessary. Material for MkDocs will automatically load and initialize the Mermaid.js runtime when a page includes a fenced mermaid block . Furthermore: Works with instant loading without any additional effort Diagrams automatically use fonts and colors defined in mkdocs.yml 1 Fonts and colors can be customized with additional stylesheets Support for both, light and dark color schemes While it's also possible to integrate Mermaid.js using existing third-party plugins 2 , the new native integration is recommended as it ensures interoperability with all Material for MkDocs features. Usage \u00b6 Using diagrams \u00b6 Mermaid diagrams are written as code blocks with the help of the SuperFences extension. They must be enclosed with two separate lines containing three backticks: Example : ``` mermaid graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; ``` Result : See the official documentation to learn about all available diagram types. While all Mermaid.js features should work out-of-the-box, Material for MkDocs will currently only adjust the fonts and colors for flow charts, class and state diagrams. Support for further diagram types will be added gradually. \u21a9 If you don't want to use the native integration, mkdocs-mermaid2-plugin might be a good alternative. However, note that this plugin cannot be used in conjunction with the mkdocs-minify-plugin and doesn't adapt to dark mode. \u21a9","title":"Diagrams"},{"location":"reference/diagrams/#diagrams","text":"Diagrams help to communicate complex relationships and interconnections between different technical components, and are a great addition to project documentation. Material for MkDocs integrates with Mermaid.js , a very popular and flexible solution for drawing diagrams.","title":"Diagrams"},{"location":"reference/diagrams/#configuration","text":"","title":"Configuration"},{"location":"reference/diagrams/#superfences","text":"Source \u00b7 Experimental \u00b7 Insiders only The SuperFences extension, which is part of Python Markdown Extensions , allows for adding custom fences , which can be used to render Mermaid.js diagrams with zero effort: markdown_extensions : - pymdownx.superfences : custom_fences : - name : mermaid class : mermaid-experimental format : !!python/name:pymdownx.superfences.fence_code_format No further configuration is necessary. Material for MkDocs will automatically load and initialize the Mermaid.js runtime when a page includes a fenced mermaid block . Furthermore: Works with instant loading without any additional effort Diagrams automatically use fonts and colors defined in mkdocs.yml 1 Fonts and colors can be customized with additional stylesheets Support for both, light and dark color schemes While it's also possible to integrate Mermaid.js using existing third-party plugins 2 , the new native integration is recommended as it ensures interoperability with all Material for MkDocs features.","title":"SuperFences"},{"location":"reference/diagrams/#usage","text":"","title":"Usage"},{"location":"reference/diagrams/#using-diagrams","text":"Mermaid diagrams are written as code blocks with the help of the SuperFences extension. They must be enclosed with two separate lines containing three backticks: Example : ``` mermaid graph LR A[Start] --> B{Error?}; B -->|Yes| C[Hmm...]; C --> D[Debug]; D --> B; B ---->|No| E[Yay!]; ``` Result : See the official documentation to learn about all available diagram types. While all Mermaid.js features should work out-of-the-box, Material for MkDocs will currently only adjust the fonts and colors for flow charts, class and state diagrams. Support for further diagram types will be added gradually. \u21a9 If you don't want to use the native integration, mkdocs-mermaid2-plugin might be a good alternative. However, note that this plugin cannot be used in conjunction with the mkdocs-minify-plugin and doesn't adapt to dark mode. \u21a9","title":"Using diagrams"},{"location":"reference/footnotes/","text":"Footnotes \u00b6 Footnotes are a great way to add references to supplemental or additional information for a specific section of a document without interrupting the document flow. Material for MkDocs provides the ability to insert inline footnotes and render them at the bottom of the page. Configuration \u00b6 Footnotes \u00b6 Source \u00b7 Extension The Footnotes extension, which is part of the standard Markdown library, adds the ability to add inline footnotes to a document and can be enabled via mkdocs.yml : markdown_extensions : - footnotes Usage \u00b6 Adding footnote references \u00b6 A footnote reference must be enclosed in square brackets and must start with a caret ^ , directly followed by an arbitrary identifier, which is similar to the standard Markdown link syntax. Example : Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Result : Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Adding footnote content \u00b6 The footnote content must be declared with the same identifier as the reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink to the footnote reference is automatically added. on a single line \u00b6 Short statements can be written on the same line. Example : [ ^1 ]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Result : Jump to footnote at the bottom of the page on multiple lines \u00b6 Paragraphs can be written on the next line and must be indented by four spaces. Example : [ ^2 ]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result : Jump to footnote at the bottom of the page Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Footnotes"},{"location":"reference/footnotes/#footnotes","text":"Footnotes are a great way to add references to supplemental or additional information for a specific section of a document without interrupting the document flow. Material for MkDocs provides the ability to insert inline footnotes and render them at the bottom of the page.","title":"Footnotes"},{"location":"reference/footnotes/#configuration","text":"","title":"Configuration"},{"location":"reference/footnotes/#footnotes_1","text":"Source \u00b7 Extension The Footnotes extension, which is part of the standard Markdown library, adds the ability to add inline footnotes to a document and can be enabled via mkdocs.yml : markdown_extensions : - footnotes","title":"Footnotes"},{"location":"reference/footnotes/#usage","text":"","title":"Usage"},{"location":"reference/footnotes/#adding-footnote-references","text":"A footnote reference must be enclosed in square brackets and must start with a caret ^ , directly followed by an arbitrary identifier, which is similar to the standard Markdown link syntax. Example : Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Result : Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2","title":"Adding footnote references"},{"location":"reference/footnotes/#adding-footnote-content","text":"The footnote content must be declared with the same identifier as the reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink to the footnote reference is automatically added.","title":"Adding footnote content"},{"location":"reference/footnotes/#on-a-single-line","text":"Short statements can be written on the same line. Example : [ ^1 ]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Result : Jump to footnote at the bottom of the page","title":"on a single line"},{"location":"reference/footnotes/#on-multiple-lines","text":"Paragraphs can be written on the next line and must be indented by four spaces. Example : [ ^2 ]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result : Jump to footnote at the bottom of the page Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"on multiple lines"},{"location":"reference/formatting/","text":"Formatting \u00b6 Material for MkDocs provides support for several HTML elements that can be used to highlight sections of a document or apply specific formatting. Additionally, Critic Markup is supported, adding the ability to display suggested changes for a document. Configuration \u00b6 Critic \u00b6 Source \u00b7 Extension The Critic extension, which is part of Python Markdown Extensions , allows for the usage of Critic Markup to highlight changes in a document, and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.critic The following options are supported: mode Default: view \u2013 This option defines how the markup should be parsed, i.e. whether to just view all suggest changes, or alternatively accept or reject them: View changes markdown_extensions : - pymdownx.critic : mode : view Accept changes markdown_extensions : - pymdownx.critic : mode : accept Reject changes markdown_extensions : - pymdownx.critic : mode : reject BetterEm \u00b6 The BetterEm extension, which is part of Python Markdown Extensions , improves the handling of Markup to emphasize text (e.g. bold and italic ), and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.betterem : smart_enable : all Caret, Mark & Tilde \u00b6 The Caret , Mark and Tilde extensions, which are part of Python Markdown Extensions , allow for the highlighting of text , as well as handling sub- and superscripts : markdown_extensions : - pymdownx.caret - pymdownx.mark - pymdownx.tilde SmartSymbols \u00b6 The SmartSymbols extension, which is also part of Python Markdown Extensions , converts special characters into their corresponding symbols , and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.smartsymbols See the official documentation for a list of supported symbols. Usage \u00b6 Highlighting changes \u00b6 When Critic is enabled, Critic Markup can be used, which adds the ability to highlight suggested changes , as well as add inline comments to a document: Example : Text can be {\u200b--deleted--} and replacement text {\u200b++added++}. This can also be combined into {\u200b~~one~>a single~~} operation. {\u200b==Highlighting==} is also possible {\u200b>>and comments can be added inline<<}. {\u200b== Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. ==} Result : Text can be deleted and replacement text added . This can also be combined into one a single operation. Highlighting is also possible and comments can be added inline . Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. Highlighting text \u00b6 When the Caret, Mark & Tilde extensions are enabled, text can be highlighted with a nicer syntax than using the corresponding mark , ins and del HTML tags: Example : - ==This was marked== - ^^This was inserted^^ - ~~This was deleted~~ Result : This was marked This was inserted This was deleted Sub- and superscripts \u00b6 When the Caret & Tilde extensions are enabled, text can be sub- and superscripted with a nicer syntax than using the corresponding sub and sup HTML tags: Example : - H~2~0 - A^T^A Result : H 2 0 A T A","title":"Formatting"},{"location":"reference/formatting/#formatting","text":"Material for MkDocs provides support for several HTML elements that can be used to highlight sections of a document or apply specific formatting. Additionally, Critic Markup is supported, adding the ability to display suggested changes for a document.","title":"Formatting"},{"location":"reference/formatting/#configuration","text":"","title":"Configuration"},{"location":"reference/formatting/#critic","text":"Source \u00b7 Extension The Critic extension, which is part of Python Markdown Extensions , allows for the usage of Critic Markup to highlight changes in a document, and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.critic The following options are supported: mode Default: view \u2013 This option defines how the markup should be parsed, i.e. whether to just view all suggest changes, or alternatively accept or reject them: View changes markdown_extensions : - pymdownx.critic : mode : view Accept changes markdown_extensions : - pymdownx.critic : mode : accept Reject changes markdown_extensions : - pymdownx.critic : mode : reject","title":"Critic"},{"location":"reference/formatting/#betterem","text":"The BetterEm extension, which is part of Python Markdown Extensions , improves the handling of Markup to emphasize text (e.g. bold and italic ), and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.betterem : smart_enable : all","title":"BetterEm"},{"location":"reference/formatting/#caret-mark-tilde","text":"The Caret , Mark and Tilde extensions, which are part of Python Markdown Extensions , allow for the highlighting of text , as well as handling sub- and superscripts : markdown_extensions : - pymdownx.caret - pymdownx.mark - pymdownx.tilde","title":"Caret, Mark &amp; Tilde"},{"location":"reference/formatting/#smartsymbols","text":"The SmartSymbols extension, which is also part of Python Markdown Extensions , converts special characters into their corresponding symbols , and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.smartsymbols See the official documentation for a list of supported symbols.","title":"SmartSymbols"},{"location":"reference/formatting/#usage","text":"","title":"Usage"},{"location":"reference/formatting/#highlighting-changes","text":"When Critic is enabled, Critic Markup can be used, which adds the ability to highlight suggested changes , as well as add inline comments to a document: Example : Text can be {\u200b--deleted--} and replacement text {\u200b++added++}. This can also be combined into {\u200b~~one~>a single~~} operation. {\u200b==Highlighting==} is also possible {\u200b>>and comments can be added inline<<}. {\u200b== Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. ==} Result : Text can be deleted and replacement text added . This can also be combined into one a single operation. Highlighting is also possible and comments can be added inline . Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content.","title":"Highlighting changes"},{"location":"reference/formatting/#highlighting-text","text":"When the Caret, Mark & Tilde extensions are enabled, text can be highlighted with a nicer syntax than using the corresponding mark , ins and del HTML tags: Example : - ==This was marked== - ^^This was inserted^^ - ~~This was deleted~~ Result : This was marked This was inserted This was deleted","title":"Highlighting text"},{"location":"reference/formatting/#sub-and-superscripts","text":"When the Caret & Tilde extensions are enabled, text can be sub- and superscripted with a nicer syntax than using the corresponding sub and sup HTML tags: Example : - H~2~0 - A^T^A Result : H 2 0 A T A","title":"Sub- and superscripts"},{"location":"reference/icons-emojis/","text":"Icons + Emojis \u00b6 One of the best features of Material for MkDocs is the possibility to use more than 8.000 icons and thousands of emojis in your project documentation with practically zero additional effort. Furthermore, custom icons can be added and used in mkdocs.yml , documents and templates. Search \u00b6 Tip: Enter some keywords to find the perfect icon or emoji and click on the shortcode to copy it to your clipboard. Configuration \u00b6 Emoji \u00b6 Source \u00b7 Extension The Emoji extension, which is part of Python Markdown Extensions , adds the ability to integrate emojis and icons in the *.svg file format, which are inlined when building your site : markdown_extensions : - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg The following icon sets are bundled with Material for MkDocs: \u2013 Material Design \u2013 FontAwesome \u2013 Octicons You can also add additional icons . When using emojis, it's recommended to consult the official documentation of Python Markdown Extensions to learn about configuration options. Attribute List \u00b6 The Attribute List extension, which is part of the standard Markdown library, allows to add HTML attributes and CSS classes to Markdown elements , and can be enabled via mkdocs.yml markdown_extensions : - attr_list Usage \u00b6 Using emojis \u00b6 Emojis can be integrated in Markdown by putting the shortcode of the emoji between two colons. If you're using Twemoji (recommended), you can look up the shortcodes at Emojipedia . Example : :smile: Result : Using icons \u00b6 When Emoji is enabled, icons can be used similar to emojis, by referencing a valid path to any icon bundled with the theme, which are located in the .icons directory, and replacing / with - : Example : - :material-account-circle: \u2013 `.icons/material/account-circle.svg` - :fontawesome-regular-laugh-wink: \u2013 `.icons/fontawesome/regular/laugh-wink.svg` - :octicons-octoface-24: \u2013 `.icons/octicons/octoface-24.svg` Result : \u2013 .icons/material/account-circle.svg \u2013 .icons/fontawesome/regular/laugh-wink.svg :octicons-octoface-24: \u2013 .icons/octicons/octoface-24.svg with colors \u00b6 When the Attribute List extension is enabled, custom CSS classes and attributes can be added to icons by suffixing the icon with a special syntax. While HTML and CSS allow to use inline styles , it's always best to add an additional stylesheet and put styles into dedicated CSS classes: . medium { color : #00AB6C ; } . twitter { color : #1DA1F2 ; } . facebook { color : #4267B2 ; } Then, simply add the CSS class to the icon. .medium { color: #00AB6C; } .twitter { color: #1DA1F2; } .facebook { color: #4267B2; } Example : - :fontawesome-brands-medium:{ .medium } \u2013 Medium - :fontawesome-brands-twitter:{ .twitter } \u2013 Twitter - :fontawesome-brands-facebook:{ .facebook } \u2013 Facebook Result : \u2013 Medium \u2013 Twitter \u2013 Facebook with animations \u00b6 Similar to adding colors , it's just as easy to add CSS animations to icons by using an additional stylesheet , defining a @ keyframes rule and adding the dedicated CSS class to the icon: @ keyframes heart { 0 %, 40 %, 80 %, 100 % { transform : scale ( 1 ); } 20 %, 60 % { transform : scale ( 1.15 ); } } . heart { animation : heart 1000 ms infinite ; } Then, simply add the CSS class to the icon. Example : :octicons-heart-fill-24:{ .heart } Result : Customization \u00b6 Using icons in templates \u00b6 When you're extending the theme with partials or blocks, you can simply reference any icon that's bundled with the theme with Jinja's include function and wrap it with the twemoji class: < span class = \"twemoji\" > {% include \".icons/fontawesome/brands/twitter.svg\" %} </ span > This is exactly what Material for MkDocs does in its templates.","title":"Icons + Emojis"},{"location":"reference/icons-emojis/#icons-emojis","text":"One of the best features of Material for MkDocs is the possibility to use more than 8.000 icons and thousands of emojis in your project documentation with practically zero additional effort. Furthermore, custom icons can be added and used in mkdocs.yml , documents and templates.","title":"Icons + Emojis"},{"location":"reference/icons-emojis/#search","text":"Tip: Enter some keywords to find the perfect icon or emoji and click on the shortcode to copy it to your clipboard.","title":"Search"},{"location":"reference/icons-emojis/#configuration","text":"","title":"Configuration"},{"location":"reference/icons-emojis/#emoji","text":"Source \u00b7 Extension The Emoji extension, which is part of Python Markdown Extensions , adds the ability to integrate emojis and icons in the *.svg file format, which are inlined when building your site : markdown_extensions : - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg The following icon sets are bundled with Material for MkDocs: \u2013 Material Design \u2013 FontAwesome \u2013 Octicons You can also add additional icons . When using emojis, it's recommended to consult the official documentation of Python Markdown Extensions to learn about configuration options.","title":"Emoji"},{"location":"reference/icons-emojis/#attribute-list","text":"The Attribute List extension, which is part of the standard Markdown library, allows to add HTML attributes and CSS classes to Markdown elements , and can be enabled via mkdocs.yml markdown_extensions : - attr_list","title":"Attribute List"},{"location":"reference/icons-emojis/#usage","text":"","title":"Usage"},{"location":"reference/icons-emojis/#using-emojis","text":"Emojis can be integrated in Markdown by putting the shortcode of the emoji between two colons. If you're using Twemoji (recommended), you can look up the shortcodes at Emojipedia . Example : :smile: Result :","title":"Using emojis"},{"location":"reference/icons-emojis/#using-icons","text":"When Emoji is enabled, icons can be used similar to emojis, by referencing a valid path to any icon bundled with the theme, which are located in the .icons directory, and replacing / with - : Example : - :material-account-circle: \u2013 `.icons/material/account-circle.svg` - :fontawesome-regular-laugh-wink: \u2013 `.icons/fontawesome/regular/laugh-wink.svg` - :octicons-octoface-24: \u2013 `.icons/octicons/octoface-24.svg` Result : \u2013 .icons/material/account-circle.svg \u2013 .icons/fontawesome/regular/laugh-wink.svg :octicons-octoface-24: \u2013 .icons/octicons/octoface-24.svg","title":"Using icons"},{"location":"reference/icons-emojis/#with-colors","text":"When the Attribute List extension is enabled, custom CSS classes and attributes can be added to icons by suffixing the icon with a special syntax. While HTML and CSS allow to use inline styles , it's always best to add an additional stylesheet and put styles into dedicated CSS classes: . medium { color : #00AB6C ; } . twitter { color : #1DA1F2 ; } . facebook { color : #4267B2 ; } Then, simply add the CSS class to the icon. .medium { color: #00AB6C; } .twitter { color: #1DA1F2; } .facebook { color: #4267B2; } Example : - :fontawesome-brands-medium:{ .medium } \u2013 Medium - :fontawesome-brands-twitter:{ .twitter } \u2013 Twitter - :fontawesome-brands-facebook:{ .facebook } \u2013 Facebook Result : \u2013 Medium \u2013 Twitter \u2013 Facebook","title":"with colors"},{"location":"reference/icons-emojis/#with-animations","text":"Similar to adding colors , it's just as easy to add CSS animations to icons by using an additional stylesheet , defining a @ keyframes rule and adding the dedicated CSS class to the icon: @ keyframes heart { 0 %, 40 %, 80 %, 100 % { transform : scale ( 1 ); } 20 %, 60 % { transform : scale ( 1.15 ); } } . heart { animation : heart 1000 ms infinite ; } Then, simply add the CSS class to the icon. Example : :octicons-heart-fill-24:{ .heart } Result :","title":"with animations"},{"location":"reference/icons-emojis/#customization","text":"","title":"Customization"},{"location":"reference/icons-emojis/#using-icons-in-templates","text":"When you're extending the theme with partials or blocks, you can simply reference any icon that's bundled with the theme with Jinja's include function and wrap it with the twemoji class: < span class = \"twemoji\" > {% include \".icons/fontawesome/brands/twitter.svg\" %} </ span > This is exactly what Material for MkDocs does in its templates.","title":"Using icons in templates"},{"location":"reference/images/","text":"Images \u00b6 While images are first-class citizens of Markdown and part of the core syntax, it can be difficult to work with them. Material for MkDocs makes working with images more comfortable by providing styles for alignment and image captions. Configuration \u00b6 Attribute List \u00b6 The Attribute List extension, which is part of the standard Markdown library, allows to add HTML attributes and CSS classes to Markdown elements , and can be enabled via mkdocs.yml markdown_extensions : - attr_list Usage \u00b6 Image alignment \u00b6 When the Attribute List extension is enabled, images can be aligned by adding the respective alignment directions via the align attribute, i.e. align=left or align=right Left Example : ![ Placeholder ]( https://dummyimage.com/600x400/eee/aaa ){ align=left } Result : Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Right Example : ![ Placeholder ]( https://dummyimage.com/600x400/eee/aaa ){ align=right } Result : Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. If there's insufficient space to render the text next to the image, the image will stretch to the full width of the viewport, e.g. on mobile viewports. Image captions \u00b6 Sadly, the Markdown syntax doesn't provide native support for image captions, but it's always possible to resort to HTML. Using figure and figcaption , captions can be added to images. Example : < figure > < img src = \"https://dummyimage.com/600x400/eee/aaa\" width = \"300\" /> < figcaption > Image caption </ figcaption > </ figure > Result : Image caption Image lazy-loading \u00b6 Modern browsers provide native support for lazy-loading images through the loading attribute, which degrades to eager-loading in browsers without support. As with image alignment , if the Attribute List extension is enabled, images can be lazy-loaded by adding loading=lazy . Example : ![ Placeholder ]( https://dummyimage.com/600x400/eee/aaa ){ loading=lazy } Result :","title":"Images"},{"location":"reference/images/#images","text":"While images are first-class citizens of Markdown and part of the core syntax, it can be difficult to work with them. Material for MkDocs makes working with images more comfortable by providing styles for alignment and image captions.","title":"Images"},{"location":"reference/images/#configuration","text":"","title":"Configuration"},{"location":"reference/images/#attribute-list","text":"The Attribute List extension, which is part of the standard Markdown library, allows to add HTML attributes and CSS classes to Markdown elements , and can be enabled via mkdocs.yml markdown_extensions : - attr_list","title":"Attribute List"},{"location":"reference/images/#usage","text":"","title":"Usage"},{"location":"reference/images/#image-alignment","text":"When the Attribute List extension is enabled, images can be aligned by adding the respective alignment directions via the align attribute, i.e. align=left or align=right Left Example : ![ Placeholder ]( https://dummyimage.com/600x400/eee/aaa ){ align=left } Result : Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Right Example : ![ Placeholder ]( https://dummyimage.com/600x400/eee/aaa ){ align=right } Result : Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. If there's insufficient space to render the text next to the image, the image will stretch to the full width of the viewport, e.g. on mobile viewports.","title":"Image alignment"},{"location":"reference/images/#image-captions","text":"Sadly, the Markdown syntax doesn't provide native support for image captions, but it's always possible to resort to HTML. Using figure and figcaption , captions can be added to images. Example : < figure > < img src = \"https://dummyimage.com/600x400/eee/aaa\" width = \"300\" /> < figcaption > Image caption </ figcaption > </ figure > Result : Image caption","title":"Image captions"},{"location":"reference/images/#image-lazy-loading","text":"Modern browsers provide native support for lazy-loading images through the loading attribute, which degrades to eager-loading in browsers without support. As with image alignment , if the Attribute List extension is enabled, images can be lazy-loaded by adding loading=lazy . Example : ![ Placeholder ]( https://dummyimage.com/600x400/eee/aaa ){ loading=lazy } Result :","title":"Image lazy-loading"},{"location":"reference/lists/","text":"Lists \u00b6 Material for MkDocs supports several flavors of lists that cater to different use cases, including unordered lists and ordered lists , which are supported through standard Markdown, as well as definition lists and task lists , which are supported through extensions. Configuration \u00b6 Definition List \u00b6 Source \u00b7 Extension The Definition List extension, which is part of the standard Markdown library, adds the ability to add definitions lists to a document and can be enabled via mkdocs.yml : markdown_extensions : - def_list Tasklist \u00b6 Source \u00b7 Extension The Tasklist extension, which is part of Python Markdown Extensions , adds support for lists with styled checkboxes, and provides several options for configuring the style: custom_checkbox Default: false \u00b7 This option toggles the rendering style of checkboxes, replacing native checkbox styles with beautiful icons, and is therefore strongly recommended : markdown_extensions : - pymdownx.tasklist : custom_checkbox : true clickable_checkbox Default: false \u00b7 This option toggles whether checkboxes are clickable. As the state is not persisted, the use of this option is rather discouraged from a user experience perspective: markdown_extensions : - pymdownx.tasklist : clickable_checkbox : true Usage \u00b6 Using unordered lists \u00b6 An unordered list can be written by prefixing a line with a - , * or + list marker, all of which can be used interchangeably. Furthermore, all flavors of lists can be nested inside each other. Example : - Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. * Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. * Nam vulputate tincidunt fringilla. * Nullam dignissim ultrices urna non auctor. Result : Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Using ordered lists \u00b6 An ordered list must start with a number immediately followed by a dot. The numbers do not need to be consecutive and can be all set to 1. , as they will be re-numbered when rendered. Example : 1. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. 1. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. 2. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. 1. Mauris dictum mi lacus 2. Ut sit amet placerat ante 3. Suspendisse ac eros arcu Result : Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Using definition lists \u00b6 Definition lists are a ideal for describing arbitrary key-value pairs, e.g. the parameters of functions or modules, as used within this documentation to describe extension or plugin parameters. Example : `Lorem ipsum dolor sit amet` : Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. `Cras arcu libero` : Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Result : Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Using tasklists \u00b6 When the Tasklist extension is enabled, unordered list items can be prefixed with [ ] to render an unchecked or [x] to render a checked checkbox. Example : - [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit - [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [ ] Praesent sed risus massa - [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Result : Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque","title":"Lists"},{"location":"reference/lists/#lists","text":"Material for MkDocs supports several flavors of lists that cater to different use cases, including unordered lists and ordered lists , which are supported through standard Markdown, as well as definition lists and task lists , which are supported through extensions.","title":"Lists"},{"location":"reference/lists/#configuration","text":"","title":"Configuration"},{"location":"reference/lists/#definition-list","text":"Source \u00b7 Extension The Definition List extension, which is part of the standard Markdown library, adds the ability to add definitions lists to a document and can be enabled via mkdocs.yml : markdown_extensions : - def_list","title":"Definition List"},{"location":"reference/lists/#tasklist","text":"Source \u00b7 Extension The Tasklist extension, which is part of Python Markdown Extensions , adds support for lists with styled checkboxes, and provides several options for configuring the style: custom_checkbox Default: false \u00b7 This option toggles the rendering style of checkboxes, replacing native checkbox styles with beautiful icons, and is therefore strongly recommended : markdown_extensions : - pymdownx.tasklist : custom_checkbox : true clickable_checkbox Default: false \u00b7 This option toggles whether checkboxes are clickable. As the state is not persisted, the use of this option is rather discouraged from a user experience perspective: markdown_extensions : - pymdownx.tasklist : clickable_checkbox : true","title":"Tasklist"},{"location":"reference/lists/#usage","text":"","title":"Usage"},{"location":"reference/lists/#using-unordered-lists","text":"An unordered list can be written by prefixing a line with a - , * or + list marker, all of which can be used interchangeably. Furthermore, all flavors of lists can be nested inside each other. Example : - Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. * Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. * Nam vulputate tincidunt fringilla. * Nullam dignissim ultrices urna non auctor. Result : Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor.","title":"Using unordered lists"},{"location":"reference/lists/#using-ordered-lists","text":"An ordered list must start with a number immediately followed by a dot. The numbers do not need to be consecutive and can be all set to 1. , as they will be re-numbered when rendered. Example : 1. Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. 1. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. 2. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. 1. Mauris dictum mi lacus 2. Ut sit amet placerat ante 3. Suspendisse ac eros arcu Result : Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu","title":"Using ordered lists"},{"location":"reference/lists/#using-definition-lists","text":"Definition lists are a ideal for describing arbitrary key-value pairs, e.g. the parameters of functions or modules, as used within this documentation to describe extension or plugin parameters. Example : `Lorem ipsum dolor sit amet` : Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. `Cras arcu libero` : Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Result : Lorem ipsum dolor sit amet Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Cras arcu libero Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor.","title":"Using definition lists"},{"location":"reference/lists/#using-tasklists","text":"When the Tasklist extension is enabled, unordered list items can be prefixed with [ ] to render an unchecked or [x] to render a checked checkbox. Example : - [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit - [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [ ] Praesent sed risus massa - [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Result : Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque","title":"Using tasklists"},{"location":"reference/mathjax/","text":"MathJax \u00b6 MathJax is a beautiful and accessible way to display mathematical content in the browser, allows for writing formulas in different notations, including LaTeX , MathML and AsciiMath , and can be easily integrated with Material for MkDocs. Configuration \u00b6 Arithmatex \u00b6 Source \u00b7 Extension The Arithmatex extension, which is part of of Python Markdown Extensions , allows the rendering of block and inline block equations, and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.arithmatex : generic : true Besides enabling the extension in mkdocs.yml , a MathJax configuration and the JavaScript runtime need to be included, which can be done with additional JavaScript : docs/javascripts/config.js window . MathJax = { tex : { inlineMath : [[ \"\\\\(\" , \"\\\\)\" ]], displayMath : [[ \"\\\\[\" , \"\\\\]\" ]], processEscapes : true , processEnvironments : true }, options : { ignoreHtmlClass : \".*|\" , processHtmlClass : \"arithmatex\" } }; document $ . subscribe (() => { MathJax . typesetPromise () }) mkdocs.yml extra_javascript : - javascripts/config.js - https://polyfill.io/v3/polyfill.min.js?features=es6 - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js MathJax can be configured in many different ways, for which Material for MkDocs might not provide native support. See the official documentation for more information. Using MathJax with instant loading There's no additional effort necessary to integrate MathJax 3 with instant loading \u2013 it's expected to work straight away. However, a previous version of this document explained how to integrate Material for MkDocs with MathJax 2 , which doesn't exhibit this behavior. It's therefore highly recommended to switch to MathJax 3 . window.MathJax = { tex: { inlineMath: [[\"\\\\(\", \"\\\\)\"]], displayMath: [[\"\\\\[\", \"\\\\]\"]], processEscapes: true, processEnvironments: true }, options: { ignoreHtmlClass: \".*|\", processHtmlClass: \"arithmatex\" } }; Usage \u00b6 Using block syntax \u00b6 Blocks must be enclosed in $$ ... $$ or \\[ ... \\] on separate lines: Example : $$ \\operatorname {ker} f = \\{ g \\in G:f ( g )= e_{H} \\} { \\mbox {.}} $$ Result : \\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\] Using inline block syntax \u00b6 Inline blocks must be enclosed in $ ... $ or \\( ... \\) : Example : The homomorphism $ f $ is injective if and only if its kernel is only the singleton set $ e_G $ , because otherwise $ \\exists a,b \\in G $ with $ a \\neq b $ such that $ f ( a )= f ( b ) $ . Result : The homomorphism \\(f\\) is injective if and only if its kernel is only the singleton set \\(e_G\\) , because otherwise \\(\\exists a,b\\in G\\) with \\(a\\neq b\\) such that \\(f(a)=f(b)\\) .","title":"MathJax"},{"location":"reference/mathjax/#mathjax","text":"MathJax is a beautiful and accessible way to display mathematical content in the browser, allows for writing formulas in different notations, including LaTeX , MathML and AsciiMath , and can be easily integrated with Material for MkDocs.","title":"MathJax"},{"location":"reference/mathjax/#configuration","text":"","title":"Configuration"},{"location":"reference/mathjax/#arithmatex","text":"Source \u00b7 Extension The Arithmatex extension, which is part of of Python Markdown Extensions , allows the rendering of block and inline block equations, and can be enabled via mkdocs.yml : markdown_extensions : - pymdownx.arithmatex : generic : true Besides enabling the extension in mkdocs.yml , a MathJax configuration and the JavaScript runtime need to be included, which can be done with additional JavaScript : docs/javascripts/config.js window . MathJax = { tex : { inlineMath : [[ \"\\\\(\" , \"\\\\)\" ]], displayMath : [[ \"\\\\[\" , \"\\\\]\" ]], processEscapes : true , processEnvironments : true }, options : { ignoreHtmlClass : \".*|\" , processHtmlClass : \"arithmatex\" } }; document $ . subscribe (() => { MathJax . typesetPromise () }) mkdocs.yml extra_javascript : - javascripts/config.js - https://polyfill.io/v3/polyfill.min.js?features=es6 - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js MathJax can be configured in many different ways, for which Material for MkDocs might not provide native support. See the official documentation for more information. Using MathJax with instant loading There's no additional effort necessary to integrate MathJax 3 with instant loading \u2013 it's expected to work straight away. However, a previous version of this document explained how to integrate Material for MkDocs with MathJax 2 , which doesn't exhibit this behavior. It's therefore highly recommended to switch to MathJax 3 . window.MathJax = { tex: { inlineMath: [[\"\\\\(\", \"\\\\)\"]], displayMath: [[\"\\\\[\", \"\\\\]\"]], processEscapes: true, processEnvironments: true }, options: { ignoreHtmlClass: \".*|\", processHtmlClass: \"arithmatex\" } };","title":"Arithmatex"},{"location":"reference/mathjax/#usage","text":"","title":"Usage"},{"location":"reference/mathjax/#using-block-syntax","text":"Blocks must be enclosed in $$ ... $$ or \\[ ... \\] on separate lines: Example : $$ \\operatorname {ker} f = \\{ g \\in G:f ( g )= e_{H} \\} { \\mbox {.}} $$ Result : \\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\]","title":"Using block syntax"},{"location":"reference/mathjax/#using-inline-block-syntax","text":"Inline blocks must be enclosed in $ ... $ or \\( ... \\) : Example : The homomorphism $ f $ is injective if and only if its kernel is only the singleton set $ e_G $ , because otherwise $ \\exists a,b \\in G $ with $ a \\neq b $ such that $ f ( a )= f ( b ) $ . Result : The homomorphism \\(f\\) is injective if and only if its kernel is only the singleton set \\(e_G\\) , because otherwise \\(\\exists a,b\\in G\\) with \\(a\\neq b\\) such that \\(f(a)=f(b)\\) .","title":"Using inline block syntax"},{"location":"reference/meta-tags/","text":"Meta tags \u00b6 In HTML, meta tags allow to provide additional metadata for a document, e.g. page titles and descriptions, additional assets to be loaded, and Open Graph data. While arbitrary metadata can always be added via customization , some common meta tags can be configured. Configuration \u00b6 Metadata \u00b6 The Metadata extension, which is part of the standard Markdown library, adds the ability to add front matter to a document and can be enabled via mkdocs.yml : markdown_extensions : - meta Front matter is written as a series of key-value pairs at the beginning of the Markdown document, delimited by a blank line which ends the YAML context. Usage \u00b6 Setting the page title \u00b6 If the Metadata extension is enabled, the page title can be overridden on a per-document basis with custom front matter: --- title: Lorem ipsum dolor sit amet --- # Document title ... This will set the title tag inside the document head for the current page to the provided value. Note that the site title is appended using a dash as a separator, which is the default behavior. Setting the page description \u00b6 If the Metadata extension is enabled, the page description can also be overridden on a per-document basis with custom front matter: --- description: Nullam urna elit, malesuada eget finibus ut, ac tortor. --- # Document title ... This will set the meta tag containing the site description inside the document head for the current page to the provided value. Adding a web app manifest \u00b6 A web app manifest is a simple JSON file that specifies how your web application should behave when installed on the user's mobile device or desktop, which can be set via mkdocs.yml : extra : manifest : manifest.webmanifest Customization \u00b6 Custom meta tags \u00b6 on all pages \u00b6 In order to add custom meta tags to your document, you can extend the theme and simply override the extrahead block , e.g. to add indexing policies for search engines: {% block extrahead %} < meta property = \"robots\" content = \"noindex, nofollow\" /> {% endblock %} on a single page \u00b6 If you want to set a meta tag on a single page, or want to set different values for different pages, you can use the page.meta object inside your template override, e.g.: {% block extrahead %} {% if page and page.meta and page.meta.robots %} < meta property = \"robots\" content = \"{{ page.meta.robots }}\" /> {% else %} < meta property = \"robots\" content = \"index, follow\" /> {% endif %} {% endblock %} You can now use robots exactly like title and description to set values. Note that in this case, the template defines an else branch, which would set a default if none was given. Social meta tags \u00b6 Some further examples, including Open Graph and Twitter Cards : Open Graph {% block extrahead %} {% set title = config.site_name %} {% if page and page.meta and page.meta.title %} {% set title = title ~ \" - \" ~ page.meta.title %} {% elif page and page.title and not page.is_homepage %} {% set title = title ~ \" - \" ~ page.title | striptags %} {% endif %} < meta property = \"og:type\" content = \"website\" /> < meta property = \"og:title\" content = \"{{ title }}\" /> < meta property = \"og:description\" content = \"{{ config.site_description }}\" /> < meta property = \"og:url\" content = \"{{ page.canonical_url }}\" /> < meta property = \"og:image\" content = \"<url>\" /> < meta property = \"og:image:type\" content = \"image/png\" /> < meta property = \"og:image:width\" content = \"1200\" /> < meta property = \"og:image:height\" content = \"630\" /> {% endblock %} Twitter Cards {% block extrahead %} {% set title = config.site_name %} {% if page and page.meta and page.meta.title %} {% set title = title ~ \" - \" ~ page.meta.title %} {% elif page and page.title and not page.is_homepage %} {% set title = title ~ \" - \" ~ page.title | striptags %} {% endif %} < meta name = \"twitter:card\" content = \"summary_large_image\" /> < meta name = \"twitter:site\" content = \"<username>\" /> < meta name = \"twitter:creator\" content = \"<username>\" /> < meta name = \"twitter:title\" content = \"{{ title }}\" /> < meta name = \"twitter:description\" content = \"{{ config.site_description }}\" /> < meta name = \"twitter:image\" content = \"<url>\" /> {% endblock %}","title":"Meta tags"},{"location":"reference/meta-tags/#meta-tags","text":"In HTML, meta tags allow to provide additional metadata for a document, e.g. page titles and descriptions, additional assets to be loaded, and Open Graph data. While arbitrary metadata can always be added via customization , some common meta tags can be configured.","title":"Meta tags"},{"location":"reference/meta-tags/#configuration","text":"","title":"Configuration"},{"location":"reference/meta-tags/#metadata","text":"The Metadata extension, which is part of the standard Markdown library, adds the ability to add front matter to a document and can be enabled via mkdocs.yml : markdown_extensions : - meta Front matter is written as a series of key-value pairs at the beginning of the Markdown document, delimited by a blank line which ends the YAML context.","title":"Metadata"},{"location":"reference/meta-tags/#usage","text":"","title":"Usage"},{"location":"reference/meta-tags/#setting-the-page-title","text":"If the Metadata extension is enabled, the page title can be overridden on a per-document basis with custom front matter: --- title: Lorem ipsum dolor sit amet --- # Document title ... This will set the title tag inside the document head for the current page to the provided value. Note that the site title is appended using a dash as a separator, which is the default behavior.","title":"Setting the page title"},{"location":"reference/meta-tags/#setting-the-page-description","text":"If the Metadata extension is enabled, the page description can also be overridden on a per-document basis with custom front matter: --- description: Nullam urna elit, malesuada eget finibus ut, ac tortor. --- # Document title ... This will set the meta tag containing the site description inside the document head for the current page to the provided value.","title":"Setting the page description"},{"location":"reference/meta-tags/#adding-a-web-app-manifest","text":"A web app manifest is a simple JSON file that specifies how your web application should behave when installed on the user's mobile device or desktop, which can be set via mkdocs.yml : extra : manifest : manifest.webmanifest","title":"Adding a web app manifest"},{"location":"reference/meta-tags/#customization","text":"","title":"Customization"},{"location":"reference/meta-tags/#custom-meta-tags","text":"","title":"Custom meta tags"},{"location":"reference/meta-tags/#on-all-pages","text":"In order to add custom meta tags to your document, you can extend the theme and simply override the extrahead block , e.g. to add indexing policies for search engines: {% block extrahead %} < meta property = \"robots\" content = \"noindex, nofollow\" /> {% endblock %}","title":"on all pages"},{"location":"reference/meta-tags/#on-a-single-page","text":"If you want to set a meta tag on a single page, or want to set different values for different pages, you can use the page.meta object inside your template override, e.g.: {% block extrahead %} {% if page and page.meta and page.meta.robots %} < meta property = \"robots\" content = \"{{ page.meta.robots }}\" /> {% else %} < meta property = \"robots\" content = \"index, follow\" /> {% endif %} {% endblock %} You can now use robots exactly like title and description to set values. Note that in this case, the template defines an else branch, which would set a default if none was given.","title":"on a single page"},{"location":"reference/meta-tags/#social-meta-tags","text":"Some further examples, including Open Graph and Twitter Cards : Open Graph {% block extrahead %} {% set title = config.site_name %} {% if page and page.meta and page.meta.title %} {% set title = title ~ \" - \" ~ page.meta.title %} {% elif page and page.title and not page.is_homepage %} {% set title = title ~ \" - \" ~ page.title | striptags %} {% endif %} < meta property = \"og:type\" content = \"website\" /> < meta property = \"og:title\" content = \"{{ title }}\" /> < meta property = \"og:description\" content = \"{{ config.site_description }}\" /> < meta property = \"og:url\" content = \"{{ page.canonical_url }}\" /> < meta property = \"og:image\" content = \"<url>\" /> < meta property = \"og:image:type\" content = \"image/png\" /> < meta property = \"og:image:width\" content = \"1200\" /> < meta property = \"og:image:height\" content = \"630\" /> {% endblock %} Twitter Cards {% block extrahead %} {% set title = config.site_name %} {% if page and page.meta and page.meta.title %} {% set title = title ~ \" - \" ~ page.meta.title %} {% elif page and page.title and not page.is_homepage %} {% set title = title ~ \" - \" ~ page.title | striptags %} {% endif %} < meta name = \"twitter:card\" content = \"summary_large_image\" /> < meta name = \"twitter:site\" content = \"<username>\" /> < meta name = \"twitter:creator\" content = \"<username>\" /> < meta name = \"twitter:title\" content = \"{{ title }}\" /> < meta name = \"twitter:description\" content = \"{{ config.site_description }}\" /> < meta name = \"twitter:image\" content = \"<url>\" /> {% endblock %}","title":"Social meta tags"},{"location":"reference/variables/","text":"Variables \u00b6 Macros and variables are powerful tools to parametrize Markdown files, as they allow to perform Jinja templating directly from Markdown. This is especially useful to include technical data from other files and add central variables via mkdocs.yml . Configuration \u00b6 Macros \u00b6 The macros plugin adds support to reference variables and call macros and supports Jinja templating directly from Markdown. It can be installed with pip : pip install mkdocs-macros-plugin Then, add the following to mkdocs.yml : plugins : - macros Usage \u00b6 Using predefined variables \u00b6 A set of predefined variables is enabled by default and can be used from Markdown, including data from mkdocs.yml . More specifically, predefined variables fall into the following categories: config.* : configuration parameters from mkdocs.yml page.* : metadata and content of current page navigation.* : list of all pages and sections environment.* : underlying operating system git.* : git-related information, if available Example : Welcome to {{ config.site_name }}! Result : Welcome to Material for MkDocs! A list of all predefined variables can be printed with: {{ macros_info() }} Using custom variables \u00b6 All data defined under extra in mkdocs.yml is automatically exposed as a variable and can be used from the template. This enables centralized parameter storage and management. Example : docs/page.md The unit price is {{ unit.price }} mkdocs.yml extra : unit : price : 12.50 Result : The unit price is 12.50. Using variables in snippets \u00b6 The macros plugin can be used to allow variables in snippets, which is not possible with the Snippets extension alone. Add the snippets location to the plugin configuration in mkdocs.yml : plugins : - search - macros : include_dir : snippets In your Markdown file, include snippets with Jinja's include function: {% include \"definitions.md\" %} Example : snippets/definitions.md The unit price is {{ page.meta.unit.price }} docs/page-1.md --- unit: price: 12.50 --- {% include \"definitions.md\" %} docs/page-2.md --- unit: price: 25.00 --- {% include \"definitions.md\" %} Customization \u00b6 Custom macros \u00b6 The macros plugin allows to define custom macros, which can then be used from Markdown files. See the official documentation for more information how to define custom macros.","title":"Variables"},{"location":"reference/variables/#variables","text":"Macros and variables are powerful tools to parametrize Markdown files, as they allow to perform Jinja templating directly from Markdown. This is especially useful to include technical data from other files and add central variables via mkdocs.yml .","title":"Variables"},{"location":"reference/variables/#configuration","text":"","title":"Configuration"},{"location":"reference/variables/#macros","text":"The macros plugin adds support to reference variables and call macros and supports Jinja templating directly from Markdown. It can be installed with pip : pip install mkdocs-macros-plugin Then, add the following to mkdocs.yml : plugins : - macros","title":"Macros"},{"location":"reference/variables/#usage","text":"","title":"Usage"},{"location":"reference/variables/#using-predefined-variables","text":"A set of predefined variables is enabled by default and can be used from Markdown, including data from mkdocs.yml . More specifically, predefined variables fall into the following categories: config.* : configuration parameters from mkdocs.yml page.* : metadata and content of current page navigation.* : list of all pages and sections environment.* : underlying operating system git.* : git-related information, if available Example : Welcome to {{ config.site_name }}! Result : Welcome to Material for MkDocs! A list of all predefined variables can be printed with: {{ macros_info() }}","title":"Using predefined variables"},{"location":"reference/variables/#using-custom-variables","text":"All data defined under extra in mkdocs.yml is automatically exposed as a variable and can be used from the template. This enables centralized parameter storage and management. Example : docs/page.md The unit price is {{ unit.price }} mkdocs.yml extra : unit : price : 12.50 Result : The unit price is 12.50.","title":"Using custom variables"},{"location":"reference/variables/#using-variables-in-snippets","text":"The macros plugin can be used to allow variables in snippets, which is not possible with the Snippets extension alone. Add the snippets location to the plugin configuration in mkdocs.yml : plugins : - search - macros : include_dir : snippets In your Markdown file, include snippets with Jinja's include function: {% include \"definitions.md\" %} Example : snippets/definitions.md The unit price is {{ page.meta.unit.price }} docs/page-1.md --- unit: price: 12.50 --- {% include \"definitions.md\" %} docs/page-2.md --- unit: price: 25.00 --- {% include \"definitions.md\" %}","title":"Using variables in snippets"},{"location":"reference/variables/#customization","text":"","title":"Customization"},{"location":"reference/variables/#custom-macros","text":"The macros plugin allows to define custom macros, which can then be used from Markdown files. See the official documentation for more information how to define custom macros.","title":"Custom macros"},{"location":"setup/adding-a-comment-system/","text":"Adding a comment system \u00b6 Material for MkDocs is natively integrated with Disqus , a comment system that provides a wide range of features like social integrations, user profiles, as well as spam and moderation tools. Of course, other comment systems can be integrated, too. Configuration \u00b6 Disqus \u00b6 Source \u00b7 Default: none First, ensure you've set site_url in mkdocs.yml . Then, to integrate Material for MkDocs with Disqus , create an account and a site giving you a shortname , and add it to mkdocs.yml : extra : disqus : <shortname> This will insert a comment system on every page, except the index page . Customization \u00b6 Selective integration \u00b6 Source \u00b7 Metadata \u00b7 Difficulty: easy If the Metadata extension is enabled, you can disable or enable Disqus for specific pages by adding the following to the front matter of a page: Enable Disqus --- disqus: <shortname> --- # Document title ... Disable Disqus --- disqus: \"\" --- # Document title ... Other comment systems \u00b6 Source \u00b7 Difficulty: easy In order to integrate another JavaScript-based comment system provider, you can extend the theme and override the disqus block : {% block disqus %} <!-- Add custom comment system integration here --> {% endblock %}","title":"Adding a comment system"},{"location":"setup/adding-a-comment-system/#adding-a-comment-system","text":"Material for MkDocs is natively integrated with Disqus , a comment system that provides a wide range of features like social integrations, user profiles, as well as spam and moderation tools. Of course, other comment systems can be integrated, too.","title":"Adding a comment system"},{"location":"setup/adding-a-comment-system/#configuration","text":"","title":"Configuration"},{"location":"setup/adding-a-comment-system/#disqus","text":"Source \u00b7 Default: none First, ensure you've set site_url in mkdocs.yml . Then, to integrate Material for MkDocs with Disqus , create an account and a site giving you a shortname , and add it to mkdocs.yml : extra : disqus : <shortname> This will insert a comment system on every page, except the index page .","title":"Disqus"},{"location":"setup/adding-a-comment-system/#customization","text":"","title":"Customization"},{"location":"setup/adding-a-comment-system/#selective-integration","text":"Source \u00b7 Metadata \u00b7 Difficulty: easy If the Metadata extension is enabled, you can disable or enable Disqus for specific pages by adding the following to the front matter of a page: Enable Disqus --- disqus: <shortname> --- # Document title ... Disable Disqus --- disqus: \"\" --- # Document title ...","title":"Selective integration"},{"location":"setup/adding-a-comment-system/#other-comment-systems","text":"Source \u00b7 Difficulty: easy In order to integrate another JavaScript-based comment system provider, you can extend the theme and override the disqus block : {% block disqus %} <!-- Add custom comment system integration here --> {% endblock %}","title":"Other comment systems"},{"location":"setup/adding-a-git-repository/","text":"Adding a git repository \u00b6 If your documentation is related to source code, Material for MkDocs provides the ability to display information to the project's repository as part of the static site, including statistics like stars and forks. Furthermore, individual documents can be linked to specific source files. Configuration \u00b6 In order to display a link to the repository of your project as part of your documentation, set repo_url in mkdocs.yml to the public URL of your repository, e.g.: repo_url : https://github.com/squidfunk/mkdocs-material The link to the repository will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes. Additionally, for GitHub and GitLab, the number of stars and forks is automatically requested and rendered for public repositories . Repository name \u00b6 Source \u00b7 Default: automatically set to GitHub , GitLab or Bitbucket MkDocs will infer the source provider by examining the URL and try to set the repository name automatically. If you wish to customize the name, set repo_name in mkdocs.yml : repo_name : squidfunk/mkdocs-material Repository icon \u00b6 Source \u00b7 Default: fontawesome/brands/git-alt While the default repository icon is a generic git icon, it can be set to any icon bundled with the theme by referencing a valid icon path in mkdocs.yml : theme : icon : repo : fontawesome/brands/git-alt Some popular choices: \u2013 fontawesome/brands/git \u2013 fontawesome/brands/git-alt \u2013 fontawesome/brands/git-square \u2013 fontawesome/brands/github \u2013 fontawesome/brands/github-alt \u2013 fontawesome/brands/github-square \u2013 fontawesome/brands/gitlab \u2013 fontawesome/brands/gitkraken \u2013 fontawesome/brands/bitbucket \u2013 fontawesome/solid/trash Edit button \u00b6 Source \u00b7 Default: automatically set If the repository URL points to a GitHub , GitLab or Bitbucket repository, an edit button is displayed at the top of each document. This behavior can be changed by setting edit_uri in mkdocs.yml : Customize edit path edit_uri : edit/master/docs/ Hide edit button edit_uri : \"\" Revision date \u00b6 Source \u00b7 Plugin The git-revision-date plugin adds support for displaying the date a document was last updated at the bottom of each page. It can be installed with pip : pip install mkdocs-git-revision-date-plugin Then, add the following to mkdocs.yml : plugins : - git-revision-date The following options are supported: enabled_if_env Default: none \u2013 When specified the data will only be extracted from git if the environment variable exists. This makes it possible to disable extraction for cases when the repository is not available: plugins : - git-revision-date : enabled_if_env : CI Material for MkDocs doesn't provide official support for the other options of this plugin, so they may be supported but might yield unexpected results. Use them at your own risk. Revision date, localized \u00b6 Source \u00b7 Plugin Similarly, the git-revision-date-localized plugin adds support for adding a localized updated at and created at date at the bottom of each page. It can be installed with pip : pip install mkdocs-git-revision-date-localized-plugin Then, add the following to mkdocs.yml : plugins : - git-revision-date-localized The following options are supported: type Default: date \u2013 The format of the date to be displayed. Valid values are date , datetime , iso_date , iso_datetime and timeago : plugins : - git-revision-date-localized : type : date fallback_to_build_date Default: false \u2013 Enables falling back to the time when mkdocs build was executed. Can be used as a fallback when the build is performed outside of the git repository: plugins : - git-revision-date-localized : fallback_to_build_date : true enable_creation_date Default: false \u2013 Enables the display of the created at date of the file associated with the page next to the updated at date at the bottom of the page: plugins : - git-revision-date-localized : enable_creation_date : true Material for MkDocs doesn't provide official support for the other options of this plugin, so they may be supported but might yield unexpected results. Use them at your own risk.","title":"Adding a git repository"},{"location":"setup/adding-a-git-repository/#adding-a-git-repository","text":"If your documentation is related to source code, Material for MkDocs provides the ability to display information to the project's repository as part of the static site, including statistics like stars and forks. Furthermore, individual documents can be linked to specific source files.","title":"Adding a git repository"},{"location":"setup/adding-a-git-repository/#configuration","text":"In order to display a link to the repository of your project as part of your documentation, set repo_url in mkdocs.yml to the public URL of your repository, e.g.: repo_url : https://github.com/squidfunk/mkdocs-material The link to the repository will be rendered next to the search bar on big screens and as part of the main navigation drawer on smaller screen sizes. Additionally, for GitHub and GitLab, the number of stars and forks is automatically requested and rendered for public repositories .","title":"Configuration"},{"location":"setup/adding-a-git-repository/#repository-name","text":"Source \u00b7 Default: automatically set to GitHub , GitLab or Bitbucket MkDocs will infer the source provider by examining the URL and try to set the repository name automatically. If you wish to customize the name, set repo_name in mkdocs.yml : repo_name : squidfunk/mkdocs-material","title":"Repository name"},{"location":"setup/adding-a-git-repository/#repository-icon","text":"Source \u00b7 Default: fontawesome/brands/git-alt While the default repository icon is a generic git icon, it can be set to any icon bundled with the theme by referencing a valid icon path in mkdocs.yml : theme : icon : repo : fontawesome/brands/git-alt Some popular choices: \u2013 fontawesome/brands/git \u2013 fontawesome/brands/git-alt \u2013 fontawesome/brands/git-square \u2013 fontawesome/brands/github \u2013 fontawesome/brands/github-alt \u2013 fontawesome/brands/github-square \u2013 fontawesome/brands/gitlab \u2013 fontawesome/brands/gitkraken \u2013 fontawesome/brands/bitbucket \u2013 fontawesome/solid/trash","title":"Repository icon"},{"location":"setup/adding-a-git-repository/#edit-button","text":"Source \u00b7 Default: automatically set If the repository URL points to a GitHub , GitLab or Bitbucket repository, an edit button is displayed at the top of each document. This behavior can be changed by setting edit_uri in mkdocs.yml : Customize edit path edit_uri : edit/master/docs/ Hide edit button edit_uri : \"\"","title":"Edit button"},{"location":"setup/adding-a-git-repository/#revision-date","text":"Source \u00b7 Plugin The git-revision-date plugin adds support for displaying the date a document was last updated at the bottom of each page. It can be installed with pip : pip install mkdocs-git-revision-date-plugin Then, add the following to mkdocs.yml : plugins : - git-revision-date The following options are supported: enabled_if_env Default: none \u2013 When specified the data will only be extracted from git if the environment variable exists. This makes it possible to disable extraction for cases when the repository is not available: plugins : - git-revision-date : enabled_if_env : CI Material for MkDocs doesn't provide official support for the other options of this plugin, so they may be supported but might yield unexpected results. Use them at your own risk.","title":"Revision date"},{"location":"setup/adding-a-git-repository/#revision-date-localized","text":"Source \u00b7 Plugin Similarly, the git-revision-date-localized plugin adds support for adding a localized updated at and created at date at the bottom of each page. It can be installed with pip : pip install mkdocs-git-revision-date-localized-plugin Then, add the following to mkdocs.yml : plugins : - git-revision-date-localized The following options are supported: type Default: date \u2013 The format of the date to be displayed. Valid values are date , datetime , iso_date , iso_datetime and timeago : plugins : - git-revision-date-localized : type : date fallback_to_build_date Default: false \u2013 Enables falling back to the time when mkdocs build was executed. Can be used as a fallback when the build is performed outside of the git repository: plugins : - git-revision-date-localized : fallback_to_build_date : true enable_creation_date Default: false \u2013 Enables the display of the created at date of the file associated with the page next to the updated at date at the bottom of the page: plugins : - git-revision-date-localized : enable_creation_date : true Material for MkDocs doesn't provide official support for the other options of this plugin, so they may be supported but might yield unexpected results. Use them at your own risk.","title":"Revision date, localized"},{"location":"setup/changing-the-colors/","text":"Changing the colors \u00b6 As any proper Material Design implementation, Material for MkDocs supports Google's original color palette , which can be easily configured through mkdocs.yml . Furthermore, colors can be customized with a few lines of CSS to fit your brand's identity by using CSS variables . Configuration \u00b6 Color palette \u00b6 Color scheme \u00b6 Source \u00b7 Default: default Material for MkDocs supports two color schemes : a light mode, which is just called default , and a dark mode, which is called slate . The color scheme can be set via mkdocs.yml : theme : palette : scheme : default Click on a tile to change the color scheme : default slate var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\") buttons.forEach(function(button) { button.addEventListener(\"click\", function() { var attr = this.getAttribute(\"data-md-color-scheme\") document.body.setAttribute(\"data-md-color-scheme\", attr) var name = document.querySelector(\"#__code_0 code span:nth-child(7)\") name.textContent = attr }) }) Primary color \u00b6 Source \u00b7 Default: indigo The primary color is used for the header, the sidebar, text links and several other components. In order to change the primary color, set the following value in mkdocs.yml to a valid color name: theme : palette : primary : indigo Click on a tile to change the primary color : red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange brown grey blue grey black white var buttons = document.querySelectorAll(\"button[data-md-color-primary]\") buttons.forEach(function(button) { button.addEventListener(\"click\", function() { var attr = this.getAttribute(\"data-md-color-primary\") document.body.setAttribute(\"data-md-color-primary\", attr) var name = document.querySelector(\"#__code_1 code span:nth-child(7)\") name.textContent = attr.replace(\"-\", \" \") }) }) Accent color \u00b6 Source \u00b7 Default: indigo The accent color is used to denote elements that can be interacted with, e.g. hovered links, buttons and scrollbars. It can be changed in mkdocs.yml by choosing a valid color name: theme : palette : accent : indigo Click on a tile to change the accent color : .md-typeset button[data-md-color-accent] > code { background-color: var(--md-code-bg-color); color: var(--md-accent-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\") buttons.forEach(function(button) { button.addEventListener(\"click\", function() { var attr = this.getAttribute(\"data-md-color-accent\") document.body.setAttribute(\"data-md-color-accent\", attr) var name = document.querySelector(\"#__code_2 code span:nth-child(7)\") name.textContent = attr.replace(\"-\", \" \") }) }) Color palette toggle \u00b6 Source \u00b7 Default: none It's also possible to offer a list of color palettes to the user, each of which can include a scheme , primary and accent color each. The user can toggle between those color palettes: theme : palette : - scheme : default toggle : icon : material/toggle-switch-off-outline name : Switch to dark mode - scheme : slate toggle : icon : material/toggle-switch name : Switch to light mode The following fields must be set for each toggle: icon Default: none \u00b7 Required \u2013 This field must point to a valid icon path referencing any icon bundled with the theme , or the build will not succeed. Some popular combinations: + \u2013 material/toggle-switch-off-outline + material/toggle-switch + \u2013 material/weather-sunny + material/weather-night + \u2013 material/eye-outline + material/eye + \u2013 material/lightbulb-outline + material/lightbulb name Default: none \u00b7 Required \u2013 This field is used as the toggle's title attribute and should be set to a discernable name to improve accessibility. System preference \u00b6 Source \u00b7 Default: none In order to automatically set the color palette to the user's system preference, a media query can be set as part of the media field next to the toggle definition in mkdocs.yml : theme : palette : - media : \"(prefers-color-scheme: light)\" scheme : default toggle : icon : material/toggle-switch-off-outline name : Switch to dark mode - media : \"(prefers-color-scheme: dark)\" scheme : slate toggle : icon : material/toggle-switch name : Switch to light mode When the user first visits your site, the media queries are evaluated in the order of their definition. The first media query that matches selects the default color palette. Accessibility \u2013 not all color combinations work well With 2 (color schemes) x 21 (primary colors) x 17 (accent color) = 714 combinations, it's impossible to ensure that all configurations provide a good user experience (e.g. yellow on light background ). Make sure that the color combination of your choosing provides enough contrast and tweak CSS variables where necessary. Customization \u00b6 Custom colors \u00b6 Source \u00b7 Difficulty: easy Material for MkDocs implements colors using CSS variables (custom properties). If you want to customize the colors beyond the palette (e.g. to use your brand-specific colors), you can add an additional stylesheet and tweak the values of the CSS variables. Let's say you're YouTube , and want to set the primary color to your brand's palette. Just add: : root { --md-primary-fg-color : #EE0F0F ; --md-primary-fg-color--light : #ECB7B7 ; --md-primary-fg-color--dark : #90030C ; } See the file containing the color definitions for a list of all CSS variables. Custom color schemes \u00b6 Source \u00b7 Difficulty: easy Besides overriding specific colors, you can create your own, named color scheme by wrapping the definitions in the [ data-md-color-scheme = \"...\" ] attribute selector , which you can then set via mkdocs.yml as described in the color schemes section: [ data-md-color-scheme = \"youtube\" ] { --md-primary-fg-color : #EE0F0F ; --md-primary-fg-color--light : #ECB7B7 ; --md-primary-fg-color--dark : #90030C ; } Additionally, the slate color scheme defines all of it's colors via hsla color functions and deduces its colors from the --md-hue CSS variable. You can tune the slate theme with: [ data-md-color-scheme = \"slate\" ] { --md-hue : 210 ; /* [0, 360] */ }","title":"Changing the colors"},{"location":"setup/changing-the-colors/#changing-the-colors","text":"As any proper Material Design implementation, Material for MkDocs supports Google's original color palette , which can be easily configured through mkdocs.yml . Furthermore, colors can be customized with a few lines of CSS to fit your brand's identity by using CSS variables .","title":"Changing the colors"},{"location":"setup/changing-the-colors/#configuration","text":"","title":"Configuration"},{"location":"setup/changing-the-colors/#color-palette","text":"","title":"Color palette"},{"location":"setup/changing-the-colors/#color-scheme","text":"Source \u00b7 Default: default Material for MkDocs supports two color schemes : a light mode, which is just called default , and a dark mode, which is called slate . The color scheme can be set via mkdocs.yml : theme : palette : scheme : default Click on a tile to change the color scheme : default slate var buttons = document.querySelectorAll(\"button[data-md-color-scheme]\") buttons.forEach(function(button) { button.addEventListener(\"click\", function() { var attr = this.getAttribute(\"data-md-color-scheme\") document.body.setAttribute(\"data-md-color-scheme\", attr) var name = document.querySelector(\"#__code_0 code span:nth-child(7)\") name.textContent = attr }) })","title":"Color scheme"},{"location":"setup/changing-the-colors/#primary-color","text":"Source \u00b7 Default: indigo The primary color is used for the header, the sidebar, text links and several other components. In order to change the primary color, set the following value in mkdocs.yml to a valid color name: theme : palette : primary : indigo Click on a tile to change the primary color : red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange brown grey blue grey black white var buttons = document.querySelectorAll(\"button[data-md-color-primary]\") buttons.forEach(function(button) { button.addEventListener(\"click\", function() { var attr = this.getAttribute(\"data-md-color-primary\") document.body.setAttribute(\"data-md-color-primary\", attr) var name = document.querySelector(\"#__code_1 code span:nth-child(7)\") name.textContent = attr.replace(\"-\", \" \") }) })","title":"Primary color"},{"location":"setup/changing-the-colors/#accent-color","text":"Source \u00b7 Default: indigo The accent color is used to denote elements that can be interacted with, e.g. hovered links, buttons and scrollbars. It can be changed in mkdocs.yml by choosing a valid color name: theme : palette : accent : indigo Click on a tile to change the accent color : .md-typeset button[data-md-color-accent] > code { background-color: var(--md-code-bg-color); color: var(--md-accent-fg-color); } red pink purple deep purple indigo blue light blue cyan teal green light green lime yellow amber orange deep orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\") buttons.forEach(function(button) { button.addEventListener(\"click\", function() { var attr = this.getAttribute(\"data-md-color-accent\") document.body.setAttribute(\"data-md-color-accent\", attr) var name = document.querySelector(\"#__code_2 code span:nth-child(7)\") name.textContent = attr.replace(\"-\", \" \") }) })","title":"Accent color"},{"location":"setup/changing-the-colors/#color-palette-toggle","text":"Source \u00b7 Default: none It's also possible to offer a list of color palettes to the user, each of which can include a scheme , primary and accent color each. The user can toggle between those color palettes: theme : palette : - scheme : default toggle : icon : material/toggle-switch-off-outline name : Switch to dark mode - scheme : slate toggle : icon : material/toggle-switch name : Switch to light mode The following fields must be set for each toggle: icon Default: none \u00b7 Required \u2013 This field must point to a valid icon path referencing any icon bundled with the theme , or the build will not succeed. Some popular combinations: + \u2013 material/toggle-switch-off-outline + material/toggle-switch + \u2013 material/weather-sunny + material/weather-night + \u2013 material/eye-outline + material/eye + \u2013 material/lightbulb-outline + material/lightbulb name Default: none \u00b7 Required \u2013 This field is used as the toggle's title attribute and should be set to a discernable name to improve accessibility.","title":"Color palette toggle"},{"location":"setup/changing-the-colors/#system-preference","text":"Source \u00b7 Default: none In order to automatically set the color palette to the user's system preference, a media query can be set as part of the media field next to the toggle definition in mkdocs.yml : theme : palette : - media : \"(prefers-color-scheme: light)\" scheme : default toggle : icon : material/toggle-switch-off-outline name : Switch to dark mode - media : \"(prefers-color-scheme: dark)\" scheme : slate toggle : icon : material/toggle-switch name : Switch to light mode When the user first visits your site, the media queries are evaluated in the order of their definition. The first media query that matches selects the default color palette. Accessibility \u2013 not all color combinations work well With 2 (color schemes) x 21 (primary colors) x 17 (accent color) = 714 combinations, it's impossible to ensure that all configurations provide a good user experience (e.g. yellow on light background ). Make sure that the color combination of your choosing provides enough contrast and tweak CSS variables where necessary.","title":"System preference"},{"location":"setup/changing-the-colors/#customization","text":"","title":"Customization"},{"location":"setup/changing-the-colors/#custom-colors","text":"Source \u00b7 Difficulty: easy Material for MkDocs implements colors using CSS variables (custom properties). If you want to customize the colors beyond the palette (e.g. to use your brand-specific colors), you can add an additional stylesheet and tweak the values of the CSS variables. Let's say you're YouTube , and want to set the primary color to your brand's palette. Just add: : root { --md-primary-fg-color : #EE0F0F ; --md-primary-fg-color--light : #ECB7B7 ; --md-primary-fg-color--dark : #90030C ; } See the file containing the color definitions for a list of all CSS variables.","title":"Custom colors"},{"location":"setup/changing-the-colors/#custom-color-schemes","text":"Source \u00b7 Difficulty: easy Besides overriding specific colors, you can create your own, named color scheme by wrapping the definitions in the [ data-md-color-scheme = \"...\" ] attribute selector , which you can then set via mkdocs.yml as described in the color schemes section: [ data-md-color-scheme = \"youtube\" ] { --md-primary-fg-color : #EE0F0F ; --md-primary-fg-color--light : #ECB7B7 ; --md-primary-fg-color--dark : #90030C ; } Additionally, the slate color scheme defines all of it's colors via hsla color functions and deduces its colors from the --md-hue CSS variable. You can tune the slate theme with: [ data-md-color-scheme = \"slate\" ] { --md-hue : 210 ; /* [0, 360] */ }","title":"Custom color schemes"},{"location":"setup/changing-the-fonts/","text":"Changing the fonts \u00b6 Material for MkDocs makes it easy to change the typeface of your project documentation, as it directly integrates with Google Fonts . Alternatively, fonts can be custom-loaded if self-hosting is preferred for data privacy reasons or another destination should be used. Configuration \u00b6 Regular font \u00b6 Source \u00b7 Default: Roboto The regular font is used for all body copy, headlines, and essentially everything that does not need to be monospaced. It can be set to any valid Google Font with: theme : font : text : Roboto The typeface will be loaded in 300, 400, 400i and 700 . Monospaced font \u00b6 Source \u00b7 Default: Roboto Mono The monospaced font is used for code blocks and can be configured separately. Just like the regular font, it can be set to any valid Google Font via mkdocs.yml with: theme : font : code : Roboto Mono The typeface will be loaded in 400. Customization \u00b6 If you want to load fonts from other destinations or don't want to use Google Fonts for data privacy reasons, e.g. due to GDPR , you may customize font loading as described below. Disabling font loading \u00b6 Source \u00b7 Difficulty: easy If you want to prevent typefaces from being loaded from Google Fonts and fall back to system fonts, add the following lines to mkdocs.yml : theme : font : false Additional fonts \u00b6 Source \u00b7 Difficulty: easy If you want to load an (additional) font from another or override the fallback font, you can use an additional stylesheet to add the corresponding @font-face definition: @ font-face { font-family : \"<font>\" ; src : \"...\" ; } The font can then be applied to specific elements, e.g. only headlines, or globally to be used as the site-wide regular or monospaced font (with fallback fonts being added automatically): Regular font : root { --md-text-font-family : \"<font>\" ; } Monospaced font : root { --md-code-font-family : \"<font>\" ; }","title":"Changing the fonts"},{"location":"setup/changing-the-fonts/#changing-the-fonts","text":"Material for MkDocs makes it easy to change the typeface of your project documentation, as it directly integrates with Google Fonts . Alternatively, fonts can be custom-loaded if self-hosting is preferred for data privacy reasons or another destination should be used.","title":"Changing the fonts"},{"location":"setup/changing-the-fonts/#configuration","text":"","title":"Configuration"},{"location":"setup/changing-the-fonts/#regular-font","text":"Source \u00b7 Default: Roboto The regular font is used for all body copy, headlines, and essentially everything that does not need to be monospaced. It can be set to any valid Google Font with: theme : font : text : Roboto The typeface will be loaded in 300, 400, 400i and 700 .","title":"Regular font"},{"location":"setup/changing-the-fonts/#monospaced-font","text":"Source \u00b7 Default: Roboto Mono The monospaced font is used for code blocks and can be configured separately. Just like the regular font, it can be set to any valid Google Font via mkdocs.yml with: theme : font : code : Roboto Mono The typeface will be loaded in 400.","title":"Monospaced font"},{"location":"setup/changing-the-fonts/#customization","text":"If you want to load fonts from other destinations or don't want to use Google Fonts for data privacy reasons, e.g. due to GDPR , you may customize font loading as described below.","title":"Customization"},{"location":"setup/changing-the-fonts/#disabling-font-loading","text":"Source \u00b7 Difficulty: easy If you want to prevent typefaces from being loaded from Google Fonts and fall back to system fonts, add the following lines to mkdocs.yml : theme : font : false","title":"Disabling font loading"},{"location":"setup/changing-the-fonts/#additional-fonts","text":"Source \u00b7 Difficulty: easy If you want to load an (additional) font from another or override the fallback font, you can use an additional stylesheet to add the corresponding @font-face definition: @ font-face { font-family : \"<font>\" ; src : \"...\" ; } The font can then be applied to specific elements, e.g. only headlines, or globally to be used as the site-wide regular or monospaced font (with fallback fonts being added automatically): Regular font : root { --md-text-font-family : \"<font>\" ; } Monospaced font : root { --md-code-font-family : \"<font>\" ; }","title":"Additional fonts"},{"location":"setup/changing-the-language/","text":"Changing the language \u00b6 Material for MkDocs supports internationalization (i18n) and provides translations for template variables and labels in 40+ languages. Additionally, the site search can be configured to use a language-specific stemmer (if available). Configuration \u00b6 Site language \u00b6 Source \u00b7 Default: en You can set the site language in mkdocs.yml with: theme : language : en The following languages are supported: af \u2013 Afrikaans ar \u2013 Arabic bg \u2013 Bulgarian bn \u2013 Bengali (Bangla) ca \u2013 Catalan cs \u2013 Czech da \u2013 Danish de \u2013 German en \u2013 English eo \u2013 Esperanto es \u2013 Spanish et \u2013 Estonian fa \u2013 Persian (Farsi) fi \u2013 Finnish fr \u2013 French gl \u2013 Galician gr \u2013 Greek he \u2013 Hebrew hi \u2013 Hindi hr \u2013 Croatian hu \u2013 Hungarian id \u2013 Indonesian is \u2013 Icelandic it \u2013 Italian ja \u2013 Japanese ka \u2013 Georgian kr \u2013 Korean mn \u2013 Mongolian my \u2013 Burmese nl \u2013 Dutch nn \u2013 Norwegian (Nynorsk) no \u2013 Norwegian pl \u2013 Polish pt \u2013 Portuguese ro \u2013 Romanian ru \u2013 Russian sh \u2013 Serbo-Croatian si \u2013 Sinhalese sk \u2013 Slovak sl \u2013 Slovenian sr \u2013 Serbian sv \u2013 Swedish th \u2013 Thai tr \u2013 Turkish uk \u2013 Ukrainian vi \u2013 Vietnamese zh \u2013 Chinese (Simplified) zh-Hant \u2013 Chinese (Traditional) zh-TW \u2013 Chinese (Taiwanese) Add language Note that some languages will produce unreadable anchor links, due to the way the default slug function works. Consider using a Unicode-aware slug function, as documented here . Site language selector \u00b6 Source \u00b7 Experimental If your documentation is available in multiple languages, a language selector can be added to the header next to the search bar. Alternate languages can be defined via mkdocs.yml : extra : alternate : # Switch to English - name : English link : <your-site>/en/ lang : en # Switch to German - name : Deutsch link : <your-site>/de/ lang : de # Switch to Japanese - name : \u65e5\u672c\u8a9e link : <your-site>/ja/ lang : ja This will render a language selector in the header next to the search bar: Site search language \u00b6 Source \u00b7 Default: automatically set Some languages, like Arabic or Japanese, need dedicated stemmers for search to work properly. Material for MkDocs relies on lunr-languages to provide this functionality. See the guide detailing how to set up site search for more information. Directionality \u00b6 Source \u00b7 Default: automatically set While many languages are read ltr (left-to-right), Material for MkDocs also supports rtl (right-to-left) directionality which is inferred from the selected language, but can also be set with: theme : direction : ltr Click on a tile to change the directionality: ltr rtl var buttons = document.querySelectorAll(\"button[data-md-dir]\") buttons.forEach(function(button) { button.addEventListener(\"click\", function() { var attr = this.getAttribute(\"data-md-dir\") document.body.dir = attr var name = document.querySelector(\"#__code_1 code span:nth-child(5)\") name.textContent = attr }) }) Customization \u00b6 Custom translations \u00b6 Source \u00b7 Difficulty: easy If you want to customize some of the translations for your language, just follow the guide on theme extension and create a new partial in partials/languages , e.g. en-custom.html . Next, look up the translation you want to change in the base translation and add it to the partial. Let's say you want to change \" Table of contents \" to \" On this page \": {% macro t(key) %}{{ { \"toc.title\": \"On this page\" }[key] }}{% endmacro %} Then, add the following lines to mkdocs.yml : theme : language : en-custom","title":"Changing the language"},{"location":"setup/changing-the-language/#changing-the-language","text":"Material for MkDocs supports internationalization (i18n) and provides translations for template variables and labels in 40+ languages. Additionally, the site search can be configured to use a language-specific stemmer (if available).","title":"Changing the language"},{"location":"setup/changing-the-language/#configuration","text":"","title":"Configuration"},{"location":"setup/changing-the-language/#site-language","text":"Source \u00b7 Default: en You can set the site language in mkdocs.yml with: theme : language : en The following languages are supported: af \u2013 Afrikaans ar \u2013 Arabic bg \u2013 Bulgarian bn \u2013 Bengali (Bangla) ca \u2013 Catalan cs \u2013 Czech da \u2013 Danish de \u2013 German en \u2013 English eo \u2013 Esperanto es \u2013 Spanish et \u2013 Estonian fa \u2013 Persian (Farsi) fi \u2013 Finnish fr \u2013 French gl \u2013 Galician gr \u2013 Greek he \u2013 Hebrew hi \u2013 Hindi hr \u2013 Croatian hu \u2013 Hungarian id \u2013 Indonesian is \u2013 Icelandic it \u2013 Italian ja \u2013 Japanese ka \u2013 Georgian kr \u2013 Korean mn \u2013 Mongolian my \u2013 Burmese nl \u2013 Dutch nn \u2013 Norwegian (Nynorsk) no \u2013 Norwegian pl \u2013 Polish pt \u2013 Portuguese ro \u2013 Romanian ru \u2013 Russian sh \u2013 Serbo-Croatian si \u2013 Sinhalese sk \u2013 Slovak sl \u2013 Slovenian sr \u2013 Serbian sv \u2013 Swedish th \u2013 Thai tr \u2013 Turkish uk \u2013 Ukrainian vi \u2013 Vietnamese zh \u2013 Chinese (Simplified) zh-Hant \u2013 Chinese (Traditional) zh-TW \u2013 Chinese (Taiwanese) Add language Note that some languages will produce unreadable anchor links, due to the way the default slug function works. Consider using a Unicode-aware slug function, as documented here .","title":"Site language"},{"location":"setup/changing-the-language/#site-language-selector","text":"Source \u00b7 Experimental If your documentation is available in multiple languages, a language selector can be added to the header next to the search bar. Alternate languages can be defined via mkdocs.yml : extra : alternate : # Switch to English - name : English link : <your-site>/en/ lang : en # Switch to German - name : Deutsch link : <your-site>/de/ lang : de # Switch to Japanese - name : \u65e5\u672c\u8a9e link : <your-site>/ja/ lang : ja This will render a language selector in the header next to the search bar:","title":"Site language selector"},{"location":"setup/changing-the-language/#site-search-language","text":"Source \u00b7 Default: automatically set Some languages, like Arabic or Japanese, need dedicated stemmers for search to work properly. Material for MkDocs relies on lunr-languages to provide this functionality. See the guide detailing how to set up site search for more information.","title":"Site search language"},{"location":"setup/changing-the-language/#directionality","text":"Source \u00b7 Default: automatically set While many languages are read ltr (left-to-right), Material for MkDocs also supports rtl (right-to-left) directionality which is inferred from the selected language, but can also be set with: theme : direction : ltr Click on a tile to change the directionality: ltr rtl var buttons = document.querySelectorAll(\"button[data-md-dir]\") buttons.forEach(function(button) { button.addEventListener(\"click\", function() { var attr = this.getAttribute(\"data-md-dir\") document.body.dir = attr var name = document.querySelector(\"#__code_1 code span:nth-child(5)\") name.textContent = attr }) })","title":"Directionality"},{"location":"setup/changing-the-language/#customization","text":"","title":"Customization"},{"location":"setup/changing-the-language/#custom-translations","text":"Source \u00b7 Difficulty: easy If you want to customize some of the translations for your language, just follow the guide on theme extension and create a new partial in partials/languages , e.g. en-custom.html . Next, look up the translation you want to change in the base translation and add it to the partial. Let's say you want to change \" Table of contents \" to \" On this page \": {% macro t(key) %}{{ { \"toc.title\": \"On this page\" }[key] }}{% endmacro %} Then, add the following lines to mkdocs.yml : theme : language : en-custom","title":"Custom translations"},{"location":"setup/changing-the-logo-and-icons/","text":"Changing the logo and icons \u00b6 When installing Material for MkDocs, you immediately get access to over 7.000 icons ready to be used for customization of specific parts of the theme and/or when writing your documentation in Markdown. Not enough? You can also add additional icons with minimal effort. Configuration \u00b6 Logo \u00b6 Source \u00b7 Default: material/library The logo can be changed to a user-provided image (any type, incl. *.png and *.svg ) located in the docs folder, or to any icon bundled with the theme. Add the following lines to mkdocs.yml : Image theme : logo : assets/logo.png Icon, bundled theme : icon : logo : material/library Normally, the logo in the header and sidebar links to the homepage of the documentation, which is the same as site_url . This behavior can be changed with the following configuration: extra : homepage : https://example.com Favicon \u00b6 Source \u00b7 Default: assets/images/favicon.png The favicon can be changed to a path pointing to a user-provided image, which must be located in the docs folder. It can be set via mkdocs.yml : theme : favicon : images/favicon.png Icons \u00b6 Source \u00b7 Extension The Emoji extension, which is part of Python Markdown Extensions , adds the ability to integrate icons in the *.svg file format, which are inlined when building your site : markdown_extensions : - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg The following icon sets are bundled with Material for MkDocs: \u2013 Material Design \u2013 FontAwesome \u2013 Octicons If you want to add additional icons , read on. Customization \u00b6 Additional icons \u00b6 Source \u00b7 Difficulty: easy In order to add additional icons, extend the theme , and create a folder named .icons in the custom_dir you want to use for overrides. Next, add your *.svg icons into a subfolder of the .icons folder. Let's say you downloaded and unpacked the Bootstrap icon set, and want to add it to your project documentation. The structure of your project should look like this: . \u251c\u2500 overrides/ \u2502 \u2514\u2500 .icons/ \u2502 \u2514\u2500 bootstrap/ \u2502 \u2514\u2500 *.svg \u2514\u2500 mkdocs.yml Then, add the following lines to mkdocs.yml : markdown_extensions : - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg options : custom_icons : - overrides/.icons You should now be able to use the Bootstrap icons.","title":"Changing the logo and icons"},{"location":"setup/changing-the-logo-and-icons/#changing-the-logo-and-icons","text":"When installing Material for MkDocs, you immediately get access to over 7.000 icons ready to be used for customization of specific parts of the theme and/or when writing your documentation in Markdown. Not enough? You can also add additional icons with minimal effort.","title":"Changing the logo and icons"},{"location":"setup/changing-the-logo-and-icons/#configuration","text":"","title":"Configuration"},{"location":"setup/changing-the-logo-and-icons/#logo","text":"Source \u00b7 Default: material/library The logo can be changed to a user-provided image (any type, incl. *.png and *.svg ) located in the docs folder, or to any icon bundled with the theme. Add the following lines to mkdocs.yml : Image theme : logo : assets/logo.png Icon, bundled theme : icon : logo : material/library Normally, the logo in the header and sidebar links to the homepage of the documentation, which is the same as site_url . This behavior can be changed with the following configuration: extra : homepage : https://example.com","title":"Logo"},{"location":"setup/changing-the-logo-and-icons/#favicon","text":"Source \u00b7 Default: assets/images/favicon.png The favicon can be changed to a path pointing to a user-provided image, which must be located in the docs folder. It can be set via mkdocs.yml : theme : favicon : images/favicon.png","title":"Favicon"},{"location":"setup/changing-the-logo-and-icons/#icons","text":"Source \u00b7 Extension The Emoji extension, which is part of Python Markdown Extensions , adds the ability to integrate icons in the *.svg file format, which are inlined when building your site : markdown_extensions : - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg The following icon sets are bundled with Material for MkDocs: \u2013 Material Design \u2013 FontAwesome \u2013 Octicons If you want to add additional icons , read on.","title":"Icons"},{"location":"setup/changing-the-logo-and-icons/#customization","text":"","title":"Customization"},{"location":"setup/changing-the-logo-and-icons/#additional-icons","text":"Source \u00b7 Difficulty: easy In order to add additional icons, extend the theme , and create a folder named .icons in the custom_dir you want to use for overrides. Next, add your *.svg icons into a subfolder of the .icons folder. Let's say you downloaded and unpacked the Bootstrap icon set, and want to add it to your project documentation. The structure of your project should look like this: . \u251c\u2500 overrides/ \u2502 \u2514\u2500 .icons/ \u2502 \u2514\u2500 bootstrap/ \u2502 \u2514\u2500 *.svg \u2514\u2500 mkdocs.yml Then, add the following lines to mkdocs.yml : markdown_extensions : - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg options : custom_icons : - overrides/.icons You should now be able to use the Bootstrap icons.","title":"Additional icons"},{"location":"setup/setting-up-navigation/","text":"Setting up navigation \u00b6 A clear and concise navigation structure is an important aspect of good project documentation. Material for MkDocs provides a multitude of options to configure the behavior of navigational elements, including tabs and sections , and its flag-ship feature: instant loading . Configuration \u00b6 Instant loading \u00b6 Source \u00b7 Feature flag When instant loading is enabled, clicks on all internal links will be intercepted and dispatched via XHR without fully reloading the page. Add the following lines to mkdocs.yml : theme : features : - navigation.instant The resulting page is parsed and injected and all event handlers and components are rebound automatically. This means that Material for MkDocs behaves like a Single Page Application , which is especially useful for large documentation sites that come with a massive search index, as the search index will now remain intact in-between document switches. Material for MkDocs is the only MkDocs theme offering this feature. Anchor tracking \u00b6 Source \u00b7 Feature flag \u00b7 Insiders only When anchor tracking is enabled, the URL in the address bar is automatically updated with the active anchor as highlighted in the table of contents. Add the following lines to mkdocs.yml : theme : features : - navigation.tracking Navigation tabs \u00b6 Source \u00b7 Feature flag When tabs are enabled, top-level sections are rendered in a menu layer below the header for viewports above 1220px , but remain as-is on mobile. 1 Add the following lines to mkdocs.yml : theme : features : - navigation.tabs With tabs Without tabs Sticky navigation tabs \u00b6 Source \u00b7 Feature flag \u00b7 Experimental \u00b7 Insiders only When sticky tabs are enabled, navigation tabs will lock below the header and always remain visible when scrolling down. Just add the following two feature flags to mkdocs.yml : theme : features : - navigation.tabs - navigation.tabs.sticky With sticky tabs Without sticky tabs Navigation sections \u00b6 Source \u00b7 Feature flag When sections are enabled, top-level sections are rendered as groups in the sidebar for viewports above 1220px , but remain as-is on mobile. Add the following lines to mkdocs.yml : theme : features : - navigation.sections With sections Without sections Both feature flags, tabs and sections , can be combined with each other. If both feature flags are enabled, sections are rendered for level 2 navigation items. Navigation expansion \u00b6 Source \u00b7 Feature flag When expansion is enabled, the left sidebar will expand all collapsible subsections by default, so the user doesn't have to open subsections manually. Add the following lines to mkdocs.yml : theme : features : - navigation.expand With expansion Without expansion Section index pages \u00b6 Source \u00b7 Feature flag \u00b7 Experimental \u00b7 Insiders only When section index pages are enabled, documents can be directly attached to sections, which is particularly useful for providing overview pages. Add the following lines to mkdocs.yml : theme : features : - navigation.indexes With section index pages Without section index pages In order to link a page to a section, create a new document with the name index.md in the respective folder, and add it to the beginning of your navigation section: nav : - Section : - section/index.md - Page 1 : section/page-1.md ... - Page n : section/page-n.md This feature flag can be combined with all other feature flags, e.g. tabs and sections , except for table of contents navigation integration . Note that it doesn't rely on third-party plugins 2 . Back-to-top button \u00b6 Source \u00b7 Feature flag A back-to-top button can be shown when the user, after scrolling down, starts to scroll up again. It's rendered in the lower right corner of the viewport. Add the following lines to mkdocs.yml : theme : features : - navigation.top A demo is worth a thousand words \u2014 check it out at squidfunk.github.io/mkdocs-material-insiders Table of contents \u00b6 Source \u00b7 Extension The Table of contents extension, which is part of the standard Markdown library, provides some options that are supported by Material for MkDocs to customize its appearance: permalink Default: false \u2013 This option adds an anchor link containing the paragraph symbol \u00b6 or another custom symbol at the end of each headline, exactly like on the page you're currently viewing, which Material for MkDocs will make appear on hover: \u00b6 markdown_extensions : - toc : permalink : true \u2693\ufe0e markdown_extensions : - toc : permalink : \u2693\ufe0e slugify Default: headerid.slugify \u2013 This option allows for customization of the slug function. For some languages, the default may not produce good and readable identifiers \u2013 consider using another slug function like for example those from Python Markdown Extensions : Unicode markdown_extensions : - toc : slugify : !!python/name:pymdownx.slugs.uslugify Unicode, case-sensitive markdown_extensions : - toc : slugify : !!python/name:pymdownx.slugs.uslugify_cased toc_depth Default: 6 \u2013 Define the range of levels to be included in the table of contents. This may be useful for project documentation with deeply structured headings to decrease the length of the table of contents, or to remove the table of contents altogether: Hide levels 4-6 markdown_extensions : - toc : toc_depth : 3 Hide table of contents markdown_extensions : - toc : toc_depth : 0 Material for MkDocs doesn't provide official support for the other options of this extension, so they may be supported but might yield unexpected results. Use them at your own risk. Navigation integration \u00b6 Source \u00b7 Feature flag When integration is enabled, the table of contents is rendered as part of the navigation for viewports above 1220px , but remains as-is on mobile. Add the following lines to mkdocs.yml : theme : features : - toc.integrate Integrate table of contents Separate table of contents The content section will now always stretch to the right side, resulting in more space for your content. This feature flag can be combined with all other feature flags, e.g. tabs and sections . Usage \u00b6 Hiding the sidebars \u00b6 Source \u00b7 Metadata Sometimes it's desirable to hide the navigation and/or table of contents sidebar, especially when there's a single navigation item. This can be done for any page using the Metadata extension: --- hide: - navigation - toc --- # Document title ... Hide navigation Hide table of contents Hide both Customization \u00b6 Keyboard shortcuts \u00b6 Source \u00b7 Difficulty: easy Material for MkDocs includes several keyboard shortcuts that make it possible to navigate your project documentation via keyboard. There're two modes: search This mode is active when the search is focused . It provides several key bindings to make search accessible and navigable via keyboard: Down , Up : select next / previous result Esc , Tab : close search dialog Enter : follow selected result global This mode is active when search is not focussed and when there's no other focussed element that is susceptible to keyboard input. The following keys are bound: F , S , / : open search dialog P , , : go to previous page N , . : go to next page Let's say you want to bind some action to the X key. By using additional JavaScript , you can subscribe to the keyboard$ observable and attach your custom event listener: keyboard$ . subscribe ( function ( key ) { if ( key . mode === \"global\" && key . type === \"x\" ) { /* Add custom keyboard handler here */ key . claim () } }) The call to key . claim () will essentially execute preventDefault () on the underlying event, so the keypress will not propagate further and touch other event listeners. Content area width \u00b6 Source \u00b7 Difficulty: easy The width of the content area is set so the length of each line doesn't exceed 80-100 characters, depending on the width of the characters. While this is a reasonable default, as longer lines tend to be harder to read, it may be desirable to increase the overall width of the content area, or even make it stretch to the entire available space. This can easily be achieved with an additional stylesheet and a few lines of CSS: Increase width . md-grid { max-width : 1440 px ; } Stretch to fit . md-grid { max-width : initial ; } Prior to version 6.2, navigation tabs had a slightly different behavior. All top-level pages (i.e. all top-level entries that directly refer to an *.md file) defined inside the nav entry of mkdocs.yml were grouped under the first tab which received the title of the first page. This made it impossible to include a top-level page (or external link) as a tab item, as was reported in #1884 and #2072 . From version 6.2 on, navigation tabs include all top-level pages and sections. \u21a9 If you don't want to use the native integration, the mkdocs-section-index plugin might be an alternative. However, note that this plugin may not be compatible with all navigation-related features offered by Material for MkDocs. \u21a9","title":"Setting up navigation"},{"location":"setup/setting-up-navigation/#setting-up-navigation","text":"A clear and concise navigation structure is an important aspect of good project documentation. Material for MkDocs provides a multitude of options to configure the behavior of navigational elements, including tabs and sections , and its flag-ship feature: instant loading .","title":"Setting up navigation"},{"location":"setup/setting-up-navigation/#configuration","text":"","title":"Configuration"},{"location":"setup/setting-up-navigation/#instant-loading","text":"Source \u00b7 Feature flag When instant loading is enabled, clicks on all internal links will be intercepted and dispatched via XHR without fully reloading the page. Add the following lines to mkdocs.yml : theme : features : - navigation.instant The resulting page is parsed and injected and all event handlers and components are rebound automatically. This means that Material for MkDocs behaves like a Single Page Application , which is especially useful for large documentation sites that come with a massive search index, as the search index will now remain intact in-between document switches. Material for MkDocs is the only MkDocs theme offering this feature.","title":"Instant loading"},{"location":"setup/setting-up-navigation/#anchor-tracking","text":"Source \u00b7 Feature flag \u00b7 Insiders only When anchor tracking is enabled, the URL in the address bar is automatically updated with the active anchor as highlighted in the table of contents. Add the following lines to mkdocs.yml : theme : features : - navigation.tracking","title":"Anchor tracking"},{"location":"setup/setting-up-navigation/#navigation-tabs","text":"Source \u00b7 Feature flag When tabs are enabled, top-level sections are rendered in a menu layer below the header for viewports above 1220px , but remain as-is on mobile. 1 Add the following lines to mkdocs.yml : theme : features : - navigation.tabs With tabs Without tabs","title":"Navigation tabs"},{"location":"setup/setting-up-navigation/#sticky-navigation-tabs","text":"Source \u00b7 Feature flag \u00b7 Experimental \u00b7 Insiders only When sticky tabs are enabled, navigation tabs will lock below the header and always remain visible when scrolling down. Just add the following two feature flags to mkdocs.yml : theme : features : - navigation.tabs - navigation.tabs.sticky With sticky tabs Without sticky tabs","title":"Sticky navigation tabs"},{"location":"setup/setting-up-navigation/#navigation-sections","text":"Source \u00b7 Feature flag When sections are enabled, top-level sections are rendered as groups in the sidebar for viewports above 1220px , but remain as-is on mobile. Add the following lines to mkdocs.yml : theme : features : - navigation.sections With sections Without sections Both feature flags, tabs and sections , can be combined with each other. If both feature flags are enabled, sections are rendered for level 2 navigation items.","title":"Navigation sections"},{"location":"setup/setting-up-navigation/#navigation-expansion","text":"Source \u00b7 Feature flag When expansion is enabled, the left sidebar will expand all collapsible subsections by default, so the user doesn't have to open subsections manually. Add the following lines to mkdocs.yml : theme : features : - navigation.expand With expansion Without expansion","title":"Navigation expansion"},{"location":"setup/setting-up-navigation/#section-index-pages","text":"Source \u00b7 Feature flag \u00b7 Experimental \u00b7 Insiders only When section index pages are enabled, documents can be directly attached to sections, which is particularly useful for providing overview pages. Add the following lines to mkdocs.yml : theme : features : - navigation.indexes With section index pages Without section index pages In order to link a page to a section, create a new document with the name index.md in the respective folder, and add it to the beginning of your navigation section: nav : - Section : - section/index.md - Page 1 : section/page-1.md ... - Page n : section/page-n.md This feature flag can be combined with all other feature flags, e.g. tabs and sections , except for table of contents navigation integration . Note that it doesn't rely on third-party plugins 2 .","title":"Section index pages"},{"location":"setup/setting-up-navigation/#back-to-top-button","text":"Source \u00b7 Feature flag A back-to-top button can be shown when the user, after scrolling down, starts to scroll up again. It's rendered in the lower right corner of the viewport. Add the following lines to mkdocs.yml : theme : features : - navigation.top A demo is worth a thousand words \u2014 check it out at squidfunk.github.io/mkdocs-material-insiders","title":"Back-to-top button"},{"location":"setup/setting-up-navigation/#table-of-contents","text":"Source \u00b7 Extension The Table of contents extension, which is part of the standard Markdown library, provides some options that are supported by Material for MkDocs to customize its appearance: permalink Default: false \u2013 This option adds an anchor link containing the paragraph symbol \u00b6 or another custom symbol at the end of each headline, exactly like on the page you're currently viewing, which Material for MkDocs will make appear on hover: \u00b6 markdown_extensions : - toc : permalink : true \u2693\ufe0e markdown_extensions : - toc : permalink : \u2693\ufe0e slugify Default: headerid.slugify \u2013 This option allows for customization of the slug function. For some languages, the default may not produce good and readable identifiers \u2013 consider using another slug function like for example those from Python Markdown Extensions : Unicode markdown_extensions : - toc : slugify : !!python/name:pymdownx.slugs.uslugify Unicode, case-sensitive markdown_extensions : - toc : slugify : !!python/name:pymdownx.slugs.uslugify_cased toc_depth Default: 6 \u2013 Define the range of levels to be included in the table of contents. This may be useful for project documentation with deeply structured headings to decrease the length of the table of contents, or to remove the table of contents altogether: Hide levels 4-6 markdown_extensions : - toc : toc_depth : 3 Hide table of contents markdown_extensions : - toc : toc_depth : 0 Material for MkDocs doesn't provide official support for the other options of this extension, so they may be supported but might yield unexpected results. Use them at your own risk.","title":"Table of contents"},{"location":"setup/setting-up-navigation/#navigation-integration","text":"Source \u00b7 Feature flag When integration is enabled, the table of contents is rendered as part of the navigation for viewports above 1220px , but remains as-is on mobile. Add the following lines to mkdocs.yml : theme : features : - toc.integrate Integrate table of contents Separate table of contents The content section will now always stretch to the right side, resulting in more space for your content. This feature flag can be combined with all other feature flags, e.g. tabs and sections .","title":"Navigation integration"},{"location":"setup/setting-up-navigation/#usage","text":"","title":"Usage"},{"location":"setup/setting-up-navigation/#hiding-the-sidebars","text":"Source \u00b7 Metadata Sometimes it's desirable to hide the navigation and/or table of contents sidebar, especially when there's a single navigation item. This can be done for any page using the Metadata extension: --- hide: - navigation - toc --- # Document title ... Hide navigation Hide table of contents Hide both","title":"Hiding the sidebars"},{"location":"setup/setting-up-navigation/#customization","text":"","title":"Customization"},{"location":"setup/setting-up-navigation/#keyboard-shortcuts","text":"Source \u00b7 Difficulty: easy Material for MkDocs includes several keyboard shortcuts that make it possible to navigate your project documentation via keyboard. There're two modes: search This mode is active when the search is focused . It provides several key bindings to make search accessible and navigable via keyboard: Down , Up : select next / previous result Esc , Tab : close search dialog Enter : follow selected result global This mode is active when search is not focussed and when there's no other focussed element that is susceptible to keyboard input. The following keys are bound: F , S , / : open search dialog P , , : go to previous page N , . : go to next page Let's say you want to bind some action to the X key. By using additional JavaScript , you can subscribe to the keyboard$ observable and attach your custom event listener: keyboard$ . subscribe ( function ( key ) { if ( key . mode === \"global\" && key . type === \"x\" ) { /* Add custom keyboard handler here */ key . claim () } }) The call to key . claim () will essentially execute preventDefault () on the underlying event, so the keypress will not propagate further and touch other event listeners.","title":"Keyboard shortcuts"},{"location":"setup/setting-up-navigation/#content-area-width","text":"Source \u00b7 Difficulty: easy The width of the content area is set so the length of each line doesn't exceed 80-100 characters, depending on the width of the characters. While this is a reasonable default, as longer lines tend to be harder to read, it may be desirable to increase the overall width of the content area, or even make it stretch to the entire available space. This can easily be achieved with an additional stylesheet and a few lines of CSS: Increase width . md-grid { max-width : 1440 px ; } Stretch to fit . md-grid { max-width : initial ; } Prior to version 6.2, navigation tabs had a slightly different behavior. All top-level pages (i.e. all top-level entries that directly refer to an *.md file) defined inside the nav entry of mkdocs.yml were grouped under the first tab which received the title of the first page. This made it impossible to include a top-level page (or external link) as a tab item, as was reported in #1884 and #2072 . From version 6.2 on, navigation tabs include all top-level pages and sections. \u21a9 If you don't want to use the native integration, the mkdocs-section-index plugin might be an alternative. However, note that this plugin may not be compatible with all navigation-related features offered by Material for MkDocs. \u21a9","title":"Content area width"},{"location":"setup/setting-up-site-analytics/","text":"Setting up site analytics \u00b6 As with any other service offered on the web, understanding how your project documentation is actually used can be an essential success factor. While Material for MkDocs natively integrates with Google Analytics , other analytics providers can be used, too. Configuration \u00b6 Google Analytics \u00b6 Source \u00b7 Default: none After heading over to your Google Analytics account to create a new property in order to obtain a unique tracking id of the form UA-XXXXXXXX-X , add it to mkdocs.yml : google_analytics : - UA-XXXXXXXX-X - auto Site search tracking \u00b6 Besides basic page views, site search can also be tracked to understand better how people use your documentation and what they expect to find. To enable search tracking: Go to your Google Analytics admin settings Select the property for the respective tracking code Go to the view settings tab. Scroll down and enable site search settings Set the query parameter to q . Customization \u00b6 Other analytics providers \u00b6 Source \u00b7 Difficulty: easy In order to integrate another analytics service provider offering an asynchronous JavaScript-based tracking solution, you can extend the theme and override the analytics block : {% block analytics %} <!-- Add custom analytics integration here --> {% endblock %} If you're using instant loading , you may use the location$ observable, which will emit the current URL to listen for navigation events and register a page view event with: location$ . subscribe ( function ( url ) { /* Add custom page event tracking here */ }) Note that this must be integrated with additional JavaScript , and cannot be included as part of the analytics block, as it is included in the head of the document.","title":"Setting up site analytics"},{"location":"setup/setting-up-site-analytics/#setting-up-site-analytics","text":"As with any other service offered on the web, understanding how your project documentation is actually used can be an essential success factor. While Material for MkDocs natively integrates with Google Analytics , other analytics providers can be used, too.","title":"Setting up site analytics"},{"location":"setup/setting-up-site-analytics/#configuration","text":"","title":"Configuration"},{"location":"setup/setting-up-site-analytics/#google-analytics","text":"Source \u00b7 Default: none After heading over to your Google Analytics account to create a new property in order to obtain a unique tracking id of the form UA-XXXXXXXX-X , add it to mkdocs.yml : google_analytics : - UA-XXXXXXXX-X - auto","title":"Google Analytics"},{"location":"setup/setting-up-site-analytics/#site-search-tracking","text":"Besides basic page views, site search can also be tracked to understand better how people use your documentation and what they expect to find. To enable search tracking: Go to your Google Analytics admin settings Select the property for the respective tracking code Go to the view settings tab. Scroll down and enable site search settings Set the query parameter to q .","title":"Site search tracking"},{"location":"setup/setting-up-site-analytics/#customization","text":"","title":"Customization"},{"location":"setup/setting-up-site-analytics/#other-analytics-providers","text":"Source \u00b7 Difficulty: easy In order to integrate another analytics service provider offering an asynchronous JavaScript-based tracking solution, you can extend the theme and override the analytics block : {% block analytics %} <!-- Add custom analytics integration here --> {% endblock %} If you're using instant loading , you may use the location$ observable, which will emit the current URL to listen for navigation events and register a page view event with: location$ . subscribe ( function ( url ) { /* Add custom page event tracking here */ }) Note that this must be integrated with additional JavaScript , and cannot be included as part of the analytics block, as it is included in the head of the document.","title":"Other analytics providers"},{"location":"setup/setting-up-site-search/","text":"Setting up site search \u00b6 Material for MkDocs provides an excellent, client-side search implementation, omitting the need for the integration of third-party services, which might be tricky to integrate to be compliant with data privacy regulations. Moreover, with some effort, search can be made available offline . Configuration \u00b6 Built-in search \u00b6 Source \u00b7 Plugin The built-in search plugin integrates seamlessly with Material for MkDocs, adding multilingual client-side search with lunr and lunr-languages . It's enabled by default, but must be re-added to mkdocs.yml when other plugins are used: plugins : - search The following options are supported: lang Default: automatically set \u2013 This option allows to include the language-specific stemmers provided by lunr-languages . Note that Material for MkDocs will set this automatically based on the site language , but it may be overridden, e.g. to support multiple languages: A single language plugins : - search : lang : ru Multiple languages plugins : - search : lang : - en - ru The following languages are supported: ar \u2013 Arabic da \u2013 Danish du \u2013 Dutch en \u2013 English fi \u2013 Finnish fr \u2013 French de \u2013 German hu \u2013 Hungarian it \u2013 Italian ja \u2013 Japanese no \u2013 Norwegian pt \u2013 Portuguese ro \u2013 Romanian ru \u2013 Russian es \u2013 Spanish sv \u2013 Swedish th \u2013 Thai tr \u2013 Turkish vi \u2013 Vietnamese Material for MkDocs also tries to support languages that are not part of this list by choosing the stemmer yielding the best result automatically . Only specify the languages you really need Be aware that including support for other languages increases the general JavaScript payload by around 20kb (before gzip ) and by another 15-30kb per language. separator Default: automatically set \u2013 The separator for indexing and query tokenization can be customized, making it possible to index parts of words separated by other characters than whitespace and - , e.g. by including . : plugins : - search : separator : '[\\s\\-\\.]+' prebuild_index Default: false \u00b7 Experimental \u2013 MkDocs can generate a prebuilt index of all pages during build time, which provides performance improvements at the cost of more bandwidth, as it reduces the build time of the search index: plugins : - search : prebuild_index : true This may be beneficial for large documentation projects served with appropriate headers, i.e. Content-Encoding: gzip , but benchmarking before deployment is recommended. Material for MkDocs doesn't provide official support for the other options of this plugin, so they may be supported but might yield unexpected results. Use them at your own risk. Search suggestions \u00b6 Source \u00b7 Feature flag \u00b7 Experimental \u00b7 Insiders only When search suggestions are enabled, the search will display the likeliest completion for the last word, saving the user many key strokes by accepting the suggestion with the Right key. Add the following lines to mkdocs.yml : theme : features : - search.suggest Searching for search su yields search suggestions as a suggestion: A demo is worth a thousand words \u2014 check it out at squidfunk.github.io/mkdocs-material-insiders Search highlighting \u00b6 Source \u00b7 Feature flag \u00b7 Experimental \u00b7 Insiders only When search highlighting is enabled and a user clicks on a search result, Material for MkDocs will highlight all occurrences after following the link. Add the following lines to mkdocs.yml : theme : features : - search.highlight Searching for code highlighting yields: A demo is worth a thousand words \u2014 check it out at squidfunk.github.io/mkdocs-material-insiders Search sharing \u00b6 Source \u00b7 Feature flag \u00b7 Experimental \u00b7 Insiders only When search sharing is activated, a share button is rendered next to the reset button, which allows to deep link to the current search query and result. Add the following lines to mkdocs.yml : theme : features : - search.share When a user clicks the share button, the URL is automatically copied to the clipboard. A demo is worth a thousand words \u2014 check it out at squidfunk.github.io/mkdocs-material-insiders Offline search \u00b6 Source \u00b7 Plugin \u00b7 Experimental If you distribute your documentation as *.html files, the built-in search will not work out-of-the-box due to the restrictions modern browsers impose for security reasons. This can be mitigated with the localsearch plugin in combination with @squidfunk 's iframe-worker polyfill. For setup instructions, refer to the official documentation . Tip When distributing documentation as HTML files to be opened from the file system, you will also want to set use_directory_urls: false in mkdocs.yml to make page links function correctly. Usage \u00b6 Boosting a page \u00b6 Source \u00b7 Metadata \u00b7 Insiders only In order to give specific pages a higher relevance in search, lunr supports page-specific boosts, which can be defined for each page by leveraging the Metadata extension: --- search: boost: 100 --- # Document title ... Customization \u00b6 The search implementation of Material for MkDocs is probably its most sophisticated feature, as it tries to balance a great typeahead experience , good performance , accessibility , and a result list that is easy to scan . This is where Material for MkDocs deviates from other themes. The following section explains how search can be customized to tailor it to your needs. Query transformation \u00b6 Source \u00b7 Difficulty: easy When a user enters a query into the search box, the query is pre-processed before it is submitted to the search index. Material for MkDocs will apply the following transformations, which can be customized by extending the theme : /** * Default transformation function * * 1. Search for terms in quotation marks and prepend a `+` modifier to denote * that the resulting document must contain all terms, converting the query * to an `AND` query (as opposed to the default `OR` behavior). While users * may expect terms enclosed in quotation marks to map to span queries, i.e. * for which order is important, `lunr` doesn't support them, so the best * we can do is to convert the terms to an `AND` query. * * 2. Replace control characters which are not located at the beginning of the * query or preceded by white space, or are not followed by a non-whitespace * character or are at the end of the query string. Furthermore, filter * unmatched quotation marks. * * 3. Trim excess whitespace from left and right. * * @param query - Query value * * @returns Transformed query value */ export function defaultTransform ( query : string ) : string { return query . split ( /\"([^\"]+)\"/g ) /* => 1 */ . map (( terms , index ) => index & 1 ? terms . replace ( /^\\b|^(?![^\\x00-\\x7F]|$)|\\s+/g , \" +\" ) : terms ) . join ( \"\" ) . replace ( /\"|(?:^|\\s+)[*+\\-:^~]+(?=\\s+|$)/g , \"\" ) /* => 2 */ . trim () /* => 3 */ } If you want to switch to the default behavior of the mkdocs and readthedocs themes, both of which don't transform the query prior to submission, or customize the transform function, you can do this by overriding the config block : {% block config %} {{ super() }} < script > var __search = { transform : function ( query ) { return query } } </ script > {% endblock %} The transform function will receive the query string as entered by the user and must return the processed query string to be submitted to the search index. Custom search \u00b6 Source \u00b7 Difficulty: challenging Material for MkDocs implements search as part of a web worker . If you want to switch the web worker with your own implementation, e.g. to submit search to an external service, you can add a custom JavaScript file to the docs directory and override the config block : {% block config %} {{ super() }} < script > var __search = { worker : \"<url>\" } </ script > {% endblock %} Communication with the search worker is implemented using a designated message format using discriminated unions , i.e. through the type property of the message. See the following interface definitions to learn about the message formats: SearchMessage SearchIndex and SearchResult The sequence and direction of messages is rather intuitive: SearchSetupMessage SearchReadyMessage SearchQueryMessage SearchResultMessage","title":"Setting up site search"},{"location":"setup/setting-up-site-search/#setting-up-site-search","text":"Material for MkDocs provides an excellent, client-side search implementation, omitting the need for the integration of third-party services, which might be tricky to integrate to be compliant with data privacy regulations. Moreover, with some effort, search can be made available offline .","title":"Setting up site search"},{"location":"setup/setting-up-site-search/#configuration","text":"","title":"Configuration"},{"location":"setup/setting-up-site-search/#built-in-search","text":"Source \u00b7 Plugin The built-in search plugin integrates seamlessly with Material for MkDocs, adding multilingual client-side search with lunr and lunr-languages . It's enabled by default, but must be re-added to mkdocs.yml when other plugins are used: plugins : - search The following options are supported: lang Default: automatically set \u2013 This option allows to include the language-specific stemmers provided by lunr-languages . Note that Material for MkDocs will set this automatically based on the site language , but it may be overridden, e.g. to support multiple languages: A single language plugins : - search : lang : ru Multiple languages plugins : - search : lang : - en - ru The following languages are supported: ar \u2013 Arabic da \u2013 Danish du \u2013 Dutch en \u2013 English fi \u2013 Finnish fr \u2013 French de \u2013 German hu \u2013 Hungarian it \u2013 Italian ja \u2013 Japanese no \u2013 Norwegian pt \u2013 Portuguese ro \u2013 Romanian ru \u2013 Russian es \u2013 Spanish sv \u2013 Swedish th \u2013 Thai tr \u2013 Turkish vi \u2013 Vietnamese Material for MkDocs also tries to support languages that are not part of this list by choosing the stemmer yielding the best result automatically . Only specify the languages you really need Be aware that including support for other languages increases the general JavaScript payload by around 20kb (before gzip ) and by another 15-30kb per language. separator Default: automatically set \u2013 The separator for indexing and query tokenization can be customized, making it possible to index parts of words separated by other characters than whitespace and - , e.g. by including . : plugins : - search : separator : '[\\s\\-\\.]+' prebuild_index Default: false \u00b7 Experimental \u2013 MkDocs can generate a prebuilt index of all pages during build time, which provides performance improvements at the cost of more bandwidth, as it reduces the build time of the search index: plugins : - search : prebuild_index : true This may be beneficial for large documentation projects served with appropriate headers, i.e. Content-Encoding: gzip , but benchmarking before deployment is recommended. Material for MkDocs doesn't provide official support for the other options of this plugin, so they may be supported but might yield unexpected results. Use them at your own risk.","title":"Built-in search"},{"location":"setup/setting-up-site-search/#search-suggestions","text":"Source \u00b7 Feature flag \u00b7 Experimental \u00b7 Insiders only When search suggestions are enabled, the search will display the likeliest completion for the last word, saving the user many key strokes by accepting the suggestion with the Right key. Add the following lines to mkdocs.yml : theme : features : - search.suggest Searching for search su yields search suggestions as a suggestion: A demo is worth a thousand words \u2014 check it out at squidfunk.github.io/mkdocs-material-insiders","title":"Search suggestions"},{"location":"setup/setting-up-site-search/#search-highlighting","text":"Source \u00b7 Feature flag \u00b7 Experimental \u00b7 Insiders only When search highlighting is enabled and a user clicks on a search result, Material for MkDocs will highlight all occurrences after following the link. Add the following lines to mkdocs.yml : theme : features : - search.highlight Searching for code highlighting yields: A demo is worth a thousand words \u2014 check it out at squidfunk.github.io/mkdocs-material-insiders","title":"Search highlighting"},{"location":"setup/setting-up-site-search/#search-sharing","text":"Source \u00b7 Feature flag \u00b7 Experimental \u00b7 Insiders only When search sharing is activated, a share button is rendered next to the reset button, which allows to deep link to the current search query and result. Add the following lines to mkdocs.yml : theme : features : - search.share When a user clicks the share button, the URL is automatically copied to the clipboard. A demo is worth a thousand words \u2014 check it out at squidfunk.github.io/mkdocs-material-insiders","title":"Search sharing"},{"location":"setup/setting-up-site-search/#offline-search","text":"Source \u00b7 Plugin \u00b7 Experimental If you distribute your documentation as *.html files, the built-in search will not work out-of-the-box due to the restrictions modern browsers impose for security reasons. This can be mitigated with the localsearch plugin in combination with @squidfunk 's iframe-worker polyfill. For setup instructions, refer to the official documentation . Tip When distributing documentation as HTML files to be opened from the file system, you will also want to set use_directory_urls: false in mkdocs.yml to make page links function correctly.","title":"Offline search"},{"location":"setup/setting-up-site-search/#usage","text":"","title":"Usage"},{"location":"setup/setting-up-site-search/#boosting-a-page","text":"Source \u00b7 Metadata \u00b7 Insiders only In order to give specific pages a higher relevance in search, lunr supports page-specific boosts, which can be defined for each page by leveraging the Metadata extension: --- search: boost: 100 --- # Document title ...","title":"Boosting a page"},{"location":"setup/setting-up-site-search/#customization","text":"The search implementation of Material for MkDocs is probably its most sophisticated feature, as it tries to balance a great typeahead experience , good performance , accessibility , and a result list that is easy to scan . This is where Material for MkDocs deviates from other themes. The following section explains how search can be customized to tailor it to your needs.","title":"Customization"},{"location":"setup/setting-up-site-search/#query-transformation","text":"Source \u00b7 Difficulty: easy When a user enters a query into the search box, the query is pre-processed before it is submitted to the search index. Material for MkDocs will apply the following transformations, which can be customized by extending the theme : /** * Default transformation function * * 1. Search for terms in quotation marks and prepend a `+` modifier to denote * that the resulting document must contain all terms, converting the query * to an `AND` query (as opposed to the default `OR` behavior). While users * may expect terms enclosed in quotation marks to map to span queries, i.e. * for which order is important, `lunr` doesn't support them, so the best * we can do is to convert the terms to an `AND` query. * * 2. Replace control characters which are not located at the beginning of the * query or preceded by white space, or are not followed by a non-whitespace * character or are at the end of the query string. Furthermore, filter * unmatched quotation marks. * * 3. Trim excess whitespace from left and right. * * @param query - Query value * * @returns Transformed query value */ export function defaultTransform ( query : string ) : string { return query . split ( /\"([^\"]+)\"/g ) /* => 1 */ . map (( terms , index ) => index & 1 ? terms . replace ( /^\\b|^(?![^\\x00-\\x7F]|$)|\\s+/g , \" +\" ) : terms ) . join ( \"\" ) . replace ( /\"|(?:^|\\s+)[*+\\-:^~]+(?=\\s+|$)/g , \"\" ) /* => 2 */ . trim () /* => 3 */ } If you want to switch to the default behavior of the mkdocs and readthedocs themes, both of which don't transform the query prior to submission, or customize the transform function, you can do this by overriding the config block : {% block config %} {{ super() }} < script > var __search = { transform : function ( query ) { return query } } </ script > {% endblock %} The transform function will receive the query string as entered by the user and must return the processed query string to be submitted to the search index.","title":"Query transformation"},{"location":"setup/setting-up-site-search/#custom-search","text":"Source \u00b7 Difficulty: challenging Material for MkDocs implements search as part of a web worker . If you want to switch the web worker with your own implementation, e.g. to submit search to an external service, you can add a custom JavaScript file to the docs directory and override the config block : {% block config %} {{ super() }} < script > var __search = { worker : \"<url>\" } </ script > {% endblock %} Communication with the search worker is implemented using a designated message format using discriminated unions , i.e. through the type property of the message. See the following interface definitions to learn about the message formats: SearchMessage SearchIndex and SearchResult The sequence and direction of messages is rather intuitive: SearchSetupMessage SearchReadyMessage SearchQueryMessage SearchResultMessage","title":"Custom search"},{"location":"setup/setting-up-tags/","text":"Setting up tags \u00b6 Material for MkDocs adds first-class support for categorizing pages with tags, which adds the possibility to group related pages and make them discoverable via search and a dedicated tags index. If your documentation is large, tags can help to discover relevant information faster. Configuration \u00b6 Built-in tags \u00b6 Source \u00b7 Plugin \u00b7 Experimental \u00b7 Insiders only The built-in tags plugin adds the ability to categorize any page with tags as part of the front matter of the page. In order to add support for tags, add the following lines to mkdocs.yml : plugins : - tags Note that no third-party plugin 1 needs to be installed, as Material for MkDocs provides its own implementation to allow for a meaningful integration. The following options are available: tags_file Default: none \u2013 This option specifies which file should be used to render the tags index. See the section on adding a tags index for more information. If this option is specified, tags will become clickable, pointing to the corresponding section in the tags index: plugins : - tags : tags_file : tags.md The page holding the tags index can be linked anywhere in the nav section of mkdocs.yml . Note, however, that this options is not required. If this option is not specified, tags are still rendered and searchable, but without a tags index. Usage \u00b6 Adding tags \u00b6 Source \u00b7 Metadata If both, the built-in tags plugin and Metadata extension are enabled, tags can be added for any page as part of the front matter, e.g. to add the tags insiders and brand new to this page, add: --- tags : - insiders - brand new --- ... The page will now render with those tags above the main headline and within the search preview, which now allows to find pages by tags , as shown in the following screenshots: Tags Tag search Adding a tags index \u00b6 The built-in tags plugin allows to define a file to render a tags index , which can be any page that is part of the nav section. To add a tags index, create a page, e.g. tags.md : # Tags Following is a list of relevant tags: [TAGS] The [TAGS] marker specifies the position of the tags index, i.e. it is replaced with the actual tags index when the page is rendered. You can include arbitrary content before and after the marker: Hiding the tags \u00b6 Source \u00b7 Metadata While the tags are rendered above the main headline, sometimes, it might be desirable to hide them for a specific page, which can be achieved by using the Metadata extension: --- hide: - tags --- # Document title ... The built-in tags plugin has no affiliation with mkdocs-plugin-tags , another option to add tag support to MkDocs, which has several caveats: it requires a title set in the front matter for every page for which tags should be added, doesn't support all syntactic flavors of front matter, doesn't integrate tags in search and doesn't render tags on pages without additional effort. The built-in tags plugin supports all of these features out-of-the-box. \u21a9","title":"Setting up tags"},{"location":"setup/setting-up-tags/#setting-up-tags","text":"Material for MkDocs adds first-class support for categorizing pages with tags, which adds the possibility to group related pages and make them discoverable via search and a dedicated tags index. If your documentation is large, tags can help to discover relevant information faster.","title":"Setting up tags"},{"location":"setup/setting-up-tags/#configuration","text":"","title":"Configuration"},{"location":"setup/setting-up-tags/#built-in-tags","text":"Source \u00b7 Plugin \u00b7 Experimental \u00b7 Insiders only The built-in tags plugin adds the ability to categorize any page with tags as part of the front matter of the page. In order to add support for tags, add the following lines to mkdocs.yml : plugins : - tags Note that no third-party plugin 1 needs to be installed, as Material for MkDocs provides its own implementation to allow for a meaningful integration. The following options are available: tags_file Default: none \u2013 This option specifies which file should be used to render the tags index. See the section on adding a tags index for more information. If this option is specified, tags will become clickable, pointing to the corresponding section in the tags index: plugins : - tags : tags_file : tags.md The page holding the tags index can be linked anywhere in the nav section of mkdocs.yml . Note, however, that this options is not required. If this option is not specified, tags are still rendered and searchable, but without a tags index.","title":"Built-in tags"},{"location":"setup/setting-up-tags/#usage","text":"","title":"Usage"},{"location":"setup/setting-up-tags/#adding-tags","text":"Source \u00b7 Metadata If both, the built-in tags plugin and Metadata extension are enabled, tags can be added for any page as part of the front matter, e.g. to add the tags insiders and brand new to this page, add: --- tags : - insiders - brand new --- ... The page will now render with those tags above the main headline and within the search preview, which now allows to find pages by tags , as shown in the following screenshots: Tags Tag search","title":"Adding tags"},{"location":"setup/setting-up-tags/#adding-a-tags-index","text":"The built-in tags plugin allows to define a file to render a tags index , which can be any page that is part of the nav section. To add a tags index, create a page, e.g. tags.md : # Tags Following is a list of relevant tags: [TAGS] The [TAGS] marker specifies the position of the tags index, i.e. it is replaced with the actual tags index when the page is rendered. You can include arbitrary content before and after the marker:","title":"Adding a tags index"},{"location":"setup/setting-up-tags/#hiding-the-tags","text":"Source \u00b7 Metadata While the tags are rendered above the main headline, sometimes, it might be desirable to hide them for a specific page, which can be achieved by using the Metadata extension: --- hide: - tags --- # Document title ... The built-in tags plugin has no affiliation with mkdocs-plugin-tags , another option to add tag support to MkDocs, which has several caveats: it requires a title set in the front matter for every page for which tags should be added, doesn't support all syntactic flavors of front matter, doesn't integrate tags in search and doesn't render tags on pages without additional effort. The built-in tags plugin supports all of these features out-of-the-box. \u21a9","title":"Hiding the tags"},{"location":"setup/setting-up-the-footer/","text":"Setting up the footer \u00b6 The footer of your project documentation is a great place to add links to websites or platforms you or your company are using as additional marketing channels, e.g. , or , which can be configured via mkdocs.yml . Configuration \u00b6 Social links \u00b6 Source \u00b7 Default: none All social links are rendered next to the copyright information as part of the footer of your project documentation. Add a list of social links in mkdocs.yml with: extra : social : - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk For each entry, the following fields are available: icon Default: none \u00b7 Required \u2013 This field must point to a valid icon path referencing any icon bundled with the theme , or the build will not succeed. Some popular choices: \u2013 fontawesome/brands/behance \u2013 fontawesome/brands/docker \u2013 fontawesome/brands/github \u2013 fontawesome/brands/instagram \u2013 fontawesome/brands/linkedin \u2013 fontawesome/brands/medium \u2013 fontawesome/brands/pied-piper-alt \u2013 fontawesome/brands/product-hunt \u2013 fontawesome/brands/slack \u2013 fontawesome/brands/twitter link Default: none \u00b7 Required \u2013 This field must contain a valid relative or absolute URL including the URI scheme. All URI schemes are supported, including mailto and bitcoin : Twitter extra : social : - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk Email address extra : social : - icon : fontawesome/solid/paper-plane link : mailto:<email-address> name Default: domain name from link , if available \u2013 This field is used as the link's title attribute and can be set to a discernable name to improve accessibility: extra : social : - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk name : squidfunk on Twitter Copyright notice \u00b6 Source \u00b7 Default: none A custom copyright banner can be rendered as part of the footer, which is displayed next to the social links. It can be defined as part of mkdocs.yml : copyright : Copyright &copy; 2016 - 2020 Martin Donath Remove generator \u00b6 Source \u00b7 Insiders only The footer displays a Made with Material for MkDocs notice to denote how the site was generated. The notice can be removed with the following setting via mkdocs.yml : extra : generator : false Customization \u00b6 Custom icons \u00b6 Source \u00b7 Difficulty: easy The social links feature uses the standard icon integration of Material for MkDocs. If you want to use custom icons, follow the guide explaining how to add additional icons .","title":"Setting up the footer"},{"location":"setup/setting-up-the-footer/#setting-up-the-footer","text":"The footer of your project documentation is a great place to add links to websites or platforms you or your company are using as additional marketing channels, e.g. , or , which can be configured via mkdocs.yml .","title":"Setting up the footer"},{"location":"setup/setting-up-the-footer/#configuration","text":"","title":"Configuration"},{"location":"setup/setting-up-the-footer/#social-links","text":"Source \u00b7 Default: none All social links are rendered next to the copyright information as part of the footer of your project documentation. Add a list of social links in mkdocs.yml with: extra : social : - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk For each entry, the following fields are available: icon Default: none \u00b7 Required \u2013 This field must point to a valid icon path referencing any icon bundled with the theme , or the build will not succeed. Some popular choices: \u2013 fontawesome/brands/behance \u2013 fontawesome/brands/docker \u2013 fontawesome/brands/github \u2013 fontawesome/brands/instagram \u2013 fontawesome/brands/linkedin \u2013 fontawesome/brands/medium \u2013 fontawesome/brands/pied-piper-alt \u2013 fontawesome/brands/product-hunt \u2013 fontawesome/brands/slack \u2013 fontawesome/brands/twitter link Default: none \u00b7 Required \u2013 This field must contain a valid relative or absolute URL including the URI scheme. All URI schemes are supported, including mailto and bitcoin : Twitter extra : social : - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk Email address extra : social : - icon : fontawesome/solid/paper-plane link : mailto:<email-address> name Default: domain name from link , if available \u2013 This field is used as the link's title attribute and can be set to a discernable name to improve accessibility: extra : social : - icon : fontawesome/brands/twitter link : https://twitter.com/squidfunk name : squidfunk on Twitter","title":"Social links"},{"location":"setup/setting-up-the-footer/#copyright-notice","text":"Source \u00b7 Default: none A custom copyright banner can be rendered as part of the footer, which is displayed next to the social links. It can be defined as part of mkdocs.yml : copyright : Copyright &copy; 2016 - 2020 Martin Donath","title":"Copyright notice"},{"location":"setup/setting-up-the-footer/#remove-generator","text":"Source \u00b7 Insiders only The footer displays a Made with Material for MkDocs notice to denote how the site was generated. The notice can be removed with the following setting via mkdocs.yml : extra : generator : false","title":"Remove generator"},{"location":"setup/setting-up-the-footer/#customization","text":"","title":"Customization"},{"location":"setup/setting-up-the-footer/#custom-icons","text":"Source \u00b7 Difficulty: easy The social links feature uses the standard icon integration of Material for MkDocs. If you want to use custom icons, follow the guide explaining how to add additional icons .","title":"Custom icons"},{"location":"setup/setting-up-the-header/","text":"Setting up the header \u00b6 Material for MkDocs' header can be customized to show an announcement bar that disappears upon scrolling, and provides some options for further configuration. It also includes the search bar and a place to display your project's git repository , as explained in those dedicated guides. Configuration \u00b6 Automatic hiding \u00b6 Source \u00b7 Feature flag When autohiding is enabled, the header is automatically hidden when the user scrolls past a certain threshold, leaving more space for content. Add the following lines to mkdocs.yml : theme : features : - header.autohide Customization \u00b6 Announcement bar \u00b6 Material for MkDocs includes an announcement bar, which is the perfect place to display project news or other important information to the user. When the user scrolls past the header, the bar will automatically disappear. In order to add an announcement bar, extend the theme and override the announce block , which is empty by default: {% block announce %} <!-- Add your announcement here, including arbitrary HTML --> {% endblock %}","title":"Setting up the header"},{"location":"setup/setting-up-the-header/#setting-up-the-header","text":"Material for MkDocs' header can be customized to show an announcement bar that disappears upon scrolling, and provides some options for further configuration. It also includes the search bar and a place to display your project's git repository , as explained in those dedicated guides.","title":"Setting up the header"},{"location":"setup/setting-up-the-header/#configuration","text":"","title":"Configuration"},{"location":"setup/setting-up-the-header/#automatic-hiding","text":"Source \u00b7 Feature flag When autohiding is enabled, the header is automatically hidden when the user scrolls past a certain threshold, leaving more space for content. Add the following lines to mkdocs.yml : theme : features : - header.autohide","title":"Automatic hiding"},{"location":"setup/setting-up-the-header/#customization","text":"","title":"Customization"},{"location":"setup/setting-up-the-header/#announcement-bar","text":"Material for MkDocs includes an announcement bar, which is the perfect place to display project news or other important information to the user. When the user scrolls past the header, the bar will automatically disappear. In order to add an announcement bar, extend the theme and override the announce block , which is empty by default: {% block announce %} <!-- Add your announcement here, including arbitrary HTML --> {% endblock %}","title":"Announcement bar"},{"location":"setup/setting-up-versioning/","text":"Setting up versioning \u00b6 Material for MkDocs makes it easy to deploy multiple versions of your project documentation by integrating with external utilities that add those capabilities to MkDocs, i.e. mike . When deploying a new version, older versions of your documentation remain untouched. Configuration \u00b6 Versioning \u00b6 Source \u00b7 Utility mike makes it easy to deploy multiple versions of your project documentation. It integrates natively with Material for MkDocs and can be enabled via mkdocs.yml : extra : version : provider : mike This will render a version selector in the header next to the title of your project: A demo is worth a thousand words \u2014 check it out at squidfunk.github.io/mkdocs-material-example-versioning Why use mike? mike is built around the idea that once you've generated your docs for a particular version, you should never need to touch that version again. This means you never have to worry about breaking changes in MkDocs, since your old docs (built with an old version of MkDocs) are already generated and sitting in your gh-pages branch. While mike is flexible, it's optimized around putting your docs in a <major>.<minor> directory, with optional aliases (e.g. latest or dev ) to particularly notable versions. This makes it easy to make permalinks to whatever version of the documentation you want to direct people to. Note that you don't need to run mike install-extras as noted in the official documentation , as mike is now natively integrated with Material for MkDocs. Version warning \u00b6 Source \u00b7 Insiders only If you're using versioning, you might want to display a warning when the user visits any other version than the latest version. Using theme extension , you can define the outdated block : {% block outdated %} You're not viewing the latest version. < a href = \"{{ '../' ~ base_url }}\" > < strong > Click here to go to latest. </ strong > </ a > {% endblock %} This will render a version warning above the header: By default, the default version is identified by the latest alias. If you wish to set another alias as the latest version, e.g. stable , add the following to mkdocs.yml : extra : version : default : stable Make sure that this matches the default version . Stay on page \u00b6 Source \u00b7 Insiders only Insiders improves the user experience when switching between versions: if version A and B contain a page with the same path name, the user will stay on the current page: New behavior docs.example.com/0.1/ -> docs.example.com/0.2/ docs.example.com/0.1/foo/ -> docs.example.com/0.2/foo/ docs.example.com/0.1/bar/ -> docs.example.com/0.2/bar/ Old behavior docs.example.com/0.1/ -> docs.example.com/0.2/ docs.example.com/0.1/foo/ -> docs.example.com/0.2/ docs.example.com/0.1/bar/ -> docs.example.com/0.2/ A demo is worth a thousand words \u2014 check it out at squidfunk.github.io/mkdocs-material-example-versioning Usage \u00b6 While this section outlines the basic workflow for publishing new versions, it's best to check out the official documentation to make yourself familar with mike . Publishing a new version \u00b6 If you want to publish a new version of your project documentation, choose a version identifier and update the alias set as the default version with: mike deploy --push --update-aliases 0.1 latest Note that every version will be deployed as a subdirectory of your site_url , e.g.: docs.example.com/0.1/ docs.example.com/0.2/ ... Setting a default version \u00b6 When starting with mike , a good idea is to set an alias as a default version, e.g. latest , and when publishing a new version, always update the alias to point to the latest version: mike set-default --push latest When publishing a new version, mike will create a redirect in the root of your project documentation to the version associated with the alias: docs.example.com docs.example.com/0.1","title":"Setting up versioning"},{"location":"setup/setting-up-versioning/#setting-up-versioning","text":"Material for MkDocs makes it easy to deploy multiple versions of your project documentation by integrating with external utilities that add those capabilities to MkDocs, i.e. mike . When deploying a new version, older versions of your documentation remain untouched.","title":"Setting up versioning"},{"location":"setup/setting-up-versioning/#configuration","text":"","title":"Configuration"},{"location":"setup/setting-up-versioning/#versioning","text":"Source \u00b7 Utility mike makes it easy to deploy multiple versions of your project documentation. It integrates natively with Material for MkDocs and can be enabled via mkdocs.yml : extra : version : provider : mike This will render a version selector in the header next to the title of your project: A demo is worth a thousand words \u2014 check it out at squidfunk.github.io/mkdocs-material-example-versioning Why use mike? mike is built around the idea that once you've generated your docs for a particular version, you should never need to touch that version again. This means you never have to worry about breaking changes in MkDocs, since your old docs (built with an old version of MkDocs) are already generated and sitting in your gh-pages branch. While mike is flexible, it's optimized around putting your docs in a <major>.<minor> directory, with optional aliases (e.g. latest or dev ) to particularly notable versions. This makes it easy to make permalinks to whatever version of the documentation you want to direct people to. Note that you don't need to run mike install-extras as noted in the official documentation , as mike is now natively integrated with Material for MkDocs.","title":"Versioning"},{"location":"setup/setting-up-versioning/#version-warning","text":"Source \u00b7 Insiders only If you're using versioning, you might want to display a warning when the user visits any other version than the latest version. Using theme extension , you can define the outdated block : {% block outdated %} You're not viewing the latest version. < a href = \"{{ '../' ~ base_url }}\" > < strong > Click here to go to latest. </ strong > </ a > {% endblock %} This will render a version warning above the header: By default, the default version is identified by the latest alias. If you wish to set another alias as the latest version, e.g. stable , add the following to mkdocs.yml : extra : version : default : stable Make sure that this matches the default version .","title":"Version warning"},{"location":"setup/setting-up-versioning/#stay-on-page","text":"Source \u00b7 Insiders only Insiders improves the user experience when switching between versions: if version A and B contain a page with the same path name, the user will stay on the current page: New behavior docs.example.com/0.1/ -> docs.example.com/0.2/ docs.example.com/0.1/foo/ -> docs.example.com/0.2/foo/ docs.example.com/0.1/bar/ -> docs.example.com/0.2/bar/ Old behavior docs.example.com/0.1/ -> docs.example.com/0.2/ docs.example.com/0.1/foo/ -> docs.example.com/0.2/ docs.example.com/0.1/bar/ -> docs.example.com/0.2/ A demo is worth a thousand words \u2014 check it out at squidfunk.github.io/mkdocs-material-example-versioning","title":"Stay on page"},{"location":"setup/setting-up-versioning/#usage","text":"While this section outlines the basic workflow for publishing new versions, it's best to check out the official documentation to make yourself familar with mike .","title":"Usage"},{"location":"setup/setting-up-versioning/#publishing-a-new-version","text":"If you want to publish a new version of your project documentation, choose a version identifier and update the alias set as the default version with: mike deploy --push --update-aliases 0.1 latest Note that every version will be deployed as a subdirectory of your site_url , e.g.: docs.example.com/0.1/ docs.example.com/0.2/ ...","title":"Publishing a new version"},{"location":"setup/setting-up-versioning/#setting-a-default-version","text":"When starting with mike , a good idea is to set an alias as a default version, e.g. latest , and when publishing a new version, always update the alias to point to the latest version: mike set-default --push latest When publishing a new version, mike will create a redirect in the root of your project documentation to the version associated with the alias: docs.example.com docs.example.com/0.1","title":"Setting a default version"}]}